sliderLoaded = false;
webpackJsonp([0], [
    /* 0 */
    /***/ (function (module, exports, __webpack_require__) {
        var global = __webpack_require__(3);
        var core = __webpack_require__(25);
        var hide = __webpack_require__(14);
        var redefine = __webpack_require__(11);
        var ctx = __webpack_require__(19);
        var PROTOTYPE = 'prototype';

        var $export = function (type, name, source) {
            var IS_FORCED = type & $export.F;
            var IS_GLOBAL = type & $export.G;
            var IS_STATIC = type & $export.S;
            var IS_PROTO = type & $export.P;
            var IS_BIND = type & $export.B;
            var target = IS_GLOBAL ? global : IS_STATIC ? global[name] || (global[name] = {}) : (global[name] || {})[PROTOTYPE];
            var exports = IS_GLOBAL ? core : core[name] || (core[name] = {});
            var expProto = exports[PROTOTYPE] || (exports[PROTOTYPE] = {});
            var key, own, out, exp;
            if (IS_GLOBAL) source = name;
            for (key in source) {
                // contains in native
                own = !IS_FORCED && target && target[key] !== undefined;
                // export native or passed
                out = (own ? target : source)[key];
                // bind timers to global for call from export context
                exp = IS_BIND && own ? ctx(out, global) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;
                // extend global
                if (target) redefine(target, key, out, type & $export.U);
                // export
                if (exports[key] != out) hide(exports, key, exp);
                if (IS_PROTO && expProto[key] != out) expProto[key] = out;
            }
        };
        global.core = core;
// type bitmap
        $export.F = 1;   // forced
        $export.G = 2;   // global
        $export.S = 4;   // static
        $export.P = 8;   // proto
        $export.B = 16;  // bind
        $export.W = 32;  // wrap
        $export.U = 64;  // safe
        $export.R = 128; // real proto method for `library`
        module.exports = $export;


        /***/
    }),
    /* 1 */
    /***/ (function (module, exports) {

        module.exports = function (exec) {
            try {
                return !!exec();
            } catch (e) {
                return true;
            }
        };


        /***/
    }),
    /* 2 */
    /***/ (function (module, exports) {

        module.exports = function (it) {
            return typeof it === 'object' ? it !== null : typeof it === 'function';
        };


        /***/
    }),
    /* 3 */
    /***/ (function (module, exports) {

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
        var global = module.exports = typeof window != 'undefined' && window.Math == Math
            ? window : typeof self != 'undefined' && self.Math == Math ? self
                // eslint-disable-next-line no-new-func
                : Function('return this')();
        if (typeof __g == 'number') __g = global; // eslint-disable-line no-undef


        /***/
    }),
    /* 4 */
    /***/ (function (module, exports, __webpack_require__) {

        var isObject = __webpack_require__(2);
        module.exports = function (it) {
            if (!isObject(it)) throw TypeError(it + ' is not an object!');
            return it;
        };


        /***/
    }),
    /* 5 */
    /***/ (function (module, exports, __webpack_require__) {

        var store = __webpack_require__(59)('wks');
        var uid = __webpack_require__(30);
        var Symbol = __webpack_require__(3).Symbol;
        var USE_SYMBOL = typeof Symbol == 'function';

        var $exports = module.exports = function (name) {
            return store[name] || (store[name] =
                USE_SYMBOL && Symbol[name] || (USE_SYMBOL ? Symbol : uid)('Symbol.' + name));
        };

        $exports.store = store;


        /***/
    }),
    /* 6 */
    /***/ (function (module, exports, __webpack_require__) {

        var anObject = __webpack_require__(4);
        var IE8_DOM_DEFINE = __webpack_require__(82);
        var toPrimitive = __webpack_require__(26);
        var dP = Object.defineProperty;

        exports.f = __webpack_require__(7) ? Object.defineProperty : function defineProperty(O, P, Attributes) {
            anObject(O);
            P = toPrimitive(P, true);
            anObject(Attributes);
            if (IE8_DOM_DEFINE) try {
                return dP(O, P, Attributes);
            } catch (e) { /* empty */
            }
            if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported!');
            if ('value' in Attributes) O[P] = Attributes.value;
            return O;
        };


        /***/
    }),
    /* 7 */
    /***/ (function (module, exports, __webpack_require__) {

// Thank's IE8 for his funny defineProperty
        module.exports = !__webpack_require__(1)(function () {
            return Object.defineProperty({}, 'a', {
                get: function () {
                    return 7;
                }
            }).a != 7;
        });


        /***/
    }),
    /* 8 */
    /***/ (function (module, exports, __webpack_require__) {

// 7.1.15 ToLength
        var toInteger = __webpack_require__(22);
        var min = Math.min;
        module.exports = function (it) {
            return it > 0 ? min(toInteger(it), 0x1fffffffffffff) : 0; // pow(2, 53) - 1 == 9007199254740991
        };


        /***/
    }),
    /* 9 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);
        var fails = __webpack_require__(1);
        var defined = __webpack_require__(28);
        var quot = /"/g;
// B.2.3.2.1 CreateHTML(string, tag, attribute, value)
        var createHTML = function (string, tag, attribute, value) {
            var S = String(defined(string));
            var p1 = '<' + tag;
            if (attribute !== '') p1 += ' ' + attribute + '="' + String(value).replace(quot, '&quot;') + '"';
            return p1 + '>' + S + '</' + tag + '>';
        };
        module.exports = function (NAME, exec) {
            var O = {};
            O[NAME] = exec(createHTML);
            $export($export.P + $export.F * fails(function () {
                var test = ''[NAME]('"');
                return test !== test.toLowerCase() || test.split('"').length > 3;
            }), 'String', O);
        };


        /***/
    }),
    /* 10 */
    /***/ (function (module, exports) {

        var hasOwnProperty = {}.hasOwnProperty;
        module.exports = function (it, key) {
            return hasOwnProperty.call(it, key);
        };


        /***/
    }),
    /* 11 */
    /***/ (function (module, exports, __webpack_require__) {

        var global = __webpack_require__(3);
        var hide = __webpack_require__(14);
        var has = __webpack_require__(10);
        var SRC = __webpack_require__(30)('src');
        var TO_STRING = 'toString';
        var $toString = Function[TO_STRING];
        var TPL = ('' + $toString).split(TO_STRING);

        __webpack_require__(25).inspectSource = function (it) {
            return $toString.call(it);
        };

        (module.exports = function (O, key, val, safe) {
            var isFunction = typeof val == 'function';
            if (isFunction) has(val, 'name') || hide(val, 'name', key);
            if (O[key] === val) return;
            if (isFunction) has(val, SRC) || hide(val, SRC, O[key] ? '' + O[key] : TPL.join(String(key)));
            if (O === global) {
                O[key] = val;
            } else if (!safe) {
                delete O[key];
                hide(O, key, val);
            } else if (O[key]) {
                O[key] = val;
            } else {
                hide(O, key, val);
            }
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
        })(Function.prototype, TO_STRING, function toString() {
            return typeof this == 'function' && this[SRC] || $toString.call(this);
        });


        /***/
    }),
    /* 12 */
    /***/ (function (module, exports, __webpack_require__) {

// 7.1.13 ToObject(argument)
        var defined = __webpack_require__(28);
        module.exports = function (it) {
            return Object(defined(it));
        };


        /***/
    }),
    /* 13 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var bind = __webpack_require__(116);
        var isBuffer = __webpack_require__(333);

        /*global toString:true*/

// utils is a library of generic helper functions non-specific to axios

        var toString = Object.prototype.toString;

        /**
         * Determine if a value is an Array
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an Array, otherwise false
         */
        function isArray(val) {
            return toString.call(val) === '[object Array]';
        }

        /**
         * Determine if a value is an ArrayBuffer
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an ArrayBuffer, otherwise false
         */
        function isArrayBuffer(val) {
            return toString.call(val) === '[object ArrayBuffer]';
        }

        /**
         * Determine if a value is a FormData
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an FormData, otherwise false
         */
        function isFormData(val) {
            return (typeof FormData !== 'undefined') && (val instanceof FormData);
        }

        /**
         * Determine if a value is a view on an ArrayBuffer
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false
         */
        function isArrayBufferView(val) {
            var result;
            if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {
                result = ArrayBuffer.isView(val);
            } else {
                result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);
            }
            return result;
        }

        /**
         * Determine if a value is a String
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a String, otherwise false
         */
        function isString(val) {
            return typeof val === 'string';
        }

        /**
         * Determine if a value is a Number
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Number, otherwise false
         */
        function isNumber(val) {
            return typeof val === 'number';
        }

        /**
         * Determine if a value is undefined
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if the value is undefined, otherwise false
         */
        function isUndefined(val) {
            return typeof val === 'undefined';
        }

        /**
         * Determine if a value is an Object
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is an Object, otherwise false
         */
        function isObject(val) {
            return val !== null && typeof val === 'object';
        }

        /**
         * Determine if a value is a Date
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Date, otherwise false
         */
        function isDate(val) {
            return toString.call(val) === '[object Date]';
        }

        /**
         * Determine if a value is a File
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a File, otherwise false
         */
        function isFile(val) {
            return toString.call(val) === '[object File]';
        }

        /**
         * Determine if a value is a Blob
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Blob, otherwise false
         */
        function isBlob(val) {
            return toString.call(val) === '[object Blob]';
        }

        /**
         * Determine if a value is a Function
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Function, otherwise false
         */
        function isFunction(val) {
            return toString.call(val) === '[object Function]';
        }

        /**
         * Determine if a value is a Stream
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a Stream, otherwise false
         */
        function isStream(val) {
            return isObject(val) && isFunction(val.pipe);
        }

        /**
         * Determine if a value is a URLSearchParams object
         *
         * @param {Object} val The value to test
         * @returns {boolean} True if value is a URLSearchParams object, otherwise false
         */
        function isURLSearchParams(val) {
            return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;
        }

        /**
         * Trim excess whitespace off the beginning and end of a string
         *
         * @param {String} str The String to trim
         * @returns {String} The String freed of excess whitespace
         */
        function trim(str) {
            return str.replace(/^\s*/, '').replace(/\s*$/, '');
        }

        /**
         * Determine if we're running in a standard browser environment
         *
         * This allows axios to run in a web worker, and react-native.
         * Both environments support XMLHttpRequest, but not fully standard globals.
         *
         * web workers:
         *  typeof window -> undefined
         *  typeof document -> undefined
         *
         * react-native:
         *  navigator.product -> 'ReactNative'
         */
        function isStandardBrowserEnv() {
            if (typeof navigator !== 'undefined' && navigator.product === 'ReactNative') {
                return false;
            }
            return (
                typeof window !== 'undefined' &&
                typeof document !== 'undefined'
            );
        }

        /**
         * Iterate over an Array or an Object invoking a function for each item.
         *
         * If `obj` is an Array callback will be called passing
         * the value, index, and complete array for each item.
         *
         * If 'obj' is an Object callback will be called passing
         * the value, key, and complete object for each property.
         *
         * @param {Object|Array} obj The object to iterate
         * @param {Function} fn The callback to invoke for each item
         */
        function forEach(obj, fn) {
            // Don't bother if no value provided
            if (obj === null || typeof obj === 'undefined') {
                return;
            }

            // Force an array if not already something iterable
            if (typeof obj !== 'object') {
                /*eslint no-param-reassign:0*/
                obj = [obj];
            }

            if (isArray(obj)) {
                // Iterate over array values
                for (var i = 0, l = obj.length; i < l; i++) {
                    fn.call(null, obj[i], i, obj);
                }
            } else {
                // Iterate over object keys
                for (var key in obj) {
                    if (Object.prototype.hasOwnProperty.call(obj, key)) {
                        fn.call(null, obj[key], key, obj);
                    }
                }
            }
        }

        /**
         * Accepts varargs expecting each argument to be an object, then
         * immutably merges the properties of each object and returns result.
         *
         * When multiple objects contain the same key the later object in
         * the arguments list will take precedence.
         *
         * Example:
         *
         * ```js
         * var result = merge({foo: 123}, {foo: 456});
         * console.log(result.foo); // outputs 456
         * ```
         *
         * @param {Object} obj1 Object to merge
         * @returns {Object} Result of all merge properties
         */
        function merge(/* obj1, obj2, obj3, ... */) {
            var result = {};

            function assignValue(val, key) {
                if (typeof result[key] === 'object' && typeof val === 'object') {
                    result[key] = merge(result[key], val);
                } else {
                    result[key] = val;
                }
            }

            for (var i = 0, l = arguments.length; i < l; i++) {
                forEach(arguments[i], assignValue);
            }
            return result;
        }

        /**
         * Extends object a by mutably adding to it the properties of object b.
         *
         * @param {Object} a The object to be extended
         * @param {Object} b The object to copy properties from
         * @param {Object} thisArg The object to bind function to
         * @return {Object} The resulting value of object a
         */
        function extend(a, b, thisArg) {
            forEach(b, function assignValue(val, key) {
                if (thisArg && typeof val === 'function') {
                    a[key] = bind(val, thisArg);
                } else {
                    a[key] = val;
                }
            });
            return a;
        }

        module.exports = {
            isArray: isArray,
            isArrayBuffer: isArrayBuffer,
            isBuffer: isBuffer,
            isFormData: isFormData,
            isArrayBufferView: isArrayBufferView,
            isString: isString,
            isNumber: isNumber,
            isObject: isObject,
            isUndefined: isUndefined,
            isDate: isDate,
            isFile: isFile,
            isBlob: isBlob,
            isFunction: isFunction,
            isStream: isStream,
            isURLSearchParams: isURLSearchParams,
            isStandardBrowserEnv: isStandardBrowserEnv,
            forEach: forEach,
            merge: merge,
            extend: extend,
            trim: trim
        };


        /***/
    }),
    /* 14 */
    /***/ (function (module, exports, __webpack_require__) {

        var dP = __webpack_require__(6);
        var createDesc = __webpack_require__(29);
        module.exports = __webpack_require__(7) ? function (object, key, value) {
            return dP.f(object, key, createDesc(1, value));
        } : function (object, key, value) {
            object[key] = value;
            return object;
        };


        /***/
    }),
    /* 15 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var fails = __webpack_require__(1);

        module.exports = function (method, arg) {
            return !!method && fails(function () {
                // eslint-disable-next-line no-useless-call
                arg ? method.call(null, function () { /* empty */
                }, 1) : method.call(null);
            });
        };


        /***/
    }),
    /* 16 */
    /***/ (function (module, exports, __webpack_require__) {

// to indexed object, toObject with fallback for non-array-like ES3 strings
        var IObject = __webpack_require__(43);
        var defined = __webpack_require__(28);
        module.exports = function (it) {
            return IObject(defined(it));
        };


        /***/
    }),
    /* 17 */
    /***/ (function (module, exports, __webpack_require__) {

// most Object methods by ES6 should accept primitives
        var $export = __webpack_require__(0);
        var core = __webpack_require__(25);
        var fails = __webpack_require__(1);
        module.exports = function (KEY, exec) {
            var fn = (core.Object || {})[KEY] || Object[KEY];
            var exp = {};
            exp[KEY] = exec(fn);
            $export($export.S + $export.F * fails(function () {
                fn(1);
            }), 'Object', exp);
        };


        /***/
    }),
    /* 18 */
    /***/ (function (module, exports, __webpack_require__) {

// 0 -> Array#forEach
// 1 -> Array#map
// 2 -> Array#filter
// 3 -> Array#some
// 4 -> Array#every
// 5 -> Array#find
// 6 -> Array#findIndex
        var ctx = __webpack_require__(19);
        var IObject = __webpack_require__(43);
        var toObject = __webpack_require__(12);
        var toLength = __webpack_require__(8);
        var asc = __webpack_require__(230);
        module.exports = function (TYPE, $create) {
            var IS_MAP = TYPE == 1;
            var IS_FILTER = TYPE == 2;
            var IS_SOME = TYPE == 3;
            var IS_EVERY = TYPE == 4;
            var IS_FIND_INDEX = TYPE == 6;
            var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
            var create = $create || asc;
            return function ($this, callbackfn, that) {
                var O = toObject($this);
                var self = IObject(O);
                var f = ctx(callbackfn, that, 3);
                var length = toLength(self.length);
                var index = 0;
                var result = IS_MAP ? create($this, length) : IS_FILTER ? create($this, 0) : undefined;
                var val, res;
                for (; length > index; index++) if (NO_HOLES || index in self) {
                    val = self[index];
                    res = f(val, index, O);
                    if (TYPE) {
                        if (IS_MAP) result[index] = res;   // map
                        else if (res) switch (TYPE) {
                            case 3:
                                return true;             // some
                            case 5:
                                return val;              // find
                            case 6:
                                return index;            // findIndex
                            case 2:
                                result.push(val);        // filter
                        } else if (IS_EVERY) return false; // every
                    }
                }
                return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : result;
            };
        };


        /***/
    }),
    /* 19 */
    /***/ (function (module, exports, __webpack_require__) {

// optional / simple context binding
        var aFunction = __webpack_require__(20);
        module.exports = function (fn, that, length) {
            aFunction(fn);
            if (that === undefined) return fn;
            switch (length) {
                case 1:
                    return function (a) {
                        return fn.call(that, a);
                    };
                case 2:
                    return function (a, b) {
                        return fn.call(that, a, b);
                    };
                case 3:
                    return function (a, b, c) {
                        return fn.call(that, a, b, c);
                    };
            }
            return function (/* ...args */) {
                return fn.apply(that, arguments);
            };
        };


        /***/
    }),
    /* 20 */
    /***/ (function (module, exports) {

        module.exports = function (it) {
            if (typeof it != 'function') throw TypeError(it + ' is not a function!');
            return it;
        };


        /***/
    }),
    /* 21 */
    /***/ (function (module, exports) {

        var toString = {}.toString;

        module.exports = function (it) {
            return toString.call(it).slice(8, -1);
        };


        /***/
    }),
    /* 22 */
    /***/ (function (module, exports) {

// 7.1.4 ToInteger
        var ceil = Math.ceil;
        var floor = Math.floor;
        module.exports = function (it) {
            return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);
        };


        /***/
    }),
    /* 23 */
    /***/ (function (module, exports, __webpack_require__) {

        var pIE = __webpack_require__(49);
        var createDesc = __webpack_require__(29);
        var toIObject = __webpack_require__(16);
        var toPrimitive = __webpack_require__(26);
        var has = __webpack_require__(10);
        var IE8_DOM_DEFINE = __webpack_require__(82);
        var gOPD = Object.getOwnPropertyDescriptor;

        exports.f = __webpack_require__(7) ? gOPD : function getOwnPropertyDescriptor(O, P) {
            O = toIObject(O);
            P = toPrimitive(P, true);
            if (IE8_DOM_DEFINE) try {
                return gOPD(O, P);
            } catch (e) { /* empty */
            }
            if (has(O, P)) return createDesc(!pIE.f.call(O, P), O[P]);
        };


        /***/
    }),
    /* 24 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        if (__webpack_require__(7)) {
            var LIBRARY = __webpack_require__(31);
            var global = __webpack_require__(3);
            var fails = __webpack_require__(1);
            var $export = __webpack_require__(0);
            var $typed = __webpack_require__(56);
            var $buffer = __webpack_require__(79);
            var ctx = __webpack_require__(19);
            var anInstance = __webpack_require__(39);
            var propertyDesc = __webpack_require__(29);
            var hide = __webpack_require__(14);
            var redefineAll = __webpack_require__(40);
            var toInteger = __webpack_require__(22);
            var toLength = __webpack_require__(8);
            var toIndex = __webpack_require__(109);
            var toAbsoluteIndex = __webpack_require__(32);
            var toPrimitive = __webpack_require__(26);
            var has = __webpack_require__(10);
            var classof = __webpack_require__(50);
            var isObject = __webpack_require__(2);
            var toObject = __webpack_require__(12);
            var isArrayIter = __webpack_require__(74);
            var create = __webpack_require__(33);
            var getPrototypeOf = __webpack_require__(35);
            var gOPN = __webpack_require__(34).f;
            var getIterFn = __webpack_require__(75);
            var uid = __webpack_require__(30);
            var wks = __webpack_require__(5);
            var createArrayMethod = __webpack_require__(18);
            var createArrayIncludes = __webpack_require__(60);
            var speciesConstructor = __webpack_require__(78);
            var ArrayIterators = __webpack_require__(102);
            var Iterators = __webpack_require__(44);
            var $iterDetect = __webpack_require__(52);
            var setSpecies = __webpack_require__(38);
            var arrayFill = __webpack_require__(76);
            var arrayCopyWithin = __webpack_require__(101);
            var $DP = __webpack_require__(6);
            var $GOPD = __webpack_require__(23);
            var dP = $DP.f;
            var gOPD = $GOPD.f;
            var RangeError = global.RangeError;
            var TypeError = global.TypeError;
            var Uint8Array = global.Uint8Array;
            var ARRAY_BUFFER = 'ArrayBuffer';
            var SHARED_BUFFER = 'Shared' + ARRAY_BUFFER;
            var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
            var PROTOTYPE = 'prototype';
            var ArrayProto = Array[PROTOTYPE];
            var $ArrayBuffer = $buffer.ArrayBuffer;
            var $DataView = $buffer.DataView;
            var arrayForEach = createArrayMethod(0);
            var arrayFilter = createArrayMethod(2);
            var arraySome = createArrayMethod(3);
            var arrayEvery = createArrayMethod(4);
            var arrayFind = createArrayMethod(5);
            var arrayFindIndex = createArrayMethod(6);
            var arrayIncludes = createArrayIncludes(true);
            var arrayIndexOf = createArrayIncludes(false);
            var arrayValues = ArrayIterators.values;
            var arrayKeys = ArrayIterators.keys;
            var arrayEntries = ArrayIterators.entries;
            var arrayLastIndexOf = ArrayProto.lastIndexOf;
            var arrayReduce = ArrayProto.reduce;
            var arrayReduceRight = ArrayProto.reduceRight;
            var arrayJoin = ArrayProto.join;
            var arraySort = ArrayProto.sort;
            var arraySlice = ArrayProto.slice;
            var arrayToString = ArrayProto.toString;
            var arrayToLocaleString = ArrayProto.toLocaleString;
            var ITERATOR = wks('iterator');
            var TAG = wks('toStringTag');
            var TYPED_CONSTRUCTOR = uid('typed_constructor');
            var DEF_CONSTRUCTOR = uid('def_constructor');
            var ALL_CONSTRUCTORS = $typed.CONSTR;
            var TYPED_ARRAY = $typed.TYPED;
            var VIEW = $typed.VIEW;
            var WRONG_LENGTH = 'Wrong length!';

            var $map = createArrayMethod(1, function (O, length) {
                return allocate(speciesConstructor(O, O[DEF_CONSTRUCTOR]), length);
            });

            var LITTLE_ENDIAN = fails(function () {
                // eslint-disable-next-line no-undef
                return new Uint8Array(new Uint16Array([1]).buffer)[0] === 1;
            });

            var FORCED_SET = !!Uint8Array && !!Uint8Array[PROTOTYPE].set && fails(function () {
                new Uint8Array(1).set({});
            });

            var toOffset = function (it, BYTES) {
                var offset = toInteger(it);
                if (offset < 0 || offset % BYTES) throw RangeError('Wrong offset!');
                return offset;
            };

            var validate = function (it) {
                if (isObject(it) && TYPED_ARRAY in it) return it;
                throw TypeError(it + ' is not a typed array!');
            };

            var allocate = function (C, length) {
                if (!(isObject(C) && TYPED_CONSTRUCTOR in C)) {
                    throw TypeError('It is not a typed array constructor!');
                }
                return new C(length);
            };

            var speciesFromList = function (O, list) {
                return fromList(speciesConstructor(O, O[DEF_CONSTRUCTOR]), list);
            };

            var fromList = function (C, list) {
                var index = 0;
                var length = list.length;
                var result = allocate(C, length);
                while (length > index) result[index] = list[index++];
                return result;
            };

            var addGetter = function (it, key, internal) {
                dP(it, key, {
                    get: function () {
                        return this._d[internal];
                    }
                });
            };

            var $from = function from(source /* , mapfn, thisArg */) {
                var O = toObject(source);
                var aLen = arguments.length;
                var mapfn = aLen > 1 ? arguments[1] : undefined;
                var mapping = mapfn !== undefined;
                var iterFn = getIterFn(O);
                var i, length, values, result, step, iterator;
                if (iterFn != undefined && !isArrayIter(iterFn)) {
                    for (iterator = iterFn.call(O), values = [], i = 0; !(step = iterator.next()).done; i++) {
                        values.push(step.value);
                    }
                    O = values;
                }
                if (mapping && aLen > 2) mapfn = ctx(mapfn, arguments[2], 2);
                for (i = 0, length = toLength(O.length), result = allocate(this, length); length > i; i++) {
                    result[i] = mapping ? mapfn(O[i], i) : O[i];
                }
                return result;
            };

            var $of = function of(/* ...items */) {
                var index = 0;
                var length = arguments.length;
                var result = allocate(this, length);
                while (length > index) result[index] = arguments[index++];
                return result;
            };

            // iOS Safari 6.x fails here
            var TO_LOCALE_BUG = !!Uint8Array && fails(function () {
                arrayToLocaleString.call(new Uint8Array(1));
            });

            var $toLocaleString = function toLocaleString() {
                return arrayToLocaleString.apply(TO_LOCALE_BUG ? arraySlice.call(validate(this)) : validate(this), arguments);
            };

            var proto = {
                copyWithin: function copyWithin(target, start /* , end */) {
                    return arrayCopyWithin.call(validate(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
                },
                every: function every(callbackfn /* , thisArg */) {
                    return arrayEvery(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                },
                fill: function fill(value /* , start, end */) { // eslint-disable-line no-unused-vars
                    return arrayFill.apply(validate(this), arguments);
                },
                filter: function filter(callbackfn /* , thisArg */) {
                    return speciesFromList(this, arrayFilter(validate(this), callbackfn,
                        arguments.length > 1 ? arguments[1] : undefined));
                },
                find: function find(predicate /* , thisArg */) {
                    return arrayFind(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
                },
                findIndex: function findIndex(predicate /* , thisArg */) {
                    return arrayFindIndex(validate(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
                },
                forEach: function forEach(callbackfn /* , thisArg */) {
                    arrayForEach(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                },
                indexOf: function indexOf(searchElement /* , fromIndex */) {
                    return arrayIndexOf(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
                },
                includes: function includes(searchElement /* , fromIndex */) {
                    return arrayIncludes(validate(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
                },
                join: function join(separator) { // eslint-disable-line no-unused-vars
                    return arrayJoin.apply(validate(this), arguments);
                },
                lastIndexOf: function lastIndexOf(searchElement /* , fromIndex */) { // eslint-disable-line no-unused-vars
                    return arrayLastIndexOf.apply(validate(this), arguments);
                },
                map: function map(mapfn /* , thisArg */) {
                    return $map(validate(this), mapfn, arguments.length > 1 ? arguments[1] : undefined);
                },
                reduce: function reduce(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
                    return arrayReduce.apply(validate(this), arguments);
                },
                reduceRight: function reduceRight(callbackfn /* , initialValue */) { // eslint-disable-line no-unused-vars
                    return arrayReduceRight.apply(validate(this), arguments);
                },
                reverse: function reverse() {
                    var that = this;
                    var length = validate(that).length;
                    var middle = Math.floor(length / 2);
                    var index = 0;
                    var value;
                    while (index < middle) {
                        value = that[index];
                        that[index++] = that[--length];
                        that[length] = value;
                    }
                    return that;
                },
                some: function some(callbackfn /* , thisArg */) {
                    return arraySome(validate(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
                },
                sort: function sort(comparefn) {
                    return arraySort.call(validate(this), comparefn);
                },
                subarray: function subarray(begin, end) {
                    var O = validate(this);
                    var length = O.length;
                    var $begin = toAbsoluteIndex(begin, length);
                    return new (speciesConstructor(O, O[DEF_CONSTRUCTOR]))(
                        O.buffer,
                        O.byteOffset + $begin * O.BYTES_PER_ELEMENT,
                        toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - $begin)
                    );
                }
            };

            var $slice = function slice(start, end) {
                return speciesFromList(this, arraySlice.call(validate(this), start, end));
            };

            var $set = function set(arrayLike /* , offset */) {
                validate(this);
                var offset = toOffset(arguments[1], 1);
                var length = this.length;
                var src = toObject(arrayLike);
                var len = toLength(src.length);
                var index = 0;
                if (len + offset > length) throw RangeError(WRONG_LENGTH);
                while (index < len) this[offset + index] = src[index++];
            };

            var $iterators = {
                entries: function entries() {
                    return arrayEntries.call(validate(this));
                },
                keys: function keys() {
                    return arrayKeys.call(validate(this));
                },
                values: function values() {
                    return arrayValues.call(validate(this));
                }
            };

            var isTAIndex = function (target, key) {
                return isObject(target)
                    && target[TYPED_ARRAY]
                    && typeof key != 'symbol'
                    && key in target
                    && String(+key) == String(key);
            };
            var $getDesc = function getOwnPropertyDescriptor(target, key) {
                return isTAIndex(target, key = toPrimitive(key, true))
                    ? propertyDesc(2, target[key])
                    : gOPD(target, key);
            };
            var $setDesc = function defineProperty(target, key, desc) {
                if (isTAIndex(target, key = toPrimitive(key, true))
                    && isObject(desc)
                    && has(desc, 'value')
                    && !has(desc, 'get')
                    && !has(desc, 'set')
                    // TODO: add validation descriptor w/o calling accessors
                    && !desc.configurable
                    && (!has(desc, 'writable') || desc.writable)
                    && (!has(desc, 'enumerable') || desc.enumerable)
                ) {
                    target[key] = desc.value;
                    return target;
                }
                return dP(target, key, desc);
            };

            if (!ALL_CONSTRUCTORS) {
                $GOPD.f = $getDesc;
                $DP.f = $setDesc;
            }

            $export($export.S + $export.F * !ALL_CONSTRUCTORS, 'Object', {
                getOwnPropertyDescriptor: $getDesc,
                defineProperty: $setDesc
            });

            if (fails(function () {
                    arrayToString.call({});
                })) {
                arrayToString = arrayToLocaleString = function toString() {
                    return arrayJoin.call(this);
                };
            }

            var $TypedArrayPrototype$ = redefineAll({}, proto);
            redefineAll($TypedArrayPrototype$, $iterators);
            hide($TypedArrayPrototype$, ITERATOR, $iterators.values);
            redefineAll($TypedArrayPrototype$, {
                slice: $slice,
                set: $set,
                constructor: function () { /* noop */
                },
                toString: arrayToString,
                toLocaleString: $toLocaleString
            });
            addGetter($TypedArrayPrototype$, 'buffer', 'b');
            addGetter($TypedArrayPrototype$, 'byteOffset', 'o');
            addGetter($TypedArrayPrototype$, 'byteLength', 'l');
            addGetter($TypedArrayPrototype$, 'length', 'e');
            dP($TypedArrayPrototype$, TAG, {
                get: function () {
                    return this[TYPED_ARRAY];
                }
            });

            // eslint-disable-next-line max-statements
            module.exports = function (KEY, BYTES, wrapper, CLAMPED) {
                CLAMPED = !!CLAMPED;
                var NAME = KEY + (CLAMPED ? 'Clamped' : '') + 'Array';
                var GETTER = 'get' + KEY;
                var SETTER = 'set' + KEY;
                var TypedArray = global[NAME];
                var Base = TypedArray || {};
                var TAC = TypedArray && getPrototypeOf(TypedArray);
                var FORCED = !TypedArray || !$typed.ABV;
                var O = {};
                var TypedArrayPrototype = TypedArray && TypedArray[PROTOTYPE];
                var getter = function (that, index) {
                    var data = that._d;
                    return data.v[GETTER](index * BYTES + data.o, LITTLE_ENDIAN);
                };
                var setter = function (that, index, value) {
                    var data = that._d;
                    if (CLAMPED) value = (value = Math.round(value)) < 0 ? 0 : value > 0xff ? 0xff : value & 0xff;
                    data.v[SETTER](index * BYTES + data.o, value, LITTLE_ENDIAN);
                };
                var addElement = function (that, index) {
                    dP(that, index, {
                        get: function () {
                            return getter(this, index);
                        },
                        set: function (value) {
                            return setter(this, index, value);
                        },
                        enumerable: true
                    });
                };
                if (FORCED) {
                    TypedArray = wrapper(function (that, data, $offset, $length) {
                        anInstance(that, TypedArray, NAME, '_d');
                        var index = 0;
                        var offset = 0;
                        var buffer, byteLength, length, klass;
                        if (!isObject(data)) {
                            length = toIndex(data);
                            byteLength = length * BYTES;
                            buffer = new $ArrayBuffer(byteLength);
                        } else if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
                            buffer = data;
                            offset = toOffset($offset, BYTES);
                            var $len = data.byteLength;
                            if ($length === undefined) {
                                if ($len % BYTES) throw RangeError(WRONG_LENGTH);
                                byteLength = $len - offset;
                                if (byteLength < 0) throw RangeError(WRONG_LENGTH);
                            } else {
                                byteLength = toLength($length) * BYTES;
                                if (byteLength + offset > $len) throw RangeError(WRONG_LENGTH);
                            }
                            length = byteLength / BYTES;
                        } else if (TYPED_ARRAY in data) {
                            return fromList(TypedArray, data);
                        } else {
                            return $from.call(TypedArray, data);
                        }
                        hide(that, '_d', {
                            b: buffer,
                            o: offset,
                            l: byteLength,
                            e: length,
                            v: new $DataView(buffer)
                        });
                        while (index < length) addElement(that, index++);
                    });
                    TypedArrayPrototype = TypedArray[PROTOTYPE] = create($TypedArrayPrototype$);
                    hide(TypedArrayPrototype, 'constructor', TypedArray);
                } else if (!fails(function () {
                        TypedArray(1);
                    }) || !fails(function () {
                        new TypedArray(-1); // eslint-disable-line no-new
                    }) || !$iterDetect(function (iter) {
                        new TypedArray(); // eslint-disable-line no-new
                        new TypedArray(null); // eslint-disable-line no-new
                        new TypedArray(1.5); // eslint-disable-line no-new
                        new TypedArray(iter); // eslint-disable-line no-new
                    }, true)) {
                    TypedArray = wrapper(function (that, data, $offset, $length) {
                        anInstance(that, TypedArray, NAME);
                        var klass;
                        // `ws` module bug, temporarily remove validation length for Uint8Array
                        // https://github.com/websockets/ws/pull/645
                        if (!isObject(data)) return new Base(toIndex(data));
                        if (data instanceof $ArrayBuffer || (klass = classof(data)) == ARRAY_BUFFER || klass == SHARED_BUFFER) {
                            return $length !== undefined
                                ? new Base(data, toOffset($offset, BYTES), $length)
                                : $offset !== undefined
                                    ? new Base(data, toOffset($offset, BYTES))
                                    : new Base(data);
                        }
                        if (TYPED_ARRAY in data) return fromList(TypedArray, data);
                        return $from.call(TypedArray, data);
                    });
                    arrayForEach(TAC !== Function.prototype ? gOPN(Base).concat(gOPN(TAC)) : gOPN(Base), function (key) {
                        if (!(key in TypedArray)) hide(TypedArray, key, Base[key]);
                    });
                    TypedArray[PROTOTYPE] = TypedArrayPrototype;
                    if (!LIBRARY) TypedArrayPrototype.constructor = TypedArray;
                }
                var $nativeIterator = TypedArrayPrototype[ITERATOR];
                var CORRECT_ITER_NAME = !!$nativeIterator
                    && ($nativeIterator.name == 'values' || $nativeIterator.name == undefined);
                var $iterator = $iterators.values;
                hide(TypedArray, TYPED_CONSTRUCTOR, true);
                hide(TypedArrayPrototype, TYPED_ARRAY, NAME);
                hide(TypedArrayPrototype, VIEW, true);
                hide(TypedArrayPrototype, DEF_CONSTRUCTOR, TypedArray);

                if (CLAMPED ? new TypedArray(1)[TAG] != NAME : !(TAG in TypedArrayPrototype)) {
                    dP(TypedArrayPrototype, TAG, {
                        get: function () {
                            return NAME;
                        }
                    });
                }

                O[NAME] = TypedArray;

                $export($export.G + $export.W + $export.F * (TypedArray != Base), O);

                $export($export.S, NAME, {
                    BYTES_PER_ELEMENT: BYTES
                });

                $export($export.S + $export.F * fails(function () {
                    Base.of.call(TypedArray, 1);
                }), NAME, {
                    from: $from,
                    of: $of
                });

                if (!(BYTES_PER_ELEMENT in TypedArrayPrototype)) hide(TypedArrayPrototype, BYTES_PER_ELEMENT, BYTES);

                $export($export.P, NAME, proto);

                setSpecies(NAME);

                $export($export.P + $export.F * FORCED_SET, NAME, {set: $set});

                $export($export.P + $export.F * !CORRECT_ITER_NAME, NAME, $iterators);

                if (!LIBRARY && TypedArrayPrototype.toString != arrayToString) TypedArrayPrototype.toString = arrayToString;

                $export($export.P + $export.F * fails(function () {
                    new TypedArray(1).slice();
                }), NAME, {slice: $slice});

                $export($export.P + $export.F * (fails(function () {
                    return [1, 2].toLocaleString() != new TypedArray([1, 2]).toLocaleString();
                }) || !fails(function () {
                    TypedArrayPrototype.toLocaleString.call([1, 2]);
                })), NAME, {toLocaleString: $toLocaleString});

                Iterators[NAME] = CORRECT_ITER_NAME ? $nativeIterator : $iterator;
                if (!LIBRARY && !CORRECT_ITER_NAME) hide(TypedArrayPrototype, ITERATOR, $iterator);
            };
        } else module.exports = function () { /* empty */
        };


        /***/
    }),
    /* 25 */
    /***/ (function (module, exports) {

        var core = module.exports = {version: '2.5.7'};
        if (typeof __e == 'number') __e = core; // eslint-disable-line no-undef


        /***/
    }),
    /* 26 */
    /***/ (function (module, exports, __webpack_require__) {

// 7.1.1 ToPrimitive(input [, PreferredType])
        var isObject = __webpack_require__(2);
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string
        module.exports = function (it, S) {
            if (!isObject(it)) return it;
            var fn, val;
            if (S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
            if (typeof (fn = it.valueOf) == 'function' && !isObject(val = fn.call(it))) return val;
            if (!S && typeof (fn = it.toString) == 'function' && !isObject(val = fn.call(it))) return val;
            throw TypeError("Can't convert object to primitive value");
        };


        /***/
    }),
    /* 27 */
    /***/ (function (module, exports, __webpack_require__) {

        var META = __webpack_require__(30)('meta');
        var isObject = __webpack_require__(2);
        var has = __webpack_require__(10);
        var setDesc = __webpack_require__(6).f;
        var id = 0;
        var isExtensible = Object.isExtensible || function () {
            return true;
        };
        var FREEZE = !__webpack_require__(1)(function () {
            return isExtensible(Object.preventExtensions({}));
        });
        var setMeta = function (it) {
            setDesc(it, META, {
                value: {
                    i: 'O' + ++id, // object ID
                    w: {}          // weak collections IDs
                }
            });
        };
        var fastKey = function (it, create) {
            // return primitive with prefix
            if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
            if (!has(it, META)) {
                // can't set metadata to uncaught frozen object
                if (!isExtensible(it)) return 'F';
                // not necessary to add metadata
                if (!create) return 'E';
                // add missing metadata
                setMeta(it);
                // return object ID
            }
            return it[META].i;
        };
        var getWeak = function (it, create) {
            if (!has(it, META)) {
                // can't set metadata to uncaught frozen object
                if (!isExtensible(it)) return true;
                // not necessary to add metadata
                if (!create) return false;
                // add missing metadata
                setMeta(it);
                // return hash weak collections IDs
            }
            return it[META].w;
        };
// add metadata on freeze-family methods calling
        var onFreeze = function (it) {
            if (FREEZE && meta.NEED && isExtensible(it) && !has(it, META)) setMeta(it);
            return it;
        };
        var meta = module.exports = {
            KEY: META,
            NEED: false,
            fastKey: fastKey,
            getWeak: getWeak,
            onFreeze: onFreeze
        };


        /***/
    }),
    /* 28 */
    /***/ (function (module, exports) {

// 7.2.1 RequireObjectCoercible(argument)
        module.exports = function (it) {
            if (it == undefined) throw TypeError("Can't call method on  " + it);
            return it;
        };


        /***/
    }),
    /* 29 */
    /***/ (function (module, exports) {

        module.exports = function (bitmap, value) {
            return {
                enumerable: !(bitmap & 1),
                configurable: !(bitmap & 2),
                writable: !(bitmap & 4),
                value: value
            };
        };


        /***/
    }),
    /* 30 */
    /***/ (function (module, exports) {

        var id = 0;
        var px = Math.random();
        module.exports = function (key) {
            return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));
        };


        /***/
    }),
    /* 31 */
    /***/ (function (module, exports) {

        module.exports = false;


        /***/
    }),
    /* 32 */
    /***/ (function (module, exports, __webpack_require__) {

        var toInteger = __webpack_require__(22);
        var max = Math.max;
        var min = Math.min;
        module.exports = function (index, length) {
            index = toInteger(index);
            return index < 0 ? max(index + length, 0) : min(index, length);
        };


        /***/
    }),
    /* 33 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
        var anObject = __webpack_require__(4);
        var dPs = __webpack_require__(85);
        var enumBugKeys = __webpack_require__(62);
        var IE_PROTO = __webpack_require__(61)('IE_PROTO');
        var Empty = function () { /* empty */
        };
        var PROTOTYPE = 'prototype';

// Create object with fake `null` prototype: use iframe Object with cleared prototype
        var createDict = function () {
            // Thrash, waste and sodomy: IE GC bug
            var iframe = __webpack_require__(58)('iframe');
            var i = enumBugKeys.length;
            var lt = '<';
            var gt = '>';
            var iframeDocument;
            iframe.style.display = 'none';
            __webpack_require__(64).appendChild(iframe);
            iframe.src = 'javascript:'; // eslint-disable-line no-script-url
            // createDict = iframe.contentWindow.Object;
            // html.removeChild(iframe);
            iframeDocument = iframe.contentWindow.document;
            iframeDocument.open();
            iframeDocument.write(lt + 'script' + gt + 'document.F=Object' + lt + '/script' + gt);
            iframeDocument.close();
            createDict = iframeDocument.F;
            while (i--) delete createDict[PROTOTYPE][enumBugKeys[i]];
            return createDict();
        };

        module.exports = Object.create || function create(O, Properties) {
            var result;
            if (O !== null) {
                Empty[PROTOTYPE] = anObject(O);
                result = new Empty();
                Empty[PROTOTYPE] = null;
                // add "__proto__" for Object.getPrototypeOf polyfill
                result[IE_PROTO] = O;
            } else result = createDict();
            return Properties === undefined ? result : dPs(result, Properties);
        };


        /***/
    }),
    /* 34 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.7 / 15.2.3.4 Object.getOwnPropertyNames(O)
        var $keys = __webpack_require__(84);
        var hiddenKeys = __webpack_require__(62).concat('length', 'prototype');

        exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
            return $keys(O, hiddenKeys);
        };


        /***/
    }),
    /* 35 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.9 / 15.2.3.2 Object.getPrototypeOf(O)
        var has = __webpack_require__(10);
        var toObject = __webpack_require__(12);
        var IE_PROTO = __webpack_require__(61)('IE_PROTO');
        var ObjectProto = Object.prototype;

        module.exports = Object.getPrototypeOf || function (O) {
            O = toObject(O);
            if (has(O, IE_PROTO)) return O[IE_PROTO];
            if (typeof O.constructor == 'function' && O instanceof O.constructor) {
                return O.constructor.prototype;
            }
            return O instanceof Object ? ObjectProto : null;
        };


        /***/
    }),
    /* 36 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (immutable) */
        __webpack_exports__["a"] = normalizeComponent;
        /* globals __VUE_SSR_CONTEXT__ */

// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).
// This module is a runtime utility for cleaner component module output and will
// be included in the final webpack user bundle.

        function normalizeComponent(
            scriptExports,
            render,
            staticRenderFns,
            functionalTemplate,
            injectStyles,
            scopeId,
            moduleIdentifier, /* server only */
            shadowMode /* vue-cli only */
        ) {
            // Vue.extend constructor export interop
            var options = typeof scriptExports === 'function'
                ? scriptExports.options
                : scriptExports

            // render functions
            if (render) {
                options.render = render
                options.staticRenderFns = staticRenderFns
                options._compiled = true
            }

            // functional template
            if (functionalTemplate) {
                options.functional = true
            }

            // scopedId
            if (scopeId) {
                options._scopeId = 'data-v-' + scopeId
            }

            var hook
            if (moduleIdentifier) { // server build
                hook = function (context) {
                    // 2.3 injection
                    context =
                        context || // cached call
                        (this.$vnode && this.$vnode.ssrContext) || // stateful
                        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional
                    // 2.2 with runInNewContext: true
                    if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {
                        context = __VUE_SSR_CONTEXT__
                    }
                    // inject component styles
                    if (injectStyles) {
                        injectStyles.call(this, context)
                    }
                    // register component module identifier for async chunk inferrence
                    if (context && context._registeredComponents) {
                        context._registeredComponents.add(moduleIdentifier)
                    }
                }
                // used by ssr in case component is cached and beforeCreate
                // never gets called
                options._ssrRegister = hook
            } else if (injectStyles) {
                hook = shadowMode
                    ? function () {
                        injectStyles.call(this, this.$root.$options.shadowRoot)
                    }
                    : injectStyles
            }

            if (hook) {
                if (options.functional) {
                    // for template-only hot-reload because in that case the render fn doesn't
                    // go through the normalizer
                    options._injectStyles = hook
                    // register for functioal component in vue file
                    var originalRender = options.render
                    options.render = function renderWithStyleInjection(h, context) {
                        hook.call(context)
                        return originalRender(h, context)
                    }
                } else {
                    // inject component registration as beforeCreate hook
                    var existing = options.beforeCreate
                    options.beforeCreate = existing
                        ? [].concat(existing, hook)
                        : [hook]
                }
            }

            return {
                exports: scriptExports,
                options: options
            }
        }


        /***/
    }),
    /* 37 */
    /***/ (function (module, exports, __webpack_require__) {

        var def = __webpack_require__(6).f;
        var has = __webpack_require__(10);
        var TAG = __webpack_require__(5)('toStringTag');

        module.exports = function (it, tag, stat) {
            if (it && !has(it = stat ? it : it.prototype, TAG)) def(it, TAG, {configurable: true, value: tag});
        };


        /***/
    }),
    /* 38 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var global = __webpack_require__(3);
        var dP = __webpack_require__(6);
        var DESCRIPTORS = __webpack_require__(7);
        var SPECIES = __webpack_require__(5)('species');

        module.exports = function (KEY) {
            var C = global[KEY];
            if (DESCRIPTORS && C && !C[SPECIES]) dP.f(C, SPECIES, {
                configurable: true,
                get: function () {
                    return this;
                }
            });
        };


        /***/
    }),
    /* 39 */
    /***/ (function (module, exports) {

        module.exports = function (it, Constructor, name, forbiddenField) {
            if (!(it instanceof Constructor) || (forbiddenField !== undefined && forbiddenField in it)) {
                throw TypeError(name + ': incorrect invocation!');
            }
            return it;
        };


        /***/
    }),
    /* 40 */
    /***/ (function (module, exports, __webpack_require__) {

        var redefine = __webpack_require__(11);
        module.exports = function (target, src, safe) {
            for (var key in src) redefine(target, key, src[key], safe);
            return target;
        };


        /***/
    }),
    /* 41 */
    /***/ (function (module, exports, __webpack_require__) {

        var isObject = __webpack_require__(2);
        module.exports = function (it, TYPE) {
            if (!isObject(it) || it._t !== TYPE) throw TypeError('Incompatible receiver, ' + TYPE + ' required!');
            return it;
        };


        /***/
    }),
    /* 42 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.14 / 15.2.3.14 Object.keys(O)
        var $keys = __webpack_require__(84);
        var enumBugKeys = __webpack_require__(62);

        module.exports = Object.keys || function keys(O) {
            return $keys(O, enumBugKeys);
        };


        /***/
    }),
    /* 43 */
    /***/ (function (module, exports, __webpack_require__) {

// fallback for non-array-like ES3 and non-enumerable old V8 strings
        var cof = __webpack_require__(21);
// eslint-disable-next-line no-prototype-builtins
        module.exports = Object('z').propertyIsEnumerable(0) ? Object : function (it) {
            return cof(it) == 'String' ? it.split('') : Object(it);
        };


        /***/
    }),
    /* 44 */
    /***/ (function (module, exports) {

        module.exports = {};


        /***/
    }),
    /* 45 */
    /***/ (function (module, exports, __webpack_require__) {

// 22.1.3.31 Array.prototype[@@unscopables]
        var UNSCOPABLES = __webpack_require__(5)('unscopables');
        var ArrayProto = Array.prototype;
        if (ArrayProto[UNSCOPABLES] == undefined) __webpack_require__(14)(ArrayProto, UNSCOPABLES, {});
        module.exports = function (key) {
            ArrayProto[UNSCOPABLES][key] = true;
        };


        /***/
    }),
    /* 46 */,
    /* 47 */
    /***/ (function (module, exports) {

// shim for using process in browser
        var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

        var cachedSetTimeout;
        var cachedClearTimeout;

        function defaultSetTimout() {
            throw new Error('setTimeout has not been defined');
        }

        function defaultClearTimeout() {
            throw new Error('clearTimeout has not been defined');
        }

        (function () {
            try {
                if (typeof setTimeout === 'function') {
                    cachedSetTimeout = setTimeout;
                } else {
                    cachedSetTimeout = defaultSetTimout;
                }
            } catch (e) {
                cachedSetTimeout = defaultSetTimout;
            }
            try {
                if (typeof clearTimeout === 'function') {
                    cachedClearTimeout = clearTimeout;
                } else {
                    cachedClearTimeout = defaultClearTimeout;
                }
            } catch (e) {
                cachedClearTimeout = defaultClearTimeout;
            }
        }())

        function runTimeout(fun) {
            if (cachedSetTimeout === setTimeout) {
                //normal enviroments in sane situations
                return setTimeout(fun, 0);
            }
            // if setTimeout wasn't available but was latter defined
            if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
                cachedSetTimeout = setTimeout;
                return setTimeout(fun, 0);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedSetTimeout(fun, 0);
            } catch (e) {
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
                    return cachedSetTimeout.call(null, fun, 0);
                } catch (e) {
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
                    return cachedSetTimeout.call(this, fun, 0);
                }
            }


        }

        function runClearTimeout(marker) {
            if (cachedClearTimeout === clearTimeout) {
                //normal enviroments in sane situations
                return clearTimeout(marker);
            }
            // if clearTimeout wasn't available but was latter defined
            if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
                cachedClearTimeout = clearTimeout;
                return clearTimeout(marker);
            }
            try {
                // when when somebody has screwed with setTimeout but no I.E. maddness
                return cachedClearTimeout(marker);
            } catch (e) {
                try {
                    // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
                    return cachedClearTimeout.call(null, marker);
                } catch (e) {
                    // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
                    // Some versions of I.E. have different rules for clearTimeout vs setTimeout
                    return cachedClearTimeout.call(this, marker);
                }
            }


        }

        var queue = [];
        var draining = false;
        var currentQueue;
        var queueIndex = -1;

        function cleanUpNextTick() {
            if (!draining || !currentQueue) {
                return;
            }
            draining = false;
            if (currentQueue.length) {
                queue = currentQueue.concat(queue);
            } else {
                queueIndex = -1;
            }
            if (queue.length) {
                drainQueue();
            }
        }

        function drainQueue() {
            if (draining) {
                return;
            }
            var timeout = runTimeout(cleanUpNextTick);
            draining = true;

            var len = queue.length;
            while (len) {
                currentQueue = queue;
                queue = [];
                while (++queueIndex < len) {
                    if (currentQueue) {
                        currentQueue[queueIndex].run();
                    }
                }
                queueIndex = -1;
                len = queue.length;
            }
            currentQueue = null;
            draining = false;
            runClearTimeout(timeout);
        }

        process.nextTick = function (fun) {
            var args = new Array(arguments.length - 1);
            if (arguments.length > 1) {
                for (var i = 1; i < arguments.length; i++) {
                    args[i - 1] = arguments[i];
                }
            }
            queue.push(new Item(fun, args));
            if (queue.length === 1 && !draining) {
                runTimeout(drainQueue);
            }
        };

// v8 likes predictible objects
        function Item(fun, array) {
            this.fun = fun;
            this.array = array;
        }

        Item.prototype.run = function () {
            this.fun.apply(null, this.array);
        };
        process.title = 'browser';
        process.browser = true;
        process.env = {};
        process.argv = [];
        process.version = ''; // empty string to avoid regexp issues
        process.versions = {};

        function noop() {
        }

        process.on = noop;
        process.addListener = noop;
        process.once = noop;
        process.off = noop;
        process.removeListener = noop;
        process.removeAllListeners = noop;
        process.emit = noop;
        process.prependListener = noop;
        process.prependOnceListener = noop;

        process.listeners = function (name) {
            return []
        }

        process.binding = function (name) {
            throw new Error('process.binding is not supported');
        };

        process.cwd = function () {
            return '/'
        };
        process.chdir = function (dir) {
            throw new Error('process.chdir is not supported');
        };
        process.umask = function () {
            return 0;
        };


        /***/
    }),
    /* 48 */
    /***/ (function (module, exports) {

        exports.f = Object.getOwnPropertySymbols;


        /***/
    }),
    /* 49 */
    /***/ (function (module, exports) {

        exports.f = {}.propertyIsEnumerable;


        /***/
    }),
    /* 50 */
    /***/ (function (module, exports, __webpack_require__) {

// getting tag from 19.1.3.6 Object.prototype.toString()
        var cof = __webpack_require__(21);
        var TAG = __webpack_require__(5)('toStringTag');
// ES3 wrong here
        var ARG = cof(function () {
            return arguments;
        }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
        var tryGet = function (it, key) {
            try {
                return it[key];
            } catch (e) { /* empty */
            }
        };

        module.exports = function (it) {
            var O, T, B;
            return it === undefined ? 'Undefined' : it === null ? 'Null'
                // @@toStringTag case
                : typeof (T = tryGet(O = Object(it), TAG)) == 'string' ? T
                    // builtinTag case
                    : ARG ? cof(O)
                        // ES3 arguments fallback
                        : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;
        };


        /***/
    }),
    /* 51 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);
        var defined = __webpack_require__(28);
        var fails = __webpack_require__(1);
        var spaces = __webpack_require__(66);
        var space = '[' + spaces + ']';
        var non = '\u200b\u0085';
        var ltrim = RegExp('^' + space + space + '*');
        var rtrim = RegExp(space + space + '*$');

        var exporter = function (KEY, exec, ALIAS) {
            var exp = {};
            var FORCE = fails(function () {
                return !!spaces[KEY]() || non[KEY]() != non;
            });
            var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];
            if (ALIAS) exp[ALIAS] = fn;
            $export($export.P + $export.F * FORCE, 'String', exp);
        };

// 1 -> String#trimLeft
// 2 -> String#trimRight
// 3 -> String#trim
        var trim = exporter.trim = function (string, TYPE) {
            string = String(defined(string));
            if (TYPE & 1) string = string.replace(ltrim, '');
            if (TYPE & 2) string = string.replace(rtrim, '');
            return string;
        };

        module.exports = exporter;


        /***/
    }),
    /* 52 */
    /***/ (function (module, exports, __webpack_require__) {

        var ITERATOR = __webpack_require__(5)('iterator');
        var SAFE_CLOSING = false;

        try {
            var riter = [7][ITERATOR]();
            riter['return'] = function () {
                SAFE_CLOSING = true;
            };
            // eslint-disable-next-line no-throw-literal
            Array.from(riter, function () {
                throw 2;
            });
        } catch (e) { /* empty */
        }

        module.exports = function (exec, skipClosing) {
            if (!skipClosing && !SAFE_CLOSING) return false;
            var safe = false;
            try {
                var arr = [7];
                var iter = arr[ITERATOR]();
                iter.next = function () {
                    return {done: safe = true};
                };
                arr[ITERATOR] = function () {
                    return iter;
                };
                exec(arr);
            } catch (e) { /* empty */
            }
            return safe;
        };


        /***/
    }),
    /* 53 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var hide = __webpack_require__(14);
        var redefine = __webpack_require__(11);
        var fails = __webpack_require__(1);
        var defined = __webpack_require__(28);
        var wks = __webpack_require__(5);

        module.exports = function (KEY, length, exec) {
            var SYMBOL = wks(KEY);
            var fns = exec(defined, SYMBOL, ''[KEY]);
            var strfn = fns[0];
            var rxfn = fns[1];
            if (fails(function () {
                    var O = {};
                    O[SYMBOL] = function () {
                        return 7;
                    };
                    return ''[KEY](O) != 7;
                })) {
                redefine(String.prototype, KEY, strfn);
                hide(RegExp.prototype, SYMBOL, length == 2
                    // 21.2.5.8 RegExp.prototype[@@replace](string, replaceValue)
                    // 21.2.5.11 RegExp.prototype[@@split](string, limit)
                    ? function (string, arg) {
                        return rxfn.call(string, this, arg);
                    }
                    // 21.2.5.6 RegExp.prototype[@@match](string)
                    // 21.2.5.9 RegExp.prototype[@@search](string)
                    : function (string) {
                        return rxfn.call(string, this);
                    }
                );
            }
        };


        /***/
    }),
    /* 54 */
    /***/ (function (module, exports, __webpack_require__) {

        var ctx = __webpack_require__(19);
        var call = __webpack_require__(98);
        var isArrayIter = __webpack_require__(74);
        var anObject = __webpack_require__(4);
        var toLength = __webpack_require__(8);
        var getIterFn = __webpack_require__(75);
        var BREAK = {};
        var RETURN = {};
        var exports = module.exports = function (iterable, entries, fn, that, ITERATOR) {
            var iterFn = ITERATOR ? function () {
                return iterable;
            } : getIterFn(iterable);
            var f = ctx(fn, that, entries ? 2 : 1);
            var index = 0;
            var length, step, iterator, result;
            if (typeof iterFn != 'function') throw TypeError(iterable + ' is not iterable!');
            // fast case for arrays with default iterator
            if (isArrayIter(iterFn)) for (length = toLength(iterable.length); length > index; index++) {
                result = entries ? f(anObject(step = iterable[index])[0], step[1]) : f(iterable[index]);
                if (result === BREAK || result === RETURN) return result;
            } else for (iterator = iterFn.call(iterable); !(step = iterator.next()).done;) {
                result = call(iterator, f, step.value, entries);
                if (result === BREAK || result === RETURN) return result;
            }
        };
        exports.BREAK = BREAK;
        exports.RETURN = RETURN;


        /***/
    }),
    /* 55 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var global = __webpack_require__(3);
        var $export = __webpack_require__(0);
        var redefine = __webpack_require__(11);
        var redefineAll = __webpack_require__(40);
        var meta = __webpack_require__(27);
        var forOf = __webpack_require__(54);
        var anInstance = __webpack_require__(39);
        var isObject = __webpack_require__(2);
        var fails = __webpack_require__(1);
        var $iterDetect = __webpack_require__(52);
        var setToStringTag = __webpack_require__(37);
        var inheritIfRequired = __webpack_require__(67);

        module.exports = function (NAME, wrapper, methods, common, IS_MAP, IS_WEAK) {
            var Base = global[NAME];
            var C = Base;
            var ADDER = IS_MAP ? 'set' : 'add';
            var proto = C && C.prototype;
            var O = {};
            var fixMethod = function (KEY) {
                var fn = proto[KEY];
                redefine(proto, KEY,
                    KEY == 'delete' ? function (a) {
                        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
                    } : KEY == 'has' ? function has(a) {
                        return IS_WEAK && !isObject(a) ? false : fn.call(this, a === 0 ? 0 : a);
                    } : KEY == 'get' ? function get(a) {
                        return IS_WEAK && !isObject(a) ? undefined : fn.call(this, a === 0 ? 0 : a);
                    } : KEY == 'add' ? function add(a) {
                            fn.call(this, a === 0 ? 0 : a);
                            return this;
                        }
                        : function set(a, b) {
                            fn.call(this, a === 0 ? 0 : a, b);
                            return this;
                        }
                );
            };
            if (typeof C != 'function' || !(IS_WEAK || proto.forEach && !fails(function () {
                    new C().entries().next();
                }))) {
                // create collection constructor
                C = common.getConstructor(wrapper, NAME, IS_MAP, ADDER);
                redefineAll(C.prototype, methods);
                meta.NEED = true;
            } else {
                var instance = new C();
                // early implementations not supports chaining
                var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
                // V8 ~  Chromium 40- weak-collections throws on primitives, but should return false
                var THROWS_ON_PRIMITIVES = fails(function () {
                    instance.has(1);
                });
                // most early implementations doesn't supports iterables, most modern - not close it correctly
                var ACCEPT_ITERABLES = $iterDetect(function (iter) {
                    new C(iter);
                }); // eslint-disable-line no-new
                // for early implementations -0 and +0 not the same
                var BUGGY_ZERO = !IS_WEAK && fails(function () {
                    // V8 ~ Chromium 42- fails only with 5+ elements
                    var $instance = new C();
                    var index = 5;
                    while (index--) $instance[ADDER](index, index);
                    return !$instance.has(-0);
                });
                if (!ACCEPT_ITERABLES) {
                    C = wrapper(function (target, iterable) {
                        anInstance(target, C, NAME);
                        var that = inheritIfRequired(new Base(), target, C);
                        if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
                        return that;
                    });
                    C.prototype = proto;
                    proto.constructor = C;
                }
                if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
                    fixMethod('delete');
                    fixMethod('has');
                    IS_MAP && fixMethod('get');
                }
                if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);
                // weak collections should not contains .clear method
                if (IS_WEAK && proto.clear) delete proto.clear;
            }

            setToStringTag(C, NAME);

            O[NAME] = C;
            $export($export.G + $export.W + $export.F * (C != Base), O);

            if (!IS_WEAK) common.setStrong(C, NAME, IS_MAP);

            return C;
        };


        /***/
    }),
    /* 56 */
    /***/ (function (module, exports, __webpack_require__) {

        var global = __webpack_require__(3);
        var hide = __webpack_require__(14);
        var uid = __webpack_require__(30);
        var TYPED = uid('typed_array');
        var VIEW = uid('view');
        var ABV = !!(global.ArrayBuffer && global.DataView);
        var CONSTR = ABV;
        var i = 0;
        var l = 9;
        var Typed;

        var TypedArrayConstructors = (
            'Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array'
        ).split(',');

        while (i < l) {
            if (Typed = global[TypedArrayConstructors[i++]]) {
                hide(Typed.prototype, TYPED, true);
                hide(Typed.prototype, VIEW, true);
            } else CONSTR = false;
        }

        module.exports = {
            ABV: ABV,
            CONSTR: CONSTR,
            TYPED: TYPED,
            VIEW: VIEW
        };


        /***/
    }),
    /* 57 */,
    /* 58 */
    /***/ (function (module, exports, __webpack_require__) {

        var isObject = __webpack_require__(2);
        var document = __webpack_require__(3).document;
// typeof document.createElement is 'object' in old IE
        var is = isObject(document) && isObject(document.createElement);
        module.exports = function (it) {
            return is ? document.createElement(it) : {};
        };


        /***/
    }),
    /* 59 */
    /***/ (function (module, exports, __webpack_require__) {

        var core = __webpack_require__(25);
        var global = __webpack_require__(3);
        var SHARED = '__core-js_shared__';
        var store = global[SHARED] || (global[SHARED] = {});

        (module.exports = function (key, value) {
            return store[key] || (store[key] = value !== undefined ? value : {});
        })('versions', []).push({
            version: core.version,
            mode: __webpack_require__(31) ? 'pure' : 'global',
            copyright: '© 2018 Denis Pushkarev (zloirock.ru)'
        });


        /***/
    }),
    /* 60 */
    /***/ (function (module, exports, __webpack_require__) {

// false -> Array#indexOf
// true  -> Array#includes
        var toIObject = __webpack_require__(16);
        var toLength = __webpack_require__(8);
        var toAbsoluteIndex = __webpack_require__(32);
        module.exports = function (IS_INCLUDES) {
            return function ($this, el, fromIndex) {
                var O = toIObject($this);
                var length = toLength(O.length);
                var index = toAbsoluteIndex(fromIndex, length);
                var value;
                // Array#includes uses SameValueZero equality algorithm
                // eslint-disable-next-line no-self-compare
                if (IS_INCLUDES && el != el) while (length > index) {
                    value = O[index++];
                    // eslint-disable-next-line no-self-compare
                    if (value != value) return true;
                    // Array#indexOf ignores holes, Array#includes - not
                } else for (; length > index; index++) if (IS_INCLUDES || index in O) {
                    if (O[index] === el) return IS_INCLUDES || index || 0;
                }
                return !IS_INCLUDES && -1;
            };
        };


        /***/
    }),
    /* 61 */
    /***/ (function (module, exports, __webpack_require__) {

        var shared = __webpack_require__(59)('keys');
        var uid = __webpack_require__(30);
        module.exports = function (key) {
            return shared[key] || (shared[key] = uid(key));
        };


        /***/
    }),
    /* 62 */
    /***/ (function (module, exports) {

// IE 8- don't enum bug keys
        module.exports = (
            'constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf'
        ).split(',');


        /***/
    }),
    /* 63 */
    /***/ (function (module, exports, __webpack_require__) {

// 7.2.2 IsArray(argument)
        var cof = __webpack_require__(21);
        module.exports = Array.isArray || function isArray(arg) {
            return cof(arg) == 'Array';
        };


        /***/
    }),
    /* 64 */
    /***/ (function (module, exports, __webpack_require__) {

        var document = __webpack_require__(3).document;
        module.exports = document && document.documentElement;


        /***/
    }),
    /* 65 */
    /***/ (function (module, exports, __webpack_require__) {

// Works with __proto__ only. Old v8 can't work with null proto objects.
        /* eslint-disable no-proto */
        var isObject = __webpack_require__(2);
        var anObject = __webpack_require__(4);
        var check = function (O, proto) {
            anObject(O);
            if (!isObject(proto) && proto !== null) throw TypeError(proto + ": can't set as prototype!");
        };
        module.exports = {
            set: Object.setPrototypeOf || ('__proto__' in {} ? // eslint-disable-line
                function (test, buggy, set) {
                    try {
                        set = __webpack_require__(19)(Function.call, __webpack_require__(23).f(Object.prototype, '__proto__').set, 2);
                        set(test, []);
                        buggy = !(test instanceof Array);
                    } catch (e) {
                        buggy = true;
                    }
                    return function setPrototypeOf(O, proto) {
                        check(O, proto);
                        if (buggy) O.__proto__ = proto;
                        else set(O, proto);
                        return O;
                    };
                }({}, false) : undefined),
            check: check
        };


        /***/
    }),
    /* 66 */
    /***/ (function (module, exports) {

        module.exports = '\x09\x0A\x0B\x0C\x0D\x20\xA0\u1680\u180E\u2000\u2001\u2002\u2003' +
            '\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


        /***/
    }),
    /* 67 */
    /***/ (function (module, exports, __webpack_require__) {

        var isObject = __webpack_require__(2);
        var setPrototypeOf = __webpack_require__(65).set;
        module.exports = function (that, target, C) {
            var S = target.constructor;
            var P;
            if (S !== C && typeof S == 'function' && (P = S.prototype) !== C.prototype && isObject(P) && setPrototypeOf) {
                setPrototypeOf(that, P);
            }
            return that;
        };


        /***/
    }),
    /* 68 */
    /***/ (function (module, exports) {

// 20.2.2.28 Math.sign(x)
        module.exports = Math.sign || function sign(x) {
            // eslint-disable-next-line no-self-compare
            return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
        };


        /***/
    }),
    /* 69 */
    /***/ (function (module, exports) {

// 20.2.2.14 Math.expm1(x)
        var $expm1 = Math.expm1;
        module.exports = (!$expm1
            // Old FF bug
            || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
            // Tor Browser bug
            || $expm1(-2e-17) != -2e-17
        ) ? function expm1(x) {
            return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : Math.exp(x) - 1;
        } : $expm1;


        /***/
    }),
    /* 70 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var LIBRARY = __webpack_require__(31);
        var $export = __webpack_require__(0);
        var redefine = __webpack_require__(11);
        var hide = __webpack_require__(14);
        var Iterators = __webpack_require__(44);
        var $iterCreate = __webpack_require__(97);
        var setToStringTag = __webpack_require__(37);
        var getPrototypeOf = __webpack_require__(35);
        var ITERATOR = __webpack_require__(5)('iterator');
        var BUGGY = !([].keys && 'next' in [].keys()); // Safari has buggy iterators w/o `next`
        var FF_ITERATOR = '@@iterator';
        var KEYS = 'keys';
        var VALUES = 'values';

        var returnThis = function () {
            return this;
        };

        module.exports = function (Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED) {
            $iterCreate(Constructor, NAME, next);
            var getMethod = function (kind) {
                if (!BUGGY && kind in proto) return proto[kind];
                switch (kind) {
                    case KEYS:
                        return function keys() {
                            return new Constructor(this, kind);
                        };
                    case VALUES:
                        return function values() {
                            return new Constructor(this, kind);
                        };
                }
                return function entries() {
                    return new Constructor(this, kind);
                };
            };
            var TAG = NAME + ' Iterator';
            var DEF_VALUES = DEFAULT == VALUES;
            var VALUES_BUG = false;
            var proto = Base.prototype;
            var $native = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT];
            var $default = $native || getMethod(DEFAULT);
            var $entries = DEFAULT ? !DEF_VALUES ? $default : getMethod('entries') : undefined;
            var $anyNative = NAME == 'Array' ? proto.entries || $native : $native;
            var methods, key, IteratorPrototype;
            // Fix native
            if ($anyNative) {
                IteratorPrototype = getPrototypeOf($anyNative.call(new Base()));
                if (IteratorPrototype !== Object.prototype && IteratorPrototype.next) {
                    // Set @@toStringTag to native iterators
                    setToStringTag(IteratorPrototype, TAG, true);
                    // fix for some old engines
                    if (!LIBRARY && typeof IteratorPrototype[ITERATOR] != 'function') hide(IteratorPrototype, ITERATOR, returnThis);
                }
            }
            // fix Array#{values, @@iterator}.name in V8 / FF
            if (DEF_VALUES && $native && $native.name !== VALUES) {
                VALUES_BUG = true;
                $default = function values() {
                    return $native.call(this);
                };
            }
            // Define iterator
            if ((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])) {
                hide(proto, ITERATOR, $default);
            }
            // Plug for library
            Iterators[NAME] = $default;
            Iterators[TAG] = returnThis;
            if (DEFAULT) {
                methods = {
                    values: DEF_VALUES ? $default : getMethod(VALUES),
                    keys: IS_SET ? $default : getMethod(KEYS),
                    entries: $entries
                };
                if (FORCED) for (key in methods) {
                    if (!(key in proto)) redefine(proto, key, methods[key]);
                } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);
            }
            return methods;
        };


        /***/
    }),
    /* 71 */
    /***/ (function (module, exports, __webpack_require__) {

// helper for String#{startsWith, endsWith, includes}
        var isRegExp = __webpack_require__(72);
        var defined = __webpack_require__(28);

        module.exports = function (that, searchString, NAME) {
            if (isRegExp(searchString)) throw TypeError('String#' + NAME + " doesn't accept regex!");
            return String(defined(that));
        };


        /***/
    }),
    /* 72 */
    /***/ (function (module, exports, __webpack_require__) {

// 7.2.8 IsRegExp(argument)
        var isObject = __webpack_require__(2);
        var cof = __webpack_require__(21);
        var MATCH = __webpack_require__(5)('match');
        module.exports = function (it) {
            var isRegExp;
            return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : cof(it) == 'RegExp');
        };


        /***/
    }),
    /* 73 */
    /***/ (function (module, exports, __webpack_require__) {

        var MATCH = __webpack_require__(5)('match');
        module.exports = function (KEY) {
            var re = /./;
            try {
                '/./'[KEY](re);
            } catch (e) {
                try {
                    re[MATCH] = false;
                    return !'/./'[KEY](re);
                } catch (f) { /* empty */
                }
            }
            return true;
        };


        /***/
    }),
    /* 74 */
    /***/ (function (module, exports, __webpack_require__) {

// check on default Array iterator
        var Iterators = __webpack_require__(44);
        var ITERATOR = __webpack_require__(5)('iterator');
        var ArrayProto = Array.prototype;

        module.exports = function (it) {
            return it !== undefined && (Iterators.Array === it || ArrayProto[ITERATOR] === it);
        };


        /***/
    }),
    /* 75 */
    /***/ (function (module, exports, __webpack_require__) {

        var classof = __webpack_require__(50);
        var ITERATOR = __webpack_require__(5)('iterator');
        var Iterators = __webpack_require__(44);
        module.exports = __webpack_require__(25).getIteratorMethod = function (it) {
            if (it != undefined) return it[ITERATOR]
                || it['@@iterator']
                || Iterators[classof(it)];
        };


        /***/
    }),
    /* 76 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";
// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)

        var toObject = __webpack_require__(12);
        var toAbsoluteIndex = __webpack_require__(32);
        var toLength = __webpack_require__(8);
        module.exports = function fill(value /* , start = 0, end = @length */) {
            var O = toObject(this);
            var length = toLength(O.length);
            var aLen = arguments.length;
            var index = toAbsoluteIndex(aLen > 1 ? arguments[1] : undefined, length);
            var end = aLen > 2 ? arguments[2] : undefined;
            var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
            while (endPos > index) O[index++] = value;
            return O;
        };


        /***/
    }),
    /* 77 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// 21.2.5.3 get RegExp.prototype.flags
        var anObject = __webpack_require__(4);
        module.exports = function () {
            var that = anObject(this);
            var result = '';
            if (that.global) result += 'g';
            if (that.ignoreCase) result += 'i';
            if (that.multiline) result += 'm';
            if (that.unicode) result += 'u';
            if (that.sticky) result += 'y';
            return result;
        };


        /***/
    }),
    /* 78 */
    /***/ (function (module, exports, __webpack_require__) {

// 7.3.20 SpeciesConstructor(O, defaultConstructor)
        var anObject = __webpack_require__(4);
        var aFunction = __webpack_require__(20);
        var SPECIES = __webpack_require__(5)('species');
        module.exports = function (O, D) {
            var C = anObject(O).constructor;
            var S;
            return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? D : aFunction(S);
        };


        /***/
    }),
    /* 79 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var global = __webpack_require__(3);
        var DESCRIPTORS = __webpack_require__(7);
        var LIBRARY = __webpack_require__(31);
        var $typed = __webpack_require__(56);
        var hide = __webpack_require__(14);
        var redefineAll = __webpack_require__(40);
        var fails = __webpack_require__(1);
        var anInstance = __webpack_require__(39);
        var toInteger = __webpack_require__(22);
        var toLength = __webpack_require__(8);
        var toIndex = __webpack_require__(109);
        var gOPN = __webpack_require__(34).f;
        var dP = __webpack_require__(6).f;
        var arrayFill = __webpack_require__(76);
        var setToStringTag = __webpack_require__(37);
        var ARRAY_BUFFER = 'ArrayBuffer';
        var DATA_VIEW = 'DataView';
        var PROTOTYPE = 'prototype';
        var WRONG_LENGTH = 'Wrong length!';
        var WRONG_INDEX = 'Wrong index!';
        var $ArrayBuffer = global[ARRAY_BUFFER];
        var $DataView = global[DATA_VIEW];
        var Math = global.Math;
        var RangeError = global.RangeError;
// eslint-disable-next-line no-shadow-restricted-names
        var Infinity = global.Infinity;
        var BaseBuffer = $ArrayBuffer;
        var abs = Math.abs;
        var pow = Math.pow;
        var floor = Math.floor;
        var log = Math.log;
        var LN2 = Math.LN2;
        var BUFFER = 'buffer';
        var BYTE_LENGTH = 'byteLength';
        var BYTE_OFFSET = 'byteOffset';
        var $BUFFER = DESCRIPTORS ? '_b' : BUFFER;
        var $LENGTH = DESCRIPTORS ? '_l' : BYTE_LENGTH;
        var $OFFSET = DESCRIPTORS ? '_o' : BYTE_OFFSET;

// IEEE754 conversions based on https://github.com/feross/ieee754
        function packIEEE754(value, mLen, nBytes) {
            var buffer = new Array(nBytes);
            var eLen = nBytes * 8 - mLen - 1;
            var eMax = (1 << eLen) - 1;
            var eBias = eMax >> 1;
            var rt = mLen === 23 ? pow(2, -24) - pow(2, -77) : 0;
            var i = 0;
            var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
            var e, m, c;
            value = abs(value);
            // eslint-disable-next-line no-self-compare
            if (value != value || value === Infinity) {
                // eslint-disable-next-line no-self-compare
                m = value != value ? 1 : 0;
                e = eMax;
            } else {
                e = floor(log(value) / LN2);
                if (value * (c = pow(2, -e)) < 1) {
                    e--;
                    c *= 2;
                }
                if (e + eBias >= 1) {
                    value += rt / c;
                } else {
                    value += rt * pow(2, 1 - eBias);
                }
                if (value * c >= 2) {
                    e++;
                    c /= 2;
                }
                if (e + eBias >= eMax) {
                    m = 0;
                    e = eMax;
                } else if (e + eBias >= 1) {
                    m = (value * c - 1) * pow(2, mLen);
                    e = e + eBias;
                } else {
                    m = value * pow(2, eBias - 1) * pow(2, mLen);
                    e = 0;
                }
            }
            for (; mLen >= 8; buffer[i++] = m & 255, m /= 256, mLen -= 8) ;
            e = e << mLen | m;
            eLen += mLen;
            for (; eLen > 0; buffer[i++] = e & 255, e /= 256, eLen -= 8) ;
            buffer[--i] |= s * 128;
            return buffer;
        }

        function unpackIEEE754(buffer, mLen, nBytes) {
            var eLen = nBytes * 8 - mLen - 1;
            var eMax = (1 << eLen) - 1;
            var eBias = eMax >> 1;
            var nBits = eLen - 7;
            var i = nBytes - 1;
            var s = buffer[i--];
            var e = s & 127;
            var m;
            s >>= 7;
            for (; nBits > 0; e = e * 256 + buffer[i], i--, nBits -= 8) ;
            m = e & (1 << -nBits) - 1;
            e >>= -nBits;
            nBits += mLen;
            for (; nBits > 0; m = m * 256 + buffer[i], i--, nBits -= 8) ;
            if (e === 0) {
                e = 1 - eBias;
            } else if (e === eMax) {
                return m ? NaN : s ? -Infinity : Infinity;
            } else {
                m = m + pow(2, mLen);
                e = e - eBias;
            }
            return (s ? -1 : 1) * m * pow(2, e - mLen);
        }

        function unpackI32(bytes) {
            return bytes[3] << 24 | bytes[2] << 16 | bytes[1] << 8 | bytes[0];
        }

        function packI8(it) {
            return [it & 0xff];
        }

        function packI16(it) {
            return [it & 0xff, it >> 8 & 0xff];
        }

        function packI32(it) {
            return [it & 0xff, it >> 8 & 0xff, it >> 16 & 0xff, it >> 24 & 0xff];
        }

        function packF64(it) {
            return packIEEE754(it, 52, 8);
        }

        function packF32(it) {
            return packIEEE754(it, 23, 4);
        }

        function addGetter(C, key, internal) {
            dP(C[PROTOTYPE], key, {
                get: function () {
                    return this[internal];
                }
            });
        }

        function get(view, bytes, index, isLittleEndian) {
            var numIndex = +index;
            var intIndex = toIndex(numIndex);
            if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
            var store = view[$BUFFER]._b;
            var start = intIndex + view[$OFFSET];
            var pack = store.slice(start, start + bytes);
            return isLittleEndian ? pack : pack.reverse();
        }

        function set(view, bytes, index, conversion, value, isLittleEndian) {
            var numIndex = +index;
            var intIndex = toIndex(numIndex);
            if (intIndex + bytes > view[$LENGTH]) throw RangeError(WRONG_INDEX);
            var store = view[$BUFFER]._b;
            var start = intIndex + view[$OFFSET];
            var pack = conversion(+value);
            for (var i = 0; i < bytes; i++) store[start + i] = pack[isLittleEndian ? i : bytes - i - 1];
        }

        if (!$typed.ABV) {
            $ArrayBuffer = function ArrayBuffer(length) {
                anInstance(this, $ArrayBuffer, ARRAY_BUFFER);
                var byteLength = toIndex(length);
                this._b = arrayFill.call(new Array(byteLength), 0);
                this[$LENGTH] = byteLength;
            };

            $DataView = function DataView(buffer, byteOffset, byteLength) {
                anInstance(this, $DataView, DATA_VIEW);
                anInstance(buffer, $ArrayBuffer, DATA_VIEW);
                var bufferLength = buffer[$LENGTH];
                var offset = toInteger(byteOffset);
                if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset!');
                byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
                if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
                this[$BUFFER] = buffer;
                this[$OFFSET] = offset;
                this[$LENGTH] = byteLength;
            };

            if (DESCRIPTORS) {
                addGetter($ArrayBuffer, BYTE_LENGTH, '_l');
                addGetter($DataView, BUFFER, '_b');
                addGetter($DataView, BYTE_LENGTH, '_l');
                addGetter($DataView, BYTE_OFFSET, '_o');
            }

            redefineAll($DataView[PROTOTYPE], {
                getInt8: function getInt8(byteOffset) {
                    return get(this, 1, byteOffset)[0] << 24 >> 24;
                },
                getUint8: function getUint8(byteOffset) {
                    return get(this, 1, byteOffset)[0];
                },
                getInt16: function getInt16(byteOffset /* , littleEndian */) {
                    var bytes = get(this, 2, byteOffset, arguments[1]);
                    return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
                },
                getUint16: function getUint16(byteOffset /* , littleEndian */) {
                    var bytes = get(this, 2, byteOffset, arguments[1]);
                    return bytes[1] << 8 | bytes[0];
                },
                getInt32: function getInt32(byteOffset /* , littleEndian */) {
                    return unpackI32(get(this, 4, byteOffset, arguments[1]));
                },
                getUint32: function getUint32(byteOffset /* , littleEndian */) {
                    return unpackI32(get(this, 4, byteOffset, arguments[1])) >>> 0;
                },
                getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
                    return unpackIEEE754(get(this, 4, byteOffset, arguments[1]), 23, 4);
                },
                getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
                    return unpackIEEE754(get(this, 8, byteOffset, arguments[1]), 52, 8);
                },
                setInt8: function setInt8(byteOffset, value) {
                    set(this, 1, byteOffset, packI8, value);
                },
                setUint8: function setUint8(byteOffset, value) {
                    set(this, 1, byteOffset, packI8, value);
                },
                setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
                    set(this, 2, byteOffset, packI16, value, arguments[2]);
                },
                setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
                    set(this, 2, byteOffset, packI16, value, arguments[2]);
                },
                setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
                    set(this, 4, byteOffset, packI32, value, arguments[2]);
                },
                setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
                    set(this, 4, byteOffset, packI32, value, arguments[2]);
                },
                setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
                    set(this, 4, byteOffset, packF32, value, arguments[2]);
                },
                setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
                    set(this, 8, byteOffset, packF64, value, arguments[2]);
                }
            });
        } else {
            if (!fails(function () {
                    $ArrayBuffer(1);
                }) || !fails(function () {
                    new $ArrayBuffer(-1); // eslint-disable-line no-new
                }) || fails(function () {
                    new $ArrayBuffer(); // eslint-disable-line no-new
                    new $ArrayBuffer(1.5); // eslint-disable-line no-new
                    new $ArrayBuffer(NaN); // eslint-disable-line no-new
                    return $ArrayBuffer.name != ARRAY_BUFFER;
                })) {
                $ArrayBuffer = function ArrayBuffer(length) {
                    anInstance(this, $ArrayBuffer);
                    return new BaseBuffer(toIndex(length));
                };
                var ArrayBufferProto = $ArrayBuffer[PROTOTYPE] = BaseBuffer[PROTOTYPE];
                for (var keys = gOPN(BaseBuffer), j = 0, key; keys.length > j;) {
                    if (!((key = keys[j++]) in $ArrayBuffer)) hide($ArrayBuffer, key, BaseBuffer[key]);
                }
                if (!LIBRARY) ArrayBufferProto.constructor = $ArrayBuffer;
            }
            // iOS Safari 7.x bug
            var view = new $DataView(new $ArrayBuffer(2));
            var $setInt8 = $DataView[PROTOTYPE].setInt8;
            view.setInt8(0, 2147483648);
            view.setInt8(1, 2147483649);
            if (view.getInt8(0) || !view.getInt8(1)) redefineAll($DataView[PROTOTYPE], {
                setInt8: function setInt8(byteOffset, value) {
                    $setInt8.call(this, byteOffset, value << 24 >> 24);
                },
                setUint8: function setUint8(byteOffset, value) {
                    $setInt8.call(this, byteOffset, value << 24 >> 24);
                }
            }, true);
        }
        setToStringTag($ArrayBuffer, ARRAY_BUFFER);
        setToStringTag($DataView, DATA_VIEW);
        hide($DataView[PROTOTYPE], $typed.VIEW, true);
        exports[ARRAY_BUFFER] = $ArrayBuffer;
        exports[DATA_VIEW] = $DataView;


        /***/
    }),
    /* 80 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */
        (function (process) {

            var utils = __webpack_require__(13);
            var normalizeHeaderName = __webpack_require__(335);

            var DEFAULT_CONTENT_TYPE = {
                'Content-Type': 'application/x-www-form-urlencoded'
            };

            function setContentTypeIfUnset(headers, value) {
                if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {
                    headers['Content-Type'] = value;
                }
            }

            function getDefaultAdapter() {
                var adapter;
                if (typeof XMLHttpRequest !== 'undefined') {
                    // For browsers use XHR adapter
                    adapter = __webpack_require__(117);
                } else if (typeof process !== 'undefined') {
                    // For node use HTTP adapter
                    adapter = __webpack_require__(117);
                }
                return adapter;
            }

            var defaults = {
                adapter: getDefaultAdapter(),

                transformRequest: [function transformRequest(data, headers) {
                    normalizeHeaderName(headers, 'Content-Type');
                    if (utils.isFormData(data) ||
                        utils.isArrayBuffer(data) ||
                        utils.isBuffer(data) ||
                        utils.isStream(data) ||
                        utils.isFile(data) ||
                        utils.isBlob(data)
                    ) {
                        return data;
                    }
                    if (utils.isArrayBufferView(data)) {
                        return data.buffer;
                    }
                    if (utils.isURLSearchParams(data)) {
                        setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');
                        return data.toString();
                    }
                    if (utils.isObject(data)) {
                        setContentTypeIfUnset(headers, 'application/json;charset=utf-8');
                        return JSON.stringify(data);
                    }
                    return data;
                }],

                transformResponse: [function transformResponse(data) {
                    /*eslint no-param-reassign:0*/
                    if (typeof data === 'string') {
                        try {
                            data = JSON.parse(data);
                        } catch (e) { /* Ignore */
                        }
                    }
                    return data;
                }],

                /**
                 * A timeout in milliseconds to abort a request. If set to 0 (default) a
                 * timeout is not created.
                 */
                timeout: 0,

                xsrfCookieName: 'XSRF-TOKEN',
                xsrfHeaderName: 'X-XSRF-TOKEN',

                maxContentLength: -1,

                validateStatus: function validateStatus(status) {
                    return status >= 200 && status < 300;
                }
            };

            defaults.headers = {
                common: {
                    'Accept': 'application/json, text/plain, */*'
                }
            };

            utils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {
                defaults.headers[method] = {};
            });

            utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
                defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);
            });

            module.exports = defaults;

            /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(47)))

        /***/
    }),
    /* 81 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__PopUpFormSubmit_vue_vue_type_template_id_4957ef48___ = __webpack_require__(362);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_1__PopUpFormSubmit_vue_vue_type_script_lang_js___ = __webpack_require__(130);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_1__PopUpFormSubmit_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_1__PopUpFormSubmit_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_2__PopUpFormSubmit_vue_vue_type_style_index_0_lang_css___ = __webpack_require__(364);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_3__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(36);


        /* normalize component */

        var component = Object(__WEBPACK_IMPORTED_MODULE_3__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
            __WEBPACK_IMPORTED_MODULE_1__PopUpFormSubmit_vue_vue_type_script_lang_js___["default"],
            __WEBPACK_IMPORTED_MODULE_0__PopUpFormSubmit_vue_vue_type_template_id_4957ef48___["a" /* render */],
            __WEBPACK_IMPORTED_MODULE_0__PopUpFormSubmit_vue_vue_type_template_id_4957ef48___["b" /* staticRenderFns */],
            false,
            null,
            null,
            null
        )

        /* hot reload */
        if (false) {
            var api = require("/Users/vintage/Desktop/myProject/talan_vintage/node_modules/vue-hot-reload-api/dist/index.js")
            api.install(require('vue'))
            if (api.compatible) {
                module.hot.accept()
                if (!module.hot.data) {
                    api.createRecord('4957ef48', component.options)
                } else {
                    api.reload('4957ef48', component.options)
                }
                module.hot.accept("./PopUpFormSubmit.vue?vue&type=template&id=4957ef48&", function () {
                    api.rerender('4957ef48', {
                        render: render,
                        staticRenderFns: staticRenderFns
                    })
                })
            }
        }
        component.options.__file = "src/js/componentsVue/PopUpFormSubmit.vue"
        /* harmony default export */
        __webpack_exports__["default"] = (component.exports);

        /***/
    }),
    /* 82 */
    /***/ (function (module, exports, __webpack_require__) {

        module.exports = !__webpack_require__(7) && !__webpack_require__(1)(function () {
            return Object.defineProperty(__webpack_require__(58)('div'), 'a', {
                get: function () {
                    return 7;
                }
            }).a != 7;
        });


        /***/
    }),
    /* 83 */
    /***/ (function (module, exports, __webpack_require__) {

        exports.f = __webpack_require__(5);


        /***/
    }),
    /* 84 */
    /***/ (function (module, exports, __webpack_require__) {

        var has = __webpack_require__(10);
        var toIObject = __webpack_require__(16);
        var arrayIndexOf = __webpack_require__(60)(false);
        var IE_PROTO = __webpack_require__(61)('IE_PROTO');

        module.exports = function (object, names) {
            var O = toIObject(object);
            var i = 0;
            var result = [];
            var key;
            for (key in O) if (key != IE_PROTO) has(O, key) && result.push(key);
            // Don't enum bug & hidden keys
            while (names.length > i) if (has(O, key = names[i++])) {
                ~arrayIndexOf(result, key) || result.push(key);
            }
            return result;
        };


        /***/
    }),
    /* 85 */
    /***/ (function (module, exports, __webpack_require__) {

        var dP = __webpack_require__(6);
        var anObject = __webpack_require__(4);
        var getKeys = __webpack_require__(42);

        module.exports = __webpack_require__(7) ? Object.defineProperties : function defineProperties(O, Properties) {
            anObject(O);
            var keys = getKeys(Properties);
            var length = keys.length;
            var i = 0;
            var P;
            while (length > i) dP.f(O, P = keys[i++], Properties[P]);
            return O;
        };


        /***/
    }),
    /* 86 */
    /***/ (function (module, exports, __webpack_require__) {

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
        var toIObject = __webpack_require__(16);
        var gOPN = __webpack_require__(34).f;
        var toString = {}.toString;

        var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
            ? Object.getOwnPropertyNames(window) : [];

        var getWindowNames = function (it) {
            try {
                return gOPN(it);
            } catch (e) {
                return windowNames.slice();
            }
        };

        module.exports.f = function getOwnPropertyNames(it) {
            return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : gOPN(toIObject(it));
        };


        /***/
    }),
    /* 87 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// 19.1.2.1 Object.assign(target, source, ...)
        var getKeys = __webpack_require__(42);
        var gOPS = __webpack_require__(48);
        var pIE = __webpack_require__(49);
        var toObject = __webpack_require__(12);
        var IObject = __webpack_require__(43);
        var $assign = Object.assign;

// should work with symbols and should have deterministic property order (V8 bug)
        module.exports = !$assign || __webpack_require__(1)(function () {
            var A = {};
            var B = {};
            // eslint-disable-next-line no-undef
            var S = Symbol();
            var K = 'abcdefghijklmnopqrst';
            A[S] = 7;
            K.split('').forEach(function (k) {
                B[k] = k;
            });
            return $assign({}, A)[S] != 7 || Object.keys($assign({}, B)).join('') != K;
        }) ? function assign(target, source) { // eslint-disable-line no-unused-vars
            var T = toObject(target);
            var aLen = arguments.length;
            var index = 1;
            var getSymbols = gOPS.f;
            var isEnum = pIE.f;
            while (aLen > index) {
                var S = IObject(arguments[index++]);
                var keys = getSymbols ? getKeys(S).concat(getSymbols(S)) : getKeys(S);
                var length = keys.length;
                var j = 0;
                var key;
                while (length > j) if (isEnum.call(S, key = keys[j++])) T[key] = S[key];
            }
            return T;
        } : $assign;


        /***/
    }),
    /* 88 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var aFunction = __webpack_require__(20);
        var isObject = __webpack_require__(2);
        var invoke = __webpack_require__(89);
        var arraySlice = [].slice;
        var factories = {};

        var construct = function (F, len, args) {
            if (!(len in factories)) {
                for (var n = [], i = 0; i < len; i++) n[i] = 'a[' + i + ']';
                // eslint-disable-next-line no-new-func
                factories[len] = Function('F,a', 'return new F(' + n.join(',') + ')');
            }
            return factories[len](F, args);
        };

        module.exports = Function.bind || function bind(that /* , ...args */) {
            var fn = aFunction(this);
            var partArgs = arraySlice.call(arguments, 1);
            var bound = function (/* args... */) {
                var args = partArgs.concat(arraySlice.call(arguments));
                return this instanceof bound ? construct(fn, args.length, args) : invoke(fn, args, that);
            };
            if (isObject(fn.prototype)) bound.prototype = fn.prototype;
            return bound;
        };


        /***/
    }),
    /* 89 */
    /***/ (function (module, exports) {

// fast apply, http://jsperf.lnkit.com/fast-apply/5
        module.exports = function (fn, args, that) {
            var un = that === undefined;
            switch (args.length) {
                case 0:
                    return un ? fn()
                        : fn.call(that);
                case 1:
                    return un ? fn(args[0])
                        : fn.call(that, args[0]);
                case 2:
                    return un ? fn(args[0], args[1])
                        : fn.call(that, args[0], args[1]);
                case 3:
                    return un ? fn(args[0], args[1], args[2])
                        : fn.call(that, args[0], args[1], args[2]);
                case 4:
                    return un ? fn(args[0], args[1], args[2], args[3])
                        : fn.call(that, args[0], args[1], args[2], args[3]);
            }
            return fn.apply(that, args);
        };


        /***/
    }),
    /* 90 */
    /***/ (function (module, exports, __webpack_require__) {

        var $parseInt = __webpack_require__(3).parseInt;
        var $trim = __webpack_require__(51).trim;
        var ws = __webpack_require__(66);
        var hex = /^[-+]?0[xX]/;

        module.exports = $parseInt(ws + '08') !== 8 || $parseInt(ws + '0x16') !== 22 ? function parseInt(str, radix) {
            var string = $trim(String(str), 3);
            return $parseInt(string, (radix >>> 0) || (hex.test(string) ? 16 : 10));
        } : $parseInt;


        /***/
    }),
    /* 91 */
    /***/ (function (module, exports, __webpack_require__) {

        var $parseFloat = __webpack_require__(3).parseFloat;
        var $trim = __webpack_require__(51).trim;

        module.exports = 1 / $parseFloat(__webpack_require__(66) + '-0') !== -Infinity ? function parseFloat(str) {
            var string = $trim(String(str), 3);
            var result = $parseFloat(string);
            return result === 0 && string.charAt(0) == '-' ? -0 : result;
        } : $parseFloat;


        /***/
    }),
    /* 92 */
    /***/ (function (module, exports, __webpack_require__) {

        var cof = __webpack_require__(21);
        module.exports = function (it, msg) {
            if (typeof it != 'number' && cof(it) != 'Number') throw TypeError(msg);
            return +it;
        };


        /***/
    }),
    /* 93 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var toInteger = __webpack_require__(22);
        var defined = __webpack_require__(28);

        module.exports = function repeat(count) {
            var str = String(defined(this));
            var res = '';
            var n = toInteger(count);
            if (n < 0 || n == Infinity) throw RangeError("Count can't be negative");
            for (; n > 0; (n >>>= 1) && (str += str)) if (n & 1) res += str;
            return res;
        };


        /***/
    }),
    /* 94 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
        var isObject = __webpack_require__(2);
        var floor = Math.floor;
        module.exports = function isInteger(it) {
            return !isObject(it) && isFinite(it) && floor(it) === it;
        };


        /***/
    }),
    /* 95 */
    /***/ (function (module, exports) {

// 20.2.2.20 Math.log1p(x)
        module.exports = Math.log1p || function log1p(x) {
            return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : Math.log(1 + x);
        };


        /***/
    }),
    /* 96 */
    /***/ (function (module, exports, __webpack_require__) {

        var toInteger = __webpack_require__(22);
        var defined = __webpack_require__(28);
// true  -> String#at
// false -> String#codePointAt
        module.exports = function (TO_STRING) {
            return function (that, pos) {
                var s = String(defined(that));
                var i = toInteger(pos);
                var l = s.length;
                var a, b;
                if (i < 0 || i >= l) return TO_STRING ? '' : undefined;
                a = s.charCodeAt(i);
                return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff
                    ? TO_STRING ? s.charAt(i) : a
                    : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;
            };
        };


        /***/
    }),
    /* 97 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var create = __webpack_require__(33);
        var descriptor = __webpack_require__(29);
        var setToStringTag = __webpack_require__(37);
        var IteratorPrototype = {};

// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()
        __webpack_require__(14)(IteratorPrototype, __webpack_require__(5)('iterator'), function () {
            return this;
        });

        module.exports = function (Constructor, NAME, next) {
            Constructor.prototype = create(IteratorPrototype, {next: descriptor(1, next)});
            setToStringTag(Constructor, NAME + ' Iterator');
        };


        /***/
    }),
    /* 98 */
    /***/ (function (module, exports, __webpack_require__) {

// call something on iterator step with safe closing on error
        var anObject = __webpack_require__(4);
        module.exports = function (iterator, fn, value, entries) {
            try {
                return entries ? fn(anObject(value)[0], value[1]) : fn(value);
                // 7.4.6 IteratorClose(iterator, completion)
            } catch (e) {
                var ret = iterator['return'];
                if (ret !== undefined) anObject(ret.call(iterator));
                throw e;
            }
        };


        /***/
    }),
    /* 99 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $defineProperty = __webpack_require__(6);
        var createDesc = __webpack_require__(29);

        module.exports = function (object, index, value) {
            if (index in object) $defineProperty.f(object, index, createDesc(0, value));
            else object[index] = value;
        };


        /***/
    }),
    /* 100 */
    /***/ (function (module, exports, __webpack_require__) {

        var aFunction = __webpack_require__(20);
        var toObject = __webpack_require__(12);
        var IObject = __webpack_require__(43);
        var toLength = __webpack_require__(8);

        module.exports = function (that, callbackfn, aLen, memo, isRight) {
            aFunction(callbackfn);
            var O = toObject(that);
            var self = IObject(O);
            var length = toLength(O.length);
            var index = isRight ? length - 1 : 0;
            var i = isRight ? -1 : 1;
            if (aLen < 2) for (; ;) {
                if (index in self) {
                    memo = self[index];
                    index += i;
                    break;
                }
                index += i;
                if (isRight ? index < 0 : length <= index) {
                    throw TypeError('Reduce of empty array with no initial value');
                }
            }
            for (; isRight ? index >= 0 : length > index; index += i) if (index in self) {
                memo = callbackfn(memo, self[index], index, O);
            }
            return memo;
        };


        /***/
    }),
    /* 101 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";
// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)

        var toObject = __webpack_require__(12);
        var toAbsoluteIndex = __webpack_require__(32);
        var toLength = __webpack_require__(8);

        module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
            var O = toObject(this);
            var len = toLength(O.length);
            var to = toAbsoluteIndex(target, len);
            var from = toAbsoluteIndex(start, len);
            var end = arguments.length > 2 ? arguments[2] : undefined;
            var count = Math.min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
            var inc = 1;
            if (from < to && to < from + count) {
                inc = -1;
                from += count - 1;
                to += count - 1;
            }
            while (count-- > 0) {
                if (from in O) O[to] = O[from];
                else delete O[to];
                to += inc;
                from += inc;
            }
            return O;
        };


        /***/
    }),
    /* 102 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var addToUnscopables = __webpack_require__(45);
        var step = __webpack_require__(103);
        var Iterators = __webpack_require__(44);
        var toIObject = __webpack_require__(16);

// 22.1.3.4 Array.prototype.entries()
// 22.1.3.13 Array.prototype.keys()
// 22.1.3.29 Array.prototype.values()
// 22.1.3.30 Array.prototype[@@iterator]()
        module.exports = __webpack_require__(70)(Array, 'Array', function (iterated, kind) {
            this._t = toIObject(iterated); // target
            this._i = 0;                   // next index
            this._k = kind;                // kind
// 22.1.5.2.1 %ArrayIteratorPrototype%.next()
        }, function () {
            var O = this._t;
            var kind = this._k;
            var index = this._i++;
            if (!O || index >= O.length) {
                this._t = undefined;
                return step(1);
            }
            if (kind == 'keys') return step(0, index);
            if (kind == 'values') return step(0, O[index]);
            return step(0, [index, O[index]]);
        }, 'values');

// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)
        Iterators.Arguments = Iterators.Array;

        addToUnscopables('keys');
        addToUnscopables('values');
        addToUnscopables('entries');


        /***/
    }),
    /* 103 */
    /***/ (function (module, exports) {

        module.exports = function (done, value) {
            return {value: value, done: !!done};
        };


        /***/
    }),
    /* 104 */
    /***/ (function (module, exports, __webpack_require__) {

// 21.2.5.3 get RegExp.prototype.flags()
        if (__webpack_require__(7) && /./g.flags != 'g') __webpack_require__(6).f(RegExp.prototype, 'flags', {
            configurable: true,
            get: __webpack_require__(77)
        });


        /***/
    }),
    /* 105 */
    /***/ (function (module, exports, __webpack_require__) {

        var ctx = __webpack_require__(19);
        var invoke = __webpack_require__(89);
        var html = __webpack_require__(64);
        var cel = __webpack_require__(58);
        var global = __webpack_require__(3);
        var process = global.process;
        var setTask = global.setImmediate;
        var clearTask = global.clearImmediate;
        var MessageChannel = global.MessageChannel;
        var Dispatch = global.Dispatch;
        var counter = 0;
        var queue = {};
        var ONREADYSTATECHANGE = 'onreadystatechange';
        var defer, channel, port;
        var run = function () {
            var id = +this;
            // eslint-disable-next-line no-prototype-builtins
            if (queue.hasOwnProperty(id)) {
                var fn = queue[id];
                delete queue[id];
                fn();
            }
        };
        var listener = function (event) {
            run.call(event.data);
        };
// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
        if (!setTask || !clearTask) {
            setTask = function setImmediate(fn) {
                var args = [];
                var i = 1;
                while (arguments.length > i) args.push(arguments[i++]);
                queue[++counter] = function () {
                    // eslint-disable-next-line no-new-func
                    invoke(typeof fn == 'function' ? fn : Function(fn), args);
                };
                defer(counter);
                return counter;
            };
            clearTask = function clearImmediate(id) {
                delete queue[id];
            };
            // Node.js 0.8-
            if (__webpack_require__(21)(process) == 'process') {
                defer = function (id) {
                    process.nextTick(ctx(run, id, 1));
                };
                // Sphere (JS game engine) Dispatch API
            } else if (Dispatch && Dispatch.now) {
                defer = function (id) {
                    Dispatch.now(ctx(run, id, 1));
                };
                // Browsers with MessageChannel, includes WebWorkers
            } else if (MessageChannel) {
                channel = new MessageChannel();
                port = channel.port2;
                channel.port1.onmessage = listener;
                defer = ctx(port.postMessage, port, 1);
                // Browsers with postMessage, skip WebWorkers
                // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
            } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts) {
                defer = function (id) {
                    global.postMessage(id + '', '*');
                };
                global.addEventListener('message', listener, false);
                // IE8-
            } else if (ONREADYSTATECHANGE in cel('script')) {
                defer = function (id) {
                    html.appendChild(cel('script'))[ONREADYSTATECHANGE] = function () {
                        html.removeChild(this);
                        run.call(id);
                    };
                };
                // Rest old browsers
            } else {
                defer = function (id) {
                    setTimeout(ctx(run, id, 1), 0);
                };
            }
        }
        module.exports = {
            set: setTask,
            clear: clearTask
        };


        /***/
    }),
    /* 106 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// 25.4.1.5 NewPromiseCapability(C)
        var aFunction = __webpack_require__(20);

        function PromiseCapability(C) {
            var resolve, reject;
            this.promise = new C(function ($$resolve, $$reject) {
                if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
                resolve = $$resolve;
                reject = $$reject;
            });
            this.resolve = aFunction(resolve);
            this.reject = aFunction(reject);
        }

        module.exports.f = function (C) {
            return new PromiseCapability(C);
        };


        /***/
    }),
    /* 107 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var dP = __webpack_require__(6).f;
        var create = __webpack_require__(33);
        var redefineAll = __webpack_require__(40);
        var ctx = __webpack_require__(19);
        var anInstance = __webpack_require__(39);
        var forOf = __webpack_require__(54);
        var $iterDefine = __webpack_require__(70);
        var step = __webpack_require__(103);
        var setSpecies = __webpack_require__(38);
        var DESCRIPTORS = __webpack_require__(7);
        var fastKey = __webpack_require__(27).fastKey;
        var validate = __webpack_require__(41);
        var SIZE = DESCRIPTORS ? '_s' : 'size';

        var getEntry = function (that, key) {
            // fast case
            var index = fastKey(key);
            var entry;
            if (index !== 'F') return that._i[index];
            // frozen object case
            for (entry = that._f; entry; entry = entry.n) {
                if (entry.k == key) return entry;
            }
        };

        module.exports = {
            getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
                var C = wrapper(function (that, iterable) {
                    anInstance(that, C, NAME, '_i');
                    that._t = NAME;         // collection type
                    that._i = create(null); // index
                    that._f = undefined;    // first entry
                    that._l = undefined;    // last entry
                    that[SIZE] = 0;         // size
                    if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
                });
                redefineAll(C.prototype, {
                    // 23.1.3.1 Map.prototype.clear()
                    // 23.2.3.2 Set.prototype.clear()
                    clear: function clear() {
                        for (var that = validate(this, NAME), data = that._i, entry = that._f; entry; entry = entry.n) {
                            entry.r = true;
                            if (entry.p) entry.p = entry.p.n = undefined;
                            delete data[entry.i];
                        }
                        that._f = that._l = undefined;
                        that[SIZE] = 0;
                    },
                    // 23.1.3.3 Map.prototype.delete(key)
                    // 23.2.3.4 Set.prototype.delete(value)
                    'delete': function (key) {
                        var that = validate(this, NAME);
                        var entry = getEntry(that, key);
                        if (entry) {
                            var next = entry.n;
                            var prev = entry.p;
                            delete that._i[entry.i];
                            entry.r = true;
                            if (prev) prev.n = next;
                            if (next) next.p = prev;
                            if (that._f == entry) that._f = next;
                            if (that._l == entry) that._l = prev;
                            that[SIZE]--;
                        }
                        return !!entry;
                    },
                    // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
                    // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
                    forEach: function forEach(callbackfn /* , that = undefined */) {
                        validate(this, NAME);
                        var f = ctx(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
                        var entry;
                        while (entry = entry ? entry.n : this._f) {
                            f(entry.v, entry.k, this);
                            // revert to the last existing entry
                            while (entry && entry.r) entry = entry.p;
                        }
                    },
                    // 23.1.3.7 Map.prototype.has(key)
                    // 23.2.3.7 Set.prototype.has(value)
                    has: function has(key) {
                        return !!getEntry(validate(this, NAME), key);
                    }
                });
                if (DESCRIPTORS) dP(C.prototype, 'size', {
                    get: function () {
                        return validate(this, NAME)[SIZE];
                    }
                });
                return C;
            },
            def: function (that, key, value) {
                var entry = getEntry(that, key);
                var prev, index;
                // change existing entry
                if (entry) {
                    entry.v = value;
                    // create new entry
                } else {
                    that._l = entry = {
                        i: index = fastKey(key, true), // <- index
                        k: key,                        // <- key
                        v: value,                      // <- value
                        p: prev = that._l,             // <- previous entry
                        n: undefined,                  // <- next entry
                        r: false                       // <- removed
                    };
                    if (!that._f) that._f = entry;
                    if (prev) prev.n = entry;
                    that[SIZE]++;
                    // add to index
                    if (index !== 'F') that._i[index] = entry;
                }
                return that;
            },
            getEntry: getEntry,
            setStrong: function (C, NAME, IS_MAP) {
                // add .keys, .values, .entries, [@@iterator]
                // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11
                $iterDefine(C, NAME, function (iterated, kind) {
                    this._t = validate(iterated, NAME); // target
                    this._k = kind;                     // kind
                    this._l = undefined;                // previous
                }, function () {
                    var that = this;
                    var kind = that._k;
                    var entry = that._l;
                    // revert to the last existing entry
                    while (entry && entry.r) entry = entry.p;
                    // get next entry
                    if (!that._t || !(that._l = entry = entry ? entry.n : that._t._f)) {
                        // or finish the iteration
                        that._t = undefined;
                        return step(1);
                    }
                    // return step by kind
                    if (kind == 'keys') return step(0, entry.k);
                    if (kind == 'values') return step(0, entry.v);
                    return step(0, [entry.k, entry.v]);
                }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

                // add [@@species], 23.1.2.2, 23.2.2.2
                setSpecies(NAME);
            }
        };


        /***/
    }),
    /* 108 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var redefineAll = __webpack_require__(40);
        var getWeak = __webpack_require__(27).getWeak;
        var anObject = __webpack_require__(4);
        var isObject = __webpack_require__(2);
        var anInstance = __webpack_require__(39);
        var forOf = __webpack_require__(54);
        var createArrayMethod = __webpack_require__(18);
        var $has = __webpack_require__(10);
        var validate = __webpack_require__(41);
        var arrayFind = createArrayMethod(5);
        var arrayFindIndex = createArrayMethod(6);
        var id = 0;

// fallback for uncaught frozen keys
        var uncaughtFrozenStore = function (that) {
            return that._l || (that._l = new UncaughtFrozenStore());
        };
        var UncaughtFrozenStore = function () {
            this.a = [];
        };
        var findUncaughtFrozen = function (store, key) {
            return arrayFind(store.a, function (it) {
                return it[0] === key;
            });
        };
        UncaughtFrozenStore.prototype = {
            get: function (key) {
                var entry = findUncaughtFrozen(this, key);
                if (entry) return entry[1];
            },
            has: function (key) {
                return !!findUncaughtFrozen(this, key);
            },
            set: function (key, value) {
                var entry = findUncaughtFrozen(this, key);
                if (entry) entry[1] = value;
                else this.a.push([key, value]);
            },
            'delete': function (key) {
                var index = arrayFindIndex(this.a, function (it) {
                    return it[0] === key;
                });
                if (~index) this.a.splice(index, 1);
                return !!~index;
            }
        };

        module.exports = {
            getConstructor: function (wrapper, NAME, IS_MAP, ADDER) {
                var C = wrapper(function (that, iterable) {
                    anInstance(that, C, NAME, '_i');
                    that._t = NAME;      // collection type
                    that._i = id++;      // collection id
                    that._l = undefined; // leak store for uncaught frozen objects
                    if (iterable != undefined) forOf(iterable, IS_MAP, that[ADDER], that);
                });
                redefineAll(C.prototype, {
                    // 23.3.3.2 WeakMap.prototype.delete(key)
                    // 23.4.3.3 WeakSet.prototype.delete(value)
                    'delete': function (key) {
                        if (!isObject(key)) return false;
                        var data = getWeak(key);
                        if (data === true) return uncaughtFrozenStore(validate(this, NAME))['delete'](key);
                        return data && $has(data, this._i) && delete data[this._i];
                    },
                    // 23.3.3.4 WeakMap.prototype.has(key)
                    // 23.4.3.4 WeakSet.prototype.has(value)
                    has: function has(key) {
                        if (!isObject(key)) return false;
                        var data = getWeak(key);
                        if (data === true) return uncaughtFrozenStore(validate(this, NAME)).has(key);
                        return data && $has(data, this._i);
                    }
                });
                return C;
            },
            def: function (that, key, value) {
                var data = getWeak(anObject(key), true);
                if (data === true) uncaughtFrozenStore(that).set(key, value);
                else data[that._i] = value;
                return that;
            },
            ufstore: uncaughtFrozenStore
        };


        /***/
    }),
    /* 109 */
    /***/ (function (module, exports, __webpack_require__) {

// https://tc39.github.io/ecma262/#sec-toindex
        var toInteger = __webpack_require__(22);
        var toLength = __webpack_require__(8);
        module.exports = function (it) {
            if (it === undefined) return 0;
            var number = toInteger(it);
            var length = toLength(number);
            if (number !== length) throw RangeError('Wrong length!');
            return length;
        };


        /***/
    }),
    /* 110 */
    /***/ (function (module, exports, __webpack_require__) {

        return;
        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
        !function (i) {
            "use strict";
            true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_FACTORY__ = (i),
                __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
                    (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : "undefined" != typeof exports ? module.exports = i(require("jquery")) : i(jQuery)
        }(function (i) {
            "use strict";
            var e = window.Slick || {};
            (e = function () {
                var e = 0;
                return function (t, o) {
                    var s, n = this;
                    n.defaults = {
                        accessibility: !0,
                        adaptiveHeight: !1,
                        appendArrows: i(t),
                        appendDots: i(t),
                        arrows: !0,
                        asNavFor: null,
                        prevArrow: '<button class="slick-prev" aria-label="Previous" type="button">Previous</button>',
                        nextArrow: '<button class="slick-next" aria-label="Next" type="button">Next</button>',
                        autoplay: !1,
                        autoplaySpeed: 3e3,
                        centerMode: !1,
                        centerPadding: "50px",
                        cssEase: "ease",
                        customPaging: function (e, t) {
                            return i('<button type="button" />').text(t + 1)
                        },
                        dots: !1,
                        dotsClass: "slick-dots",
                        draggable: !0,
                        easing: "linear",
                        edgeFriction: .35,
                        fade: !1,
                        focusOnSelect: !1,
                        focusOnChange: !1,
                        infinite: !0,
                        initialSlide: 0,
                        lazyLoad: "ondemand",
                        mobileFirst: !1,
                        pauseOnHover: !0,
                        pauseOnFocus: !0,
                        pauseOnDotsHover: !1,
                        respondTo: "window",
                        responsive: null,
                        rows: 1,
                        rtl: !1,
                        slide: "",
                        slidesPerRow: 1,
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        speed: 500,
                        swipe: !0,
                        swipeToSlide: !1,
                        touchMove: !0,
                        touchThreshold: 5,
                        useCSS: !0,
                        useTransform: !0,
                        variableWidth: !1,
                        vertical: !1,
                        verticalSwiping: !1,
                        waitForAnimate: !0,
                        zIndex: 1e3
                    }, n.initials = {
                        animating: !1,
                        dragging: !1,
                        autoPlayTimer: null,
                        currentDirection: 0,
                        currentLeft: null,
                        currentSlide: 0,
                        direction: 1,
                        $dots: null,
                        listWidth: null,
                        listHeight: null,
                        loadIndex: 0,
                        $nextArrow: null,
                        $prevArrow: null,
                        scrolling: !1,
                        slideCount: null,
                        slideWidth: null,
                        $slideTrack: null,
                        $slides: null,
                        sliding: !1,
                        slideOffset: 0,
                        swipeLeft: null,
                        swiping: !1,
                        $list: null,
                        touchObject: {},
                        transformsEnabled: !1,
                        unslicked: !1
                    }, i.extend(n, n.initials), n.activeBreakpoint = null, n.animType = null, n.animProp = null, n.breakpoints = [], n.breakpointSettings = [], n.cssTransitions = !1, n.focussed = !1, n.interrupted = !1, n.hidden = "hidden", n.paused = !0, n.positionProp = null, n.respondTo = null, n.rowCount = 1, n.shouldClick = !0, n.$slider = i(t), n.$slidesCache = null, n.transformType = null, n.transitionType = null, n.visibilityChange = "visibilitychange", n.windowWidth = 0, n.windowTimer = null, s = i(t).data("slick") || {}, n.options = i.extend({}, n.defaults, o, s), n.currentSlide = n.options.initialSlide, n.originalSettings = n.options, void 0 !== document.mozHidden ? (n.hidden = "mozHidden", n.visibilityChange = "mozvisibilitychange") : void 0 !== document.webkitHidden && (n.hidden = "webkitHidden", n.visibilityChange = "webkitvisibilitychange"), n.autoPlay = i.proxy(n.autoPlay, n), n.autoPlayClear = i.proxy(n.autoPlayClear, n), n.autoPlayIterator = i.proxy(n.autoPlayIterator, n), n.changeSlide = i.proxy(n.changeSlide, n), n.clickHandler = i.proxy(n.clickHandler, n), n.selectHandler = i.proxy(n.selectHandler, n), n.setPosition = i.proxy(n.setPosition, n), n.swipeHandler = i.proxy(n.swipeHandler, n), n.dragHandler = i.proxy(n.dragHandler, n), n.keyHandler = i.proxy(n.keyHandler, n), n.instanceUid = e++, n.htmlExpr = /^(?:\s*(<[\w\W]+>)[^>]*)$/, n.registerBreakpoints(), n.init(!0)
                }
            }()).prototype.activateADA = function () {
                this.$slideTrack.find(".slick-active").attr({"aria-hidden": "false"}).find("a, input, button, select").attr({tabindex: "0"})
            }, e.prototype.addSlide = e.prototype.slickAdd = function (e, t, o) {
                var s = this;
                if ("boolean" == typeof t) o = t, t = null; else if (t < 0 || t >= s.slideCount) return !1;
                s.unload(), "number" == typeof t ? 0 === t && 0 === s.$slides.length ? i(e).appendTo(s.$slideTrack) : o ? i(e).insertBefore(s.$slides.eq(t)) : i(e).insertAfter(s.$slides.eq(t)) : !0 === o ? i(e).prependTo(s.$slideTrack) : i(e).appendTo(s.$slideTrack), s.$slides = s.$slideTrack.children(this.options.slide), s.$slideTrack.children(this.options.slide).detach(), s.$slideTrack.append(s.$slides), s.$slides.each(function (e, t) {
                    i(t).attr("data-slick-index", e)
                }), s.$slidesCache = s.$slides, s.reinit()
            }, e.prototype.animateHeight = function () {
                var i = this;
                if (1 === i.options.slidesToShow && !0 === i.options.adaptiveHeight && !1 === i.options.vertical) {
                    var e = i.$slides.eq(i.currentSlide).outerHeight(!0);
                    i.$list.animate({height: e}, i.options.speed)
                }
            }, e.prototype.animateSlide = function (e, t) {
                var o = {}, s = this;
                s.animateHeight(), !0 === s.options.rtl && !1 === s.options.vertical && (e = -e), !1 === s.transformsEnabled ? !1 === s.options.vertical ? s.$slideTrack.animate({left: e}, s.options.speed, s.options.easing, t) : s.$slideTrack.animate({top: e}, s.options.speed, s.options.easing, t) : !1 === s.cssTransitions ? (!0 === s.options.rtl && (s.currentLeft = -s.currentLeft), i({animStart: s.currentLeft}).animate({animStart: e}, {
                    duration: s.options.speed,
                    easing: s.options.easing,
                    step: function (i) {
                        i = Math.ceil(i), !1 === s.options.vertical ? (o[s.animType] = "translate(" + i + "px, 0px)", s.$slideTrack.css(o)) : (o[s.animType] = "translate(0px," + i + "px)", s.$slideTrack.css(o))
                    },
                    complete: function () {
                        t && t.call()
                    }
                })) : (s.applyTransition(), e = Math.ceil(e), !1 === s.options.vertical ? o[s.animType] = "translate3d(" + e + "px, 0px, 0px)" : o[s.animType] = "translate3d(0px," + e + "px, 0px)", s.$slideTrack.css(o), t && setTimeout(function () {
                    s.disableTransition(), t.call()
                }, s.options.speed))
            }, e.prototype.getNavTarget = function () {
                var e = this, t = e.options.asNavFor;
                return t && null !== t && (t = i(t).not(e.$slider)), t
            }, e.prototype.asNavFor = function (e) {
                var t = this.getNavTarget();
                null !== t && "object" == typeof t && t.each(function () {
                    var t = i(this).slick("getSlick");
                    t.unslicked || t.slideHandler(e, !0)
                })
            }, e.prototype.applyTransition = function (i) {
                var e = this, t = {};
                !1 === e.options.fade ? t[e.transitionType] = e.transformType + " " + e.options.speed + "ms " + e.options.cssEase : t[e.transitionType] = "opacity " + e.options.speed + "ms " + e.options.cssEase, !1 === e.options.fade ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t)
            }, e.prototype.autoPlay = function () {
                var i = this;
                i.autoPlayClear(), i.slideCount > i.options.slidesToShow && (i.autoPlayTimer = setInterval(i.autoPlayIterator, i.options.autoplaySpeed))
            }, e.prototype.autoPlayClear = function () {
                var i = this;
                i.autoPlayTimer && clearInterval(i.autoPlayTimer)
            }, e.prototype.autoPlayIterator = function () {
                var i = this, e = i.currentSlide + i.options.slidesToScroll;
                i.paused || i.interrupted || i.focussed || (!1 === i.options.infinite && (1 === i.direction && i.currentSlide + 1 === i.slideCount - 1 ? i.direction = 0 : 0 === i.direction && (e = i.currentSlide - i.options.slidesToScroll, i.currentSlide - 1 == 0 && (i.direction = 1))), i.slideHandler(e))
            }, e.prototype.buildArrows = function () {
                var e = this;
                !0 === e.options.arrows && (e.$prevArrow = i(e.options.prevArrow).addClass("slick-arrow"), e.$nextArrow = i(e.options.nextArrow).addClass("slick-arrow"), e.slideCount > e.options.slidesToShow ? (e.$prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), e.$nextArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.prependTo(e.options.appendArrows), e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.appendTo(e.options.appendArrows), !0 !== e.options.infinite && e.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")) : e.$prevArrow.add(e.$nextArrow).addClass("slick-hidden").attr({
                    "aria-disabled": "true",
                    tabindex: "-1"
                }))
            }, e.prototype.buildDots = function () {
                var e, t, o = this;
                if (!0 === o.options.dots) {
                    for (o.$slider.addClass("slick-dotted"), t = i("<ul />").addClass(o.options.dotsClass), e = 0; e <= o.getDotCount(); e += 1) t.append(i("<li />").append(o.options.customPaging.call(this, o, e)));
                    o.$dots = t.appendTo(o.options.appendDots), o.$dots.find("li").first().addClass("slick-active")
                }
            }, e.prototype.buildOut = function () {
                var e = this;
                e.$slides = e.$slider.children(e.options.slide + ":not(.slick-cloned)").addClass("slick-slide"), e.slideCount = e.$slides.length, e.$slides.each(function (e, t) {
                    i(t).attr("data-slick-index", e).data("originalStyling", i(t).attr("style") || "")
                }), e.$slider.addClass("slick-slider"), e.$slideTrack = 0 === e.slideCount ? i('<div class="slick-track"/>').appendTo(e.$slider) : e.$slides.wrapAll('<div class="slick-track"/>').parent(), e.$list = e.$slideTrack.wrap('<div class="slick-list"/>').parent(), e.$slideTrack.css("opacity", 0), !0 !== e.options.centerMode && !0 !== e.options.swipeToSlide || (e.options.slidesToScroll = 1), i("img[data-lazy]", e.$slider).not("[src]").addClass("slick-loading"), e.setupInfinite(), e.buildArrows(), e.buildDots(), e.updateDots(), e.setSlideClasses("number" == typeof e.currentSlide ? e.currentSlide : 0), !0 === e.options.draggable && e.$list.addClass("draggable")
            }, e.prototype.buildRows = function () {
                var i, e, t, o, s, n, r, l = this;
                if (o = document.createDocumentFragment(), n = l.$slider.children(), l.options.rows > 1) {
                    for (r = l.options.slidesPerRow * l.options.rows, s = Math.ceil(n.length / r), i = 0; i < s; i++) {
                        var d = document.createElement("div");
                        for (e = 0; e < l.options.rows; e++) {
                            var a = document.createElement("div");
                            for (t = 0; t < l.options.slidesPerRow; t++) {
                                var c = i * r + (e * l.options.slidesPerRow + t);
                                n.get(c) && a.appendChild(n.get(c))
                            }
                            d.appendChild(a)
                        }
                        o.appendChild(d)
                    }
                    l.$slider.empty().append(o), l.$slider.children().children().children().css({
                        width: 100 / l.options.slidesPerRow + "%",
                        display: "inline-block"
                    })
                }
            }, e.prototype.checkResponsive = function (e, t) {
                var o, s, n, r = this, l = !1, d = r.$slider.width(), a = window.innerWidth || i(window).width();
                if ("window" === r.respondTo ? n = a : "slider" === r.respondTo ? n = d : "min" === r.respondTo && (n = Math.min(a, d)), r.options.responsive && r.options.responsive.length && null !== r.options.responsive) {
                    s = null;
                    for (o in r.breakpoints) r.breakpoints.hasOwnProperty(o) && (!1 === r.originalSettings.mobileFirst ? n < r.breakpoints[o] && (s = r.breakpoints[o]) : n > r.breakpoints[o] && (s = r.breakpoints[o]));
                    null !== s ? null !== r.activeBreakpoint ? (s !== r.activeBreakpoint || t) && (r.activeBreakpoint = s, "unslick" === r.breakpointSettings[s] ? r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]), !0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e)), l = s) : (r.activeBreakpoint = s, "unslick" === r.breakpointSettings[s] ? r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]), !0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e)), l = s) : null !== r.activeBreakpoint && (r.activeBreakpoint = null, r.options = r.originalSettings, !0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e), l = s), e || !1 === l || r.$slider.trigger("breakpoint", [r, l])
                }
            }, e.prototype.changeSlide = function (e, t) {
                var o, s, n, r = this, l = i(e.currentTarget);
                switch (l.is("a") && e.preventDefault(), l.is("li") || (l = l.closest("li")), n = r.slideCount % r.options.slidesToScroll != 0, o = n ? 0 : (r.slideCount - r.currentSlide) % r.options.slidesToScroll, e.data.message) {
                    case"previous":
                        s = 0 === o ? r.options.slidesToScroll : r.options.slidesToShow - o, r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide - s, !1, t);
                        break;
                    case"next":
                        s = 0 === o ? r.options.slidesToScroll : o, r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide + s, !1, t);
                        break;
                    case"index":
                        var d = 0 === e.data.index ? 0 : e.data.index || l.index() * r.options.slidesToScroll;
                        r.slideHandler(r.checkNavigable(d), !1, t), l.children().trigger("focus");
                        break;
                    default:
                        return
                }
            }, e.prototype.checkNavigable = function (i) {
                var e, t;
                if (e = this.getNavigableIndexes(), t = 0, i > e[e.length - 1]) i = e[e.length - 1]; else for (var o in e) {
                    if (i < e[o]) {
                        i = t;
                        break
                    }
                    t = e[o]
                }
                return i
            }, e.prototype.cleanUpEvents = function () {
                var e = this;
                e.options.dots && null !== e.$dots && (i("li", e.$dots).off("click.slick", e.changeSlide).off("mouseenter.slick", i.proxy(e.interrupt, e, !0)).off("mouseleave.slick", i.proxy(e.interrupt, e, !1)), !0 === e.options.accessibility && e.$dots.off("keydown.slick", e.keyHandler)), e.$slider.off("focus.slick blur.slick"), !0 === e.options.arrows && e.slideCount > e.options.slidesToShow && (e.$prevArrow && e.$prevArrow.off("click.slick", e.changeSlide), e.$nextArrow && e.$nextArrow.off("click.slick", e.changeSlide), !0 === e.options.accessibility && (e.$prevArrow && e.$prevArrow.off("keydown.slick", e.keyHandler), e.$nextArrow && e.$nextArrow.off("keydown.slick", e.keyHandler))), e.$list.off("touchstart.slick mousedown.slick", e.swipeHandler), e.$list.off("touchmove.slick mousemove.slick", e.swipeHandler), e.$list.off("touchend.slick mouseup.slick", e.swipeHandler), e.$list.off("touchcancel.slick mouseleave.slick", e.swipeHandler), e.$list.off("click.slick", e.clickHandler), i(document).off(e.visibilityChange, e.visibility), e.cleanUpSlideEvents(), !0 === e.options.accessibility && e.$list.off("keydown.slick", e.keyHandler), !0 === e.options.focusOnSelect && i(e.$slideTrack).children().off("click.slick", e.selectHandler), i(window).off("orientationchange.slick.slick-" + e.instanceUid, e.orientationChange), i(window).off("resize.slick.slick-" + e.instanceUid, e.resize), i("[draggable!=true]", e.$slideTrack).off("dragstart", e.preventDefault), i(window).off("load.slick.slick-" + e.instanceUid, e.setPosition)
            }, e.prototype.cleanUpSlideEvents = function () {
                var e = this;
                e.$list.off("mouseenter.slick", i.proxy(e.interrupt, e, !0)), e.$list.off("mouseleave.slick", i.proxy(e.interrupt, e, !1))
            }, e.prototype.cleanUpRows = function () {
                var i, e = this;
                e.options.rows > 1 && ((i = e.$slides.children().children()).removeAttr("style"), e.$slider.empty().append(i))
            }, e.prototype.clickHandler = function (i) {
                !1 === this.shouldClick && (i.stopImmediatePropagation(), i.stopPropagation(), i.preventDefault())
            }, e.prototype.destroy = function (e) {
                var t = this;
                t.autoPlayClear(), t.touchObject = {}, t.cleanUpEvents(), i(".slick-cloned", t.$slider).detach(), t.$dots && t.$dots.remove(), t.$prevArrow && t.$prevArrow.length && (t.$prevArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), t.htmlExpr.test(t.options.prevArrow) && t.$prevArrow.remove()), t.$nextArrow && t.$nextArrow.length && (t.$nextArrow.removeClass("slick-disabled slick-arrow slick-hidden").removeAttr("aria-hidden aria-disabled tabindex").css("display", ""), t.htmlExpr.test(t.options.nextArrow) && t.$nextArrow.remove()), t.$slides && (t.$slides.removeClass("slick-slide slick-active slick-center slick-visible slick-current").removeAttr("aria-hidden").removeAttr("data-slick-index").each(function () {
                    i(this).attr("style", i(this).data("originalStyling"))
                }), t.$slideTrack.children(this.options.slide).detach(), t.$slideTrack.detach(), t.$list.detach(), t.$slider.append(t.$slides)), t.cleanUpRows(), t.$slider.removeClass("slick-slider"), t.$slider.removeClass("slick-initialized"), t.$slider.removeClass("slick-dotted"), t.unslicked = !0, e || t.$slider.trigger("destroy", [t])
            }, e.prototype.disableTransition = function (i) {
                var e = this, t = {};
                t[e.transitionType] = "", !1 === e.options.fade ? e.$slideTrack.css(t) : e.$slides.eq(i).css(t)
            }, e.prototype.fadeSlide = function (i, e) {
                var t = this;
                !1 === t.cssTransitions ? (t.$slides.eq(i).css({zIndex: t.options.zIndex}), t.$slides.eq(i).animate({opacity: 1}, t.options.speed, t.options.easing, e)) : (t.applyTransition(i), t.$slides.eq(i).css({
                    opacity: 1,
                    zIndex: t.options.zIndex
                }), e && setTimeout(function () {
                    t.disableTransition(i), e.call()
                }, t.options.speed))
            }, e.prototype.fadeSlideOut = function (i) {
                var e = this;
                !1 === e.cssTransitions ? e.$slides.eq(i).animate({
                    opacity: 0,
                    zIndex: e.options.zIndex - 2
                }, e.options.speed, e.options.easing) : (e.applyTransition(i), e.$slides.eq(i).css({
                    opacity: 0,
                    zIndex: e.options.zIndex - 2
                }))
            }, e.prototype.filterSlides = e.prototype.slickFilter = function (i) {
                var e = this;
                null !== i && (e.$slidesCache = e.$slides, e.unload(), e.$slideTrack.children(this.options.slide).detach(), e.$slidesCache.filter(i).appendTo(e.$slideTrack), e.reinit())
            }, e.prototype.focusHandler = function () {
                var e = this;
                e.$slider.off("focus.slick blur.slick").on("focus.slick blur.slick", "*", function (t) {
                    t.stopImmediatePropagation();
                    var o = i(this);
                    setTimeout(function () {
                        e.options.pauseOnFocus && (e.focussed = o.is(":focus"), e.autoPlay())
                    }, 0)
                })
            }, e.prototype.getCurrent = e.prototype.slickCurrentSlide = function () {
                return this.currentSlide
            }, e.prototype.getDotCount = function () {
                var i = this, e = 0, t = 0, o = 0;
                if (!0 === i.options.infinite) if (i.slideCount <= i.options.slidesToShow) ++o; else for (; e < i.slideCount;) ++o, e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow; else if (!0 === i.options.centerMode) o = i.slideCount; else if (i.options.asNavFor) for (; e < i.slideCount;) ++o, e = t + i.options.slidesToScroll, t += i.options.slidesToScroll <= i.options.slidesToShow ? i.options.slidesToScroll : i.options.slidesToShow; else o = 1 + Math.ceil((i.slideCount - i.options.slidesToShow) / i.options.slidesToScroll);
                return o - 1
            }, e.prototype.getLeft = function (i) {
                var e, t, o, s, n = this, r = 0;
                return n.slideOffset = 0, t = n.$slides.first().outerHeight(!0), !0 === n.options.infinite ? (n.slideCount > n.options.slidesToShow && (n.slideOffset = n.slideWidth * n.options.slidesToShow * -1, s = -1, !0 === n.options.vertical && !0 === n.options.centerMode && (2 === n.options.slidesToShow ? s = -1.5 : 1 === n.options.slidesToShow && (s = -2)), r = t * n.options.slidesToShow * s), n.slideCount % n.options.slidesToScroll != 0 && i + n.options.slidesToScroll > n.slideCount && n.slideCount > n.options.slidesToShow && (i > n.slideCount ? (n.slideOffset = (n.options.slidesToShow - (i - n.slideCount)) * n.slideWidth * -1, r = (n.options.slidesToShow - (i - n.slideCount)) * t * -1) : (n.slideOffset = n.slideCount % n.options.slidesToScroll * n.slideWidth * -1, r = n.slideCount % n.options.slidesToScroll * t * -1))) : i + n.options.slidesToShow > n.slideCount && (n.slideOffset = (i + n.options.slidesToShow - n.slideCount) * n.slideWidth, r = (i + n.options.slidesToShow - n.slideCount) * t), n.slideCount <= n.options.slidesToShow && (n.slideOffset = 0, r = 0), !0 === n.options.centerMode && n.slideCount <= n.options.slidesToShow ? n.slideOffset = n.slideWidth * Math.floor(n.options.slidesToShow) / 2 - n.slideWidth * n.slideCount / 2 : !0 === n.options.centerMode && !0 === n.options.infinite ? n.slideOffset += n.slideWidth * Math.floor(n.options.slidesToShow / 2) - n.slideWidth : !0 === n.options.centerMode && (n.slideOffset = 0, n.slideOffset += n.slideWidth * Math.floor(n.options.slidesToShow / 2)), e = !1 === n.options.vertical ? i * n.slideWidth * -1 + n.slideOffset : i * t * -1 + r, !0 === n.options.variableWidth && (o = n.slideCount <= n.options.slidesToShow || !1 === n.options.infinite ? n.$slideTrack.children(".slick-slide").eq(i) : n.$slideTrack.children(".slick-slide").eq(i + n.options.slidesToShow), e = !0 === n.options.rtl ? o[0] ? -1 * (n.$slideTrack.width() - o[0].offsetLeft - o.width()) : 0 : o[0] ? -1 * o[0].offsetLeft : 0, !0 === n.options.centerMode && (o = n.slideCount <= n.options.slidesToShow || !1 === n.options.infinite ? n.$slideTrack.children(".slick-slide").eq(i) : n.$slideTrack.children(".slick-slide").eq(i + n.options.slidesToShow + 1), e = !0 === n.options.rtl ? o[0] ? -1 * (n.$slideTrack.width() - o[0].offsetLeft - o.width()) : 0 : o[0] ? -1 * o[0].offsetLeft : 0, e += (n.$list.width() - o.outerWidth()) / 2)), e
            }, e.prototype.getOption = e.prototype.slickGetOption = function (i) {
                return this.options[i]
            }, e.prototype.getNavigableIndexes = function () {
                var i, e = this, t = 0, o = 0, s = [];
                for (!1 === e.options.infinite ? i = e.slideCount : (t = -1 * e.options.slidesToScroll, o = -1 * e.options.slidesToScroll, i = 2 * e.slideCount); t < i;) s.push(t), t = o + e.options.slidesToScroll, o += e.options.slidesToScroll <= e.options.slidesToShow ? e.options.slidesToScroll : e.options.slidesToShow;
                return s
            }, e.prototype.getSlick = function () {
                return this
            }, e.prototype.getSlideCount = function () {
                var e, t, o = this;
                return t = !0 === o.options.centerMode ? o.slideWidth * Math.floor(o.options.slidesToShow / 2) : 0, !0 === o.options.swipeToSlide ? (o.$slideTrack.find(".slick-slide").each(function (s, n) {
                    if (n.offsetLeft - t + i(n).outerWidth() / 2 > -1 * o.swipeLeft) return e = n, !1
                }), Math.abs(i(e).attr("data-slick-index") - o.currentSlide) || 1) : o.options.slidesToScroll
            }, e.prototype.goTo = e.prototype.slickGoTo = function (i, e) {
                this.changeSlide({data: {message: "index", index: parseInt(i)}}, e)
            }, e.prototype.init = function (e) {
                var t = this;
                i(t.$slider).hasClass("slick-initialized") || (i(t.$slider).addClass("slick-initialized"), t.buildRows(), t.buildOut(), t.setProps(), t.startLoad(), t.loadSlider(), t.initializeEvents(), t.updateArrows(), t.updateDots(), t.checkResponsive(!0), t.focusHandler()), e && t.$slider.trigger("init", [t]), !0 === t.options.accessibility && t.initADA(), t.options.autoplay && (t.paused = !1, t.autoPlay())
            }, e.prototype.initADA = function () {
                var e = this, t = Math.ceil(e.slideCount / e.options.slidesToShow),
                    o = e.getNavigableIndexes().filter(function (i) {
                        return i >= 0 && i < e.slideCount
                    });
                e.$slides.add(e.$slideTrack.find(".slick-cloned")).attr({
                    "aria-hidden": "true",
                    tabindex: "-1"
                }).find("a, input, button, select").attr({tabindex: "-1"}), null !== e.$dots && (e.$slides.not(e.$slideTrack.find(".slick-cloned")).each(function (t) {
                    var s = o.indexOf(t);
                    i(this).attr({
                        role: "tabpanel",
                        id: "slick-slide" + e.instanceUid + t,
                        tabindex: -1
                    }), -1 !== s && i(this).attr({"aria-describedby": "slick-slide-control" + e.instanceUid + s})
                }), e.$dots.attr("role", "tablist").find("li").each(function (s) {
                    var n = o[s];
                    i(this).attr({role: "presentation"}), i(this).find("button").first().attr({
                        role: "tab",
                        id: "slick-slide-control" + e.instanceUid + s,
                        "aria-controls": "slick-slide" + e.instanceUid + n,
                        "aria-label": s + 1 + " of " + t,
                        "aria-selected": null,
                        tabindex: "-1"
                    })
                }).eq(e.currentSlide).find("button").attr({"aria-selected": "true", tabindex: "0"}).end());
                for (var s = e.currentSlide, n = s + e.options.slidesToShow; s < n; s++) e.$slides.eq(s).attr("tabindex", 0);
                e.activateADA()
            }, e.prototype.initArrowEvents = function () {
                var i = this;
                !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.off("click.slick").on("click.slick", {message: "previous"}, i.changeSlide), i.$nextArrow.off("click.slick").on("click.slick", {message: "next"}, i.changeSlide), !0 === i.options.accessibility && (i.$prevArrow.on("keydown.slick", i.keyHandler), i.$nextArrow.on("keydown.slick", i.keyHandler)))
            }, e.prototype.initDotEvents = function () {
                var e = this;
                !0 === e.options.dots && (i("li", e.$dots).on("click.slick", {message: "index"}, e.changeSlide), !0 === e.options.accessibility && e.$dots.on("keydown.slick", e.keyHandler)), !0 === e.options.dots && !0 === e.options.pauseOnDotsHover && i("li", e.$dots).on("mouseenter.slick", i.proxy(e.interrupt, e, !0)).on("mouseleave.slick", i.proxy(e.interrupt, e, !1))
            }, e.prototype.initSlideEvents = function () {
                var e = this;
                e.options.pauseOnHover && (e.$list.on("mouseenter.slick", i.proxy(e.interrupt, e, !0)), e.$list.on("mouseleave.slick", i.proxy(e.interrupt, e, !1)))
            }, e.prototype.initializeEvents = function () {
                var e = this;
                e.initArrowEvents(), e.initDotEvents(), e.initSlideEvents(), e.$list.on("touchstart.slick mousedown.slick", {action: "start"}, e.swipeHandler), e.$list.on("touchmove.slick mousemove.slick", {action: "move"}, e.swipeHandler), e.$list.on("touchend.slick mouseup.slick", {action: "end"}, e.swipeHandler), e.$list.on("touchcancel.slick mouseleave.slick", {action: "end"}, e.swipeHandler), e.$list.on("click.slick", e.clickHandler), i(document).on(e.visibilityChange, i.proxy(e.visibility, e)), !0 === e.options.accessibility && e.$list.on("keydown.slick", e.keyHandler), !0 === e.options.focusOnSelect && i(e.$slideTrack).children().on("click.slick", e.selectHandler), i(window).on("orientationchange.slick.slick-" + e.instanceUid, i.proxy(e.orientationChange, e)), i(window).on("resize.slick.slick-" + e.instanceUid, i.proxy(e.resize, e)), i("[draggable!=true]", e.$slideTrack).on("dragstart", e.preventDefault), i(window).on("load.slick.slick-" + e.instanceUid, e.setPosition), i(e.setPosition)
            }, e.prototype.initUI = function () {
                var i = this;
                !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.show(), i.$nextArrow.show()), !0 === i.options.dots && i.slideCount > i.options.slidesToShow && i.$dots.show()
            }, e.prototype.keyHandler = function (i) {
                var e = this;
                i.target.tagName.match("TEXTAREA|INPUT|SELECT") || (37 === i.keyCode && !0 === e.options.accessibility ? e.changeSlide({data: {message: !0 === e.options.rtl ? "next" : "previous"}}) : 39 === i.keyCode && !0 === e.options.accessibility && e.changeSlide({data: {message: !0 === e.options.rtl ? "previous" : "next"}}))
            }, e.prototype.lazyLoad = function () {
                function e(e) {
                    i("img[data-lazy]", e).each(function () {
                        var e = i(this), t = i(this).attr("data-lazy"), o = i(this).attr("data-srcset"),
                            s = i(this).attr("data-sizes") || n.$slider.attr("data-sizes"),
                            r = document.createElement("img");
                        r.onload = function () {
                            e.animate({opacity: 0}, 100, function () {
                                o && (e.attr("srcset", o), s && e.attr("sizes", s)), e.attr("src", t).animate({opacity: 1}, 200, function () {
                                    e.removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading")
                                }), n.$slider.trigger("lazyLoaded", [n, e, t])
                            })
                        }, r.onerror = function () {
                            e.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), n.$slider.trigger("lazyLoadError", [n, e, t])
                        }, r.src = t
                    })
                }

                var t, o, s, n = this;
                if (!0 === n.options.centerMode ? !0 === n.options.infinite ? s = (o = n.currentSlide + (n.options.slidesToShow / 2 + 1)) + n.options.slidesToShow + 2 : (o = Math.max(0, n.currentSlide - (n.options.slidesToShow / 2 + 1)), s = n.options.slidesToShow / 2 + 1 + 2 + n.currentSlide) : (o = n.options.infinite ? n.options.slidesToShow + n.currentSlide : n.currentSlide, s = Math.ceil(o + n.options.slidesToShow), !0 === n.options.fade && (o > 0 && o--, s <= n.slideCount && s++)), t = n.$slider.find(".slick-slide").slice(o, s), "anticipated" === n.options.lazyLoad) for (var r = o - 1, l = s, d = n.$slider.find(".slick-slide"), a = 0; a < n.options.slidesToScroll; a++) r < 0 && (r = n.slideCount - 1), t = (t = t.add(d.eq(r))).add(d.eq(l)), r--, l++;
                e(t), n.slideCount <= n.options.slidesToShow ? e(n.$slider.find(".slick-slide")) : n.currentSlide >= n.slideCount - n.options.slidesToShow ? e(n.$slider.find(".slick-cloned").slice(0, n.options.slidesToShow)) : 0 === n.currentSlide && e(n.$slider.find(".slick-cloned").slice(-1 * n.options.slidesToShow))
            }, e.prototype.loadSlider = function () {
                var i = this;
                i.setPosition(), i.$slideTrack.css({opacity: 1}), i.$slider.removeClass("slick-loading"), i.initUI(), "progressive" === i.options.lazyLoad && i.progressiveLazyLoad()
            }, e.prototype.next = e.prototype.slickNext = function () {
                this.changeSlide({data: {message: "next"}})
            }, e.prototype.orientationChange = function () {
                var i = this;
                i.checkResponsive(), i.setPosition()
            }, e.prototype.pause = e.prototype.slickPause = function () {
                var i = this;
                i.autoPlayClear(), i.paused = !0
            }, e.prototype.play = e.prototype.slickPlay = function () {
                var i = this;
                i.autoPlay(), i.options.autoplay = !0, i.paused = !1, i.focussed = !1, i.interrupted = !1
            }, e.prototype.postSlide = function (e) {
                var t = this;
                t.unslicked || (t.$slider.trigger("afterChange", [t, e]), t.animating = !1, t.slideCount > t.options.slidesToShow && t.setPosition(), t.swipeLeft = null, t.options.autoplay && t.autoPlay(), !0 === t.options.accessibility && (t.initADA(), t.options.focusOnChange && i(t.$slides.get(t.currentSlide)).attr("tabindex", 0).focus()))
            }, e.prototype.prev = e.prototype.slickPrev = function () {
                this.changeSlide({data: {message: "previous"}})
            }, e.prototype.preventDefault = function (i) {
                i.preventDefault()
            }, e.prototype.progressiveLazyLoad = function (e) {
                e = e || 1;
                var t, o, s, n, r, l = this, d = i("img[data-lazy]", l.$slider);
                d.length ? (t = d.first(), o = t.attr("data-lazy"), s = t.attr("data-srcset"), n = t.attr("data-sizes") || l.$slider.attr("data-sizes"), (r = document.createElement("img")).onload = function () {
                    s && (t.attr("srcset", s), n && t.attr("sizes", n)), t.attr("src", o).removeAttr("data-lazy data-srcset data-sizes").removeClass("slick-loading"), !0 === l.options.adaptiveHeight && l.setPosition(), l.$slider.trigger("lazyLoaded", [l, t, o]), l.progressiveLazyLoad()
                }, r.onerror = function () {
                    e < 3 ? setTimeout(function () {
                        l.progressiveLazyLoad(e + 1)
                    }, 500) : (t.removeAttr("data-lazy").removeClass("slick-loading").addClass("slick-lazyload-error"), l.$slider.trigger("lazyLoadError", [l, t, o]), l.progressiveLazyLoad())
                }, r.src = o) : l.$slider.trigger("allImagesLoaded", [l])
            }, e.prototype.refresh = function (e) {
                var t, o, s = this;
                o = s.slideCount - s.options.slidesToShow, !s.options.infinite && s.currentSlide > o && (s.currentSlide = o), s.slideCount <= s.options.slidesToShow && (s.currentSlide = 0), t = s.currentSlide, s.destroy(!0), i.extend(s, s.initials, {currentSlide: t}), s.init(), e || s.changeSlide({
                    data: {
                        message: "index",
                        index: t
                    }
                }, !1)
            }, e.prototype.registerBreakpoints = function () {
                var e, t, o, s = this, n = s.options.responsive || null;
                if ("array" === i.type(n) && n.length) {
                    s.respondTo = s.options.respondTo || "window";
                    for (e in n) if (o = s.breakpoints.length - 1, n.hasOwnProperty(e)) {
                        for (t = n[e].breakpoint; o >= 0;) s.breakpoints[o] && s.breakpoints[o] === t && s.breakpoints.splice(o, 1), o--;
                        s.breakpoints.push(t), s.breakpointSettings[t] = n[e].settings
                    }
                    s.breakpoints.sort(function (i, e) {
                        return s.options.mobileFirst ? i - e : e - i
                    })
                }
            }, e.prototype.reinit = function () {
                var e = this;
                e.$slides = e.$slideTrack.children(e.options.slide).addClass("slick-slide"), e.slideCount = e.$slides.length, e.currentSlide >= e.slideCount && 0 !== e.currentSlide && (e.currentSlide = e.currentSlide - e.options.slidesToScroll), e.slideCount <= e.options.slidesToShow && (e.currentSlide = 0), e.registerBreakpoints(), e.setProps(), e.setupInfinite(), e.buildArrows(), e.updateArrows(), e.initArrowEvents(), e.buildDots(), e.updateDots(), e.initDotEvents(), e.cleanUpSlideEvents(), e.initSlideEvents(), e.checkResponsive(!1, !0), !0 === e.options.focusOnSelect && i(e.$slideTrack).children().on("click.slick", e.selectHandler), e.setSlideClasses("number" == typeof e.currentSlide ? e.currentSlide : 0), e.setPosition(), e.focusHandler(), e.paused = !e.options.autoplay, e.autoPlay(), e.$slider.trigger("reInit", [e])
            }, e.prototype.resize = function () {
                var e = this;
                i(window).width() !== e.windowWidth && (clearTimeout(e.windowDelay), e.windowDelay = window.setTimeout(function () {
                    e.windowWidth = i(window).width(), e.checkResponsive(), e.unslicked || e.setPosition()
                }, 50))
            }, e.prototype.removeSlide = e.prototype.slickRemove = function (i, e, t) {
                var o = this;
                if (i = "boolean" == typeof i ? !0 === (e = i) ? 0 : o.slideCount - 1 : !0 === e ? --i : i, o.slideCount < 1 || i < 0 || i > o.slideCount - 1) return !1;
                o.unload(), !0 === t ? o.$slideTrack.children().remove() : o.$slideTrack.children(this.options.slide).eq(i).remove(), o.$slides = o.$slideTrack.children(this.options.slide), o.$slideTrack.children(this.options.slide).detach(), o.$slideTrack.append(o.$slides), o.$slidesCache = o.$slides, o.reinit()
            }, e.prototype.setCSS = function (i) {
                var e, t, o = this, s = {};
                !0 === o.options.rtl && (i = -i), e = "left" == o.positionProp ? Math.ceil(i) + "px" : "0px", t = "top" == o.positionProp ? Math.ceil(i) + "px" : "0px", s[o.positionProp] = i, !1 === o.transformsEnabled ? o.$slideTrack.css(s) : (s = {}, !1 === o.cssTransitions ? (s[o.animType] = "translate(" + e + ", " + t + ")", o.$slideTrack.css(s)) : (s[o.animType] = "translate3d(" + e + ", " + t + ", 0px)", o.$slideTrack.css(s)))
            }, e.prototype.setDimensions = function () {
                var i = this;
                !1 === i.options.vertical ? !0 === i.options.centerMode && i.$list.css({padding: "0px " + i.options.centerPadding}) : (i.$list.height(i.$slides.first().outerHeight(!0) * i.options.slidesToShow), !0 === i.options.centerMode && i.$list.css({padding: i.options.centerPadding + " 0px"})), i.listWidth = i.$list.width(), i.listHeight = i.$list.height(), !1 === i.options.vertical && !1 === i.options.variableWidth ? (i.slideWidth = Math.ceil(i.listWidth / i.options.slidesToShow), i.$slideTrack.width(Math.ceil(i.slideWidth * i.$slideTrack.children(".slick-slide").length))) : !0 === i.options.variableWidth ? i.$slideTrack.width(5e3 * i.slideCount) : (i.slideWidth = Math.ceil(i.listWidth), i.$slideTrack.height(Math.ceil(i.$slides.first().outerHeight(!0) * i.$slideTrack.children(".slick-slide").length)));
                var e = i.$slides.first().outerWidth(!0) - i.$slides.first().width();
                !1 === i.options.variableWidth && i.$slideTrack.children(".slick-slide").width(i.slideWidth - e)
            }, e.prototype.setFade = function () {
                var e, t = this;
                t.$slides.each(function (o, s) {
                    e = t.slideWidth * o * -1, !0 === t.options.rtl ? i(s).css({
                        position: "relative",
                        right: e,
                        top: 0,
                        zIndex: t.options.zIndex - 2,
                        opacity: 0
                    }) : i(s).css({position: "relative", left: e, top: 0, zIndex: t.options.zIndex - 2, opacity: 0})
                }), t.$slides.eq(t.currentSlide).css({zIndex: t.options.zIndex - 1, opacity: 1})
            }, e.prototype.setHeight = function () {
                var i = this;
                if (1 === i.options.slidesToShow && !0 === i.options.adaptiveHeight && !1 === i.options.vertical) {
                    var e = i.$slides.eq(i.currentSlide).outerHeight(!0);
                    i.$list.css("height", e)
                }
            }, e.prototype.setOption = e.prototype.slickSetOption = function () {
                var e, t, o, s, n, r = this, l = !1;
                if ("object" === i.type(arguments[0]) ? (o = arguments[0], l = arguments[1], n = "multiple") : "string" === i.type(arguments[0]) && (o = arguments[0], s = arguments[1], l = arguments[2], "responsive" === arguments[0] && "array" === i.type(arguments[1]) ? n = "responsive" : void 0 !== arguments[1] && (n = "single")), "single" === n) r.options[o] = s; else if ("multiple" === n) i.each(o, function (i, e) {
                    r.options[i] = e
                }); else if ("responsive" === n) for (t in s) if ("array" !== i.type(r.options.responsive)) r.options.responsive = [s[t]]; else {
                    for (e = r.options.responsive.length - 1; e >= 0;) r.options.responsive[e].breakpoint === s[t].breakpoint && r.options.responsive.splice(e, 1), e--;
                    r.options.responsive.push(s[t])
                }
                l && (r.unload(), r.reinit())
            }, e.prototype.setPosition = function () {
                var i = this;
                i.setDimensions(), i.setHeight(), !1 === i.options.fade ? i.setCSS(i.getLeft(i.currentSlide)) : i.setFade(), i.$slider.trigger("setPosition", [i])
            }, e.prototype.setProps = function () {
                var i = this, e = document.body.style;
                i.positionProp = !0 === i.options.vertical ? "top" : "left", "top" === i.positionProp ? i.$slider.addClass("slick-vertical") : i.$slider.removeClass("slick-vertical"), void 0 === e.WebkitTransition && void 0 === e.MozTransition && void 0 === e.msTransition || !0 === i.options.useCSS && (i.cssTransitions = !0), i.options.fade && ("number" == typeof i.options.zIndex ? i.options.zIndex < 3 && (i.options.zIndex = 3) : i.options.zIndex = i.defaults.zIndex), void 0 !== e.OTransform && (i.animType = "OTransform", i.transformType = "-o-transform", i.transitionType = "OTransition", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)), void 0 !== e.MozTransform && (i.animType = "MozTransform", i.transformType = "-moz-transform", i.transitionType = "MozTransition", void 0 === e.perspectiveProperty && void 0 === e.MozPerspective && (i.animType = !1)), void 0 !== e.webkitTransform && (i.animType = "webkitTransform", i.transformType = "-webkit-transform", i.transitionType = "webkitTransition", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType = !1)), void 0 !== e.msTransform && (i.animType = "msTransform", i.transformType = "-ms-transform", i.transitionType = "msTransition", void 0 === e.msTransform && (i.animType = !1)), void 0 !== e.transform && !1 !== i.animType && (i.animType = "transform", i.transformType = "transform", i.transitionType = "transition"), i.transformsEnabled = i.options.useTransform && null !== i.animType && !1 !== i.animType
            }, e.prototype.setSlideClasses = function (i) {
                var e, t, o, s, n = this;
                if (t = n.$slider.find(".slick-slide").removeClass("slick-active slick-center slick-current").attr("aria-hidden", "true"), n.$slides.eq(i).addClass("slick-current"), !0 === n.options.centerMode) {
                    var r = n.options.slidesToShow % 2 == 0 ? 1 : 0;
                    e = Math.floor(n.options.slidesToShow / 2), !0 === n.options.infinite && (i >= e && i <= n.slideCount - 1 - e ? n.$slides.slice(i - e + r, i + e + 1).addClass("slick-active").attr("aria-hidden", "false") : (o = n.options.slidesToShow + i, t.slice(o - e + 1 + r, o + e + 2).addClass("slick-active").attr("aria-hidden", "false")), 0 === i ? t.eq(t.length - 1 - n.options.slidesToShow).addClass("slick-center") : i === n.slideCount - 1 && t.eq(n.options.slidesToShow).addClass("slick-center")), n.$slides.eq(i).addClass("slick-center")
                } else i >= 0 && i <= n.slideCount - n.options.slidesToShow ? n.$slides.slice(i, i + n.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false") : t.length <= n.options.slidesToShow ? t.addClass("slick-active").attr("aria-hidden", "false") : (s = n.slideCount % n.options.slidesToShow, o = !0 === n.options.infinite ? n.options.slidesToShow + i : i, n.options.slidesToShow == n.options.slidesToScroll && n.slideCount - i < n.options.slidesToShow ? t.slice(o - (n.options.slidesToShow - s), o + s).addClass("slick-active").attr("aria-hidden", "false") : t.slice(o, o + n.options.slidesToShow).addClass("slick-active").attr("aria-hidden", "false"));
                "ondemand" !== n.options.lazyLoad && "anticipated" !== n.options.lazyLoad || n.lazyLoad()
            }, e.prototype.setupInfinite = function () {
                var e, t, o, s = this;
                if (!0 === s.options.fade && (s.options.centerMode = !1), !0 === s.options.infinite && !1 === s.options.fade && (t = null, s.slideCount > s.options.slidesToShow)) {
                    for (o = !0 === s.options.centerMode ? s.options.slidesToShow + 1 : s.options.slidesToShow, e = s.slideCount; e > s.slideCount - o; e -= 1) t = e - 1, i(s.$slides[t]).clone(!0).attr("id", "").attr("data-slick-index", t - s.slideCount).prependTo(s.$slideTrack).addClass("slick-cloned");
                    for (e = 0; e < o + s.slideCount; e += 1) t = e, i(s.$slides[t]).clone(!0).attr("id", "").attr("data-slick-index", t + s.slideCount).appendTo(s.$slideTrack).addClass("slick-cloned");
                    s.$slideTrack.find(".slick-cloned").find("[id]").each(function () {
                        i(this).attr("id", "")
                    })
                }
            }, e.prototype.interrupt = function (i) {
                var e = this;
                i || e.autoPlay(), e.interrupted = i
            }, e.prototype.selectHandler = function (e) {
                var t = this, o = i(e.target).is(".slick-slide") ? i(e.target) : i(e.target).parents(".slick-slide"),
                    s = parseInt(o.attr("data-slick-index"));
                s || (s = 0), t.slideCount <= t.options.slidesToShow ? t.slideHandler(s, !1, !0) : t.slideHandler(s)
            }, e.prototype.slideHandler = function (i, e, t) {
                var o, s, n, r, l, d = null, a = this;
                if (e = e || !1, !(!0 === a.animating && !0 === a.options.waitForAnimate || !0 === a.options.fade && a.currentSlide === i)) if (!1 === e && a.asNavFor(i), o = i, d = a.getLeft(o), r = a.getLeft(a.currentSlide), a.currentLeft = null === a.swipeLeft ? r : a.swipeLeft, !1 === a.options.infinite && !1 === a.options.centerMode && (i < 0 || i > a.getDotCount() * a.options.slidesToScroll)) !1 === a.options.fade && (o = a.currentSlide, !0 !== t ? a.animateSlide(r, function () {
                    a.postSlide(o)
                }) : a.postSlide(o)); else if (!1 === a.options.infinite && !0 === a.options.centerMode && (i < 0 || i > a.slideCount - a.options.slidesToScroll)) !1 === a.options.fade && (o = a.currentSlide, !0 !== t ? a.animateSlide(r, function () {
                    a.postSlide(o)
                }) : a.postSlide(o)); else {
                    if (a.options.autoplay && clearInterval(a.autoPlayTimer), s = o < 0 ? a.slideCount % a.options.slidesToScroll != 0 ? a.slideCount - a.slideCount % a.options.slidesToScroll : a.slideCount + o : o >= a.slideCount ? a.slideCount % a.options.slidesToScroll != 0 ? 0 : o - a.slideCount : o, a.animating = !0, a.$slider.trigger("beforeChange", [a, a.currentSlide, s]), n = a.currentSlide, a.currentSlide = s, a.setSlideClasses(a.currentSlide), a.options.asNavFor && (l = (l = a.getNavTarget()).slick("getSlick")).slideCount <= l.options.slidesToShow && l.setSlideClasses(a.currentSlide), a.updateDots(), a.updateArrows(), !0 === a.options.fade) return !0 !== t ? (a.fadeSlideOut(n), a.fadeSlide(s, function () {
                        a.postSlide(s)
                    })) : a.postSlide(s), void a.animateHeight();
                    !0 !== t ? a.animateSlide(d, function () {
                        a.postSlide(s)
                    }) : a.postSlide(s)
                }
            }, e.prototype.startLoad = function () {
                var i = this;
                !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && (i.$prevArrow.hide(), i.$nextArrow.hide()), !0 === i.options.dots && i.slideCount > i.options.slidesToShow && i.$dots.hide(), i.$slider.addClass("slick-loading")
            }, e.prototype.swipeDirection = function () {
                var i, e, t, o, s = this;
                return i = s.touchObject.startX - s.touchObject.curX, e = s.touchObject.startY - s.touchObject.curY, t = Math.atan2(e, i), (o = Math.round(180 * t / Math.PI)) < 0 && (o = 360 - Math.abs(o)), o <= 45 && o >= 0 ? !1 === s.options.rtl ? "left" : "right" : o <= 360 && o >= 315 ? !1 === s.options.rtl ? "left" : "right" : o >= 135 && o <= 225 ? !1 === s.options.rtl ? "right" : "left" : !0 === s.options.verticalSwiping ? o >= 35 && o <= 135 ? "down" : "up" : "vertical"
            }, e.prototype.swipeEnd = function (i) {
                var e, t, o = this;
                if (o.dragging = !1, o.swiping = !1, o.scrolling) return o.scrolling = !1, !1;
                if (o.interrupted = !1, o.shouldClick = !(o.touchObject.swipeLength > 10), void 0 === o.touchObject.curX) return !1;
                if (!0 === o.touchObject.edgeHit && o.$slider.trigger("edge", [o, o.swipeDirection()]), o.touchObject.swipeLength >= o.touchObject.minSwipe) {
                    switch (t = o.swipeDirection()) {
                        case"left":
                        case"down":
                            e = o.options.swipeToSlide ? o.checkNavigable(o.currentSlide + o.getSlideCount()) : o.currentSlide + o.getSlideCount(), o.currentDirection = 0;
                            break;
                        case"right":
                        case"up":
                            e = o.options.swipeToSlide ? o.checkNavigable(o.currentSlide - o.getSlideCount()) : o.currentSlide - o.getSlideCount(), o.currentDirection = 1
                    }
                    "vertical" != t && (o.slideHandler(e), o.touchObject = {}, o.$slider.trigger("swipe", [o, t]))
                } else o.touchObject.startX !== o.touchObject.curX && (o.slideHandler(o.currentSlide), o.touchObject = {})
            }, e.prototype.swipeHandler = function (i) {
                var e = this;
                if (!(!1 === e.options.swipe || "ontouchend" in document && !1 === e.options.swipe || !1 === e.options.draggable && -1 !== i.type.indexOf("mouse"))) switch (e.touchObject.fingerCount = i.originalEvent && void 0 !== i.originalEvent.touches ? i.originalEvent.touches.length : 1, e.touchObject.minSwipe = e.listWidth / e.options.touchThreshold, !0 === e.options.verticalSwiping && (e.touchObject.minSwipe = e.listHeight / e.options.touchThreshold), i.data.action) {
                    case"start":
                        e.swipeStart(i);
                        break;
                    case"move":
                        e.swipeMove(i);
                        break;
                    case"end":
                        e.swipeEnd(i)
                }
            }, e.prototype.swipeMove = function (i) {
                var e, t, o, s, n, r, l = this;
                return n = void 0 !== i.originalEvent ? i.originalEvent.touches : null, !(!l.dragging || l.scrolling || n && 1 !== n.length) && (e = l.getLeft(l.currentSlide), l.touchObject.curX = void 0 !== n ? n[0].pageX : i.clientX, l.touchObject.curY = void 0 !== n ? n[0].pageY : i.clientY, l.touchObject.swipeLength = Math.round(Math.sqrt(Math.pow(l.touchObject.curX - l.touchObject.startX, 2))), r = Math.round(Math.sqrt(Math.pow(l.touchObject.curY - l.touchObject.startY, 2))), !l.options.verticalSwiping && !l.swiping && r > 4 ? (l.scrolling = !0, !1) : (!0 === l.options.verticalSwiping && (l.touchObject.swipeLength = r), t = l.swipeDirection(), void 0 !== i.originalEvent && l.touchObject.swipeLength > 4 && (l.swiping = !0, i.preventDefault()), s = (!1 === l.options.rtl ? 1 : -1) * (l.touchObject.curX > l.touchObject.startX ? 1 : -1), !0 === l.options.verticalSwiping && (s = l.touchObject.curY > l.touchObject.startY ? 1 : -1), o = l.touchObject.swipeLength, l.touchObject.edgeHit = !1, !1 === l.options.infinite && (0 === l.currentSlide && "right" === t || l.currentSlide >= l.getDotCount() && "left" === t) && (o = l.touchObject.swipeLength * l.options.edgeFriction, l.touchObject.edgeHit = !0), !1 === l.options.vertical ? l.swipeLeft = e + o * s : l.swipeLeft = e + o * (l.$list.height() / l.listWidth) * s, !0 === l.options.verticalSwiping && (l.swipeLeft = e + o * s), !0 !== l.options.fade && !1 !== l.options.touchMove && (!0 === l.animating ? (l.swipeLeft = null, !1) : void l.setCSS(l.swipeLeft))))
            }, e.prototype.swipeStart = function (i) {
                var e, t = this;
                if (t.interrupted = !0, 1 !== t.touchObject.fingerCount || t.slideCount <= t.options.slidesToShow) return t.touchObject = {}, !1;
                void 0 !== i.originalEvent && void 0 !== i.originalEvent.touches && (e = i.originalEvent.touches[0]), t.touchObject.startX = t.touchObject.curX = void 0 !== e ? e.pageX : i.clientX, t.touchObject.startY = t.touchObject.curY = void 0 !== e ? e.pageY : i.clientY, t.dragging = !0
            }, e.prototype.unfilterSlides = e.prototype.slickUnfilter = function () {
                var i = this;
                null !== i.$slidesCache && (i.unload(), i.$slideTrack.children(this.options.slide).detach(), i.$slidesCache.appendTo(i.$slideTrack), i.reinit())
            }, e.prototype.unload = function () {
                var e = this;
                i(".slick-cloned", e.$slider).remove(), e.$dots && e.$dots.remove(), e.$prevArrow && e.htmlExpr.test(e.options.prevArrow) && e.$prevArrow.remove(), e.$nextArrow && e.htmlExpr.test(e.options.nextArrow) && e.$nextArrow.remove(), e.$slides.removeClass("slick-slide slick-active slick-visible slick-current").attr("aria-hidden", "true").css("width", "")
            }, e.prototype.unslick = function (i) {
                var e = this;
                e.$slider.trigger("unslick", [e, i]), e.destroy()
            }, e.prototype.updateArrows = function () {
                var i = this;
                Math.floor(i.options.slidesToShow / 2), !0 === i.options.arrows && i.slideCount > i.options.slidesToShow && !i.options.infinite && (i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false"), 0 === i.currentSlide ? (i.$prevArrow.addClass("slick-disabled").attr("aria-disabled", "true"), i.$nextArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : i.currentSlide >= i.slideCount - i.options.slidesToShow && !1 === i.options.centerMode ? (i.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")) : i.currentSlide >= i.slideCount - 1 && !0 === i.options.centerMode && (i.$nextArrow.addClass("slick-disabled").attr("aria-disabled", "true"), i.$prevArrow.removeClass("slick-disabled").attr("aria-disabled", "false")))
            }, e.prototype.updateDots = function () {
                var i = this;
                null !== i.$dots && (i.$dots.find("li").removeClass("slick-active").end(), i.$dots.find("li").eq(Math.floor(i.currentSlide / i.options.slidesToScroll)).addClass("slick-active"))
            }, e.prototype.visibility = function () {
                var i = this;
                i.options.autoplay && (document[i.hidden] ? i.interrupted = !0 : i.interrupted = !1)
            }, i.fn.slick = function () {
                var i, t, o = this, s = arguments[0], n = Array.prototype.slice.call(arguments, 1), r = o.length;
                for (i = 0; i < r; i++) if ("object" == typeof s || void 0 === s ? o[i].slick = new e(o[i], s) : t = o[i].slick[s].apply(o[i].slick, n), void 0 !== t) return t;
                return o
            }
        });


        /***/
    }),
    /* 111 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = dropdown;

        function dropdown() {
            'use strict';

            (function () {
                var diagramm = $('.readiness__diagram'),
                    lowerText = $('.readiness__text');

                if (diagramm.length > 0) {
                    lowerText.css('height', '100');
                } else {
                    lowerText.css('height', '280');
                }
            })();

            window.advantageMoreCtrl = {

                init: function init() {

                    var ctrl = advantageMoreCtrl;
                    ctrl.$advantageBlur = $('[data-blur-advantage]');
                    ctrl.$advantageBtn = $('[data-btn-advantage]');
                    ctrl.$advantageContent = $('[data-advantage-content]');

                    // ctrl.detectHight();
                    ctrl.addBtn();
                    ctrl.events();
                },

                addBtn: function addBtn() {

                    var ctrl = advantageMoreCtrl;

                    ctrl.$advantageContent.each(function (i, content) {

                        var $content = $(content);
                        var basicHeight = $content.height();
                        $content.css({'height': 'auto'});

                        var fullHeight = $content.height();

                        $content.height(basicHeight);

                        if (fullHeight > 140 && client.windowW > 1200) {
                            ctrl.$advantageBlur.eq(i).addClass('card__blur_show');
                        }

                        if (fullHeight > 260 && client.windowW >= 768 && client.windowW <= 1200) {
                            ctrl.$advantageBlur.eq(i).addClass('card__blur_show');
                            $content.addClass('card__content_margin');
                            $content.height(260);
                        }

                        if (fullHeight > 260 && client.windowW < 768) {
                            ctrl.$advantageBlur.eq(i).addClass('card__blur_show');
                            $content.height(260);
                        }
                        if (fullHeight < basicHeight) {
                            ctrl.$advantageBlur.eq(i).removeClass('card__blur_show');
                        }
                    });
                },

                showText: function showText(i) {

                    var ctrl = advantageMoreCtrl;
                    var basicHeight = ctrl.$advantageContent.eq(i).height();
                    ctrl.$advantageContent.eq(i).css({'height': 'auto'});
                    var fullHeight = ctrl.$advantageContent.eq(i).height();
                    ctrl.$advantageContent.eq(i).height(basicHeight);
                    ctrl.$advantageContent.eq(i).animate({
                        height: fullHeight
                    }, 500);
                    ctrl.$advantageContent.eq(i).data('basic-height', basicHeight);
                    ctrl.$advantageBtn.eq(i).addClass('card__btn_show').text('Свернуть');
                },

                hideText: function hideText(i) {

                    var ctrl = advantageMoreCtrl;
                    var basicHeight = ctrl.$advantageContent.eq(i).data('basic-height');
                    ctrl.$advantageBtn.eq(i).removeClass('card__btn_show').text('Развернуть');
                    ctrl.$advantageContent.eq(i).animate({
                        height: basicHeight
                    }, 500);
                },

                events: function events() {

                    var ctrl = advantageMoreCtrl;

                    $(window).on('resize', function () {
                        ctrl.$advantageContent.attr('style', '');
                        ctrl.$advantageBtn.removeClass('card__btn_show').text('Развернуть');
                        ctrl.$advantageContent.data('basic-height', '0');
                        ctrl.addBtn();
                    });

                    ctrl.$advantageBtn.on('click', function () {
                        var index = ctrl.$advantageBtn.index(this);
                        if (!ctrl.$advantageBtn.eq(index).hasClass('card__btn_show')) {
                            ctrl.showText(index);
                        } else {
                            ctrl.hideText(index);
                        }
                        ;
                    });
                }
            };
        };
        dropdown();

        /***/
    }),
    /* 112 */
    /***/ (function (module, exports) {

// ==================================================
// fancyBox v3.2.5
//
// Licensed GPLv3 for open source use
// or fancyBox Commercial License for commercial use
//
// http://fancyapps.com/fancybox/
// Copyright 2017 fancyApps
//
// ==================================================
        ;(function (window, document, $, undefined) {
            'use strict';

            // If there's no jQuery, fancyBox can't work
            // =========================================

            if (!$) {
                return;
            }

            // Check if fancyBox is already initialized
            // ========================================

            if ($.fn.fancybox) {

                if ('console' in window) {
                    console.log('fancyBox already initialized');
                }

                return;
            }

            // Private default settings
            // ========================

            var defaults = {

                // Enable infinite gallery navigation
                loop: false,

                // Space around image, ignored if zoomed-in or viewport width is smaller than 800px
                margin: [44, 0],

                // Horizontal space between slides
                gutter: 50,

                // Enable keyboard navigation
                keyboard: true,

                // Should display navigation arrows at the screen edges
                arrows: true,

                // Should display infobar (counter and arrows at the top)
                infobar: true,

                // Should display toolbar (buttons at the top)
                toolbar: true,

                // What buttons should appear in the top right corner.
                // Buttons will be created using templates from `btnTpl` option
                // and they will be placed into toolbar (class="fancybox-toolbar"` element)
                buttons: [
                    'slideShow',
                    'fullScreen',
                    'thumbs',
                    'share',
                    //'download',
                    //'zoom',
                    'close'
                ],

                // Detect "idle" time in seconds
                idleTime: 3,

                // Should display buttons at top right corner of the content
                // If 'auto' - they will be created for content having type 'html', 'inline' or 'ajax'
                // Use template from `btnTpl.smallBtn` for customization
                smallBtn: 'auto',

                // Disable right-click and use simple image protection for images
                protect: false,

                // Shortcut to make content "modal" - disable keyboard navigtion, hide buttons, etc
                modal: false,

                image: {

                    // Wait for images to load before displaying
                    // Requires predefined image dimensions
                    // If 'auto' - will zoom in thumbnail if 'width' and 'height' attributes are found
                    preload: "auto"

                },

                ajax: {

                    // Object containing settings for ajax request
                    settings: {

                        // This helps to indicate that request comes from the modal
                        // Feel free to change naming
                        data: {
                            fancybox: true
                        }
                    }

                },

                iframe: {

                    // Iframe template
                    tpl: '<iframe id="fancybox-frame{rnd}" name="fancybox-frame{rnd}" class="fancybox-iframe" frameborder="0" vspace="0" hspace="0" webkitAllowFullScreen mozallowfullscreen allowFullScreen allowtransparency="true" src=""></iframe>',

                    // Preload iframe before displaying it
                    // This allows to calculate iframe content width and height
                    // (note: Due to "Same Origin Policy", you can't get cross domain data).
                    preload: true,

                    // Custom CSS styling for iframe wrapping element
                    // You can use this to set custom iframe dimensions
                    css: {},

                    // Iframe tag attributes
                    attr: {
                        scrolling: 'auto'
                    }

                },

                // Default content type if cannot be detected automatically
                defaultType: 'image',

                // Open/close animation type
                // Possible values:
                //   false            - disable
                //   "zoom"           - zoom images from/to thumbnail
                //   "fade"
                //   "zoom-in-out"
                //
                animationEffect: "zoom",

                // Duration in ms for open/close animation
                animationDuration: 500,

                // Should image change opacity while zooming
                // If opacity is "auto", then opacity will be changed if image and thumbnail have different aspect ratios
                zoomOpacity: "auto",

                // Transition effect between slides
                //
                // Possible values:
                //   false            - disable
                //   "fade'
                //   "slide'
                //   "circular'
                //   "tube'
                //   "zoom-in-out'
                //   "rotate'
                //
                transitionEffect: "fade",

                // Duration in ms for transition animation
                transitionDuration: 366,

                // Custom CSS class for slide element
                slideClass: '',

                // Custom CSS class for layout
                baseClass: '',

                // Base template for layout
                baseTpl:
                '<div class="fancybox-container" role="dialog" tabindex="-1">' +
                '<div class="fancybox-bg"></div>' +
                '<div class="fancybox-inner">' +
                '<div class="fancybox-infobar">' +
                '<span data-fancybox-index></span>&nbsp;/&nbsp;<span data-fancybox-count></span>' +
                '</div>' +
                '<div class="fancybox-toolbar">{{buttons}}</div>' +
                '<div class="fancybox-navigation">{{arrows}}</div>' +
                '<div class="fancybox-stage"></div>' +
                '<div class="fancybox-caption-wrap"><div class="fancybox-caption"></div></div>' +
                '</div>' +
                '</div>',

                // Loading indicator template
                spinnerTpl: '<div class="fancybox-loading"></div>',

                // Error message template
                errorTpl: '<div class="fancybox-error"><p>{{ERROR}}<p></div>',

                btnTpl: {

                    download: '<a download data-fancybox-download class="fancybox-button fancybox-button--download" title="{{DOWNLOAD}}">' +
                    '<svg viewBox="0 0 40 40">' +
                    '<path d="M20,23 L20,8 L20,23 L13,16 L20,23 L27,16 L20,23 M26,28 L13,28 L27,28 L14,28" />' +
                    '</svg>' +
                    '</a>',

                    zoom: '<button data-fancybox-zoom class="fancybox-button fancybox-button--zoom" title="{{ZOOM}}">' +
                    '<svg viewBox="0 0 40 40">' +
                    '<path d="M 18,17 m-8,0 a 8,8 0 1,0 16,0 a 8,8 0 1,0 -16,0 M25,23 L31,29 L25,23" />' +
                    '</svg>' +
                    '</button>',

                    close: '<button data-fancybox-close class="fancybox-button fancybox-button--close" title="{{CLOSE}}">' +
                    '<svg viewBox="0 0 40 40">' +
                    '<path d="M10,10 L30,30 M30,10 L10,30" />' +
                    '</svg>' +
                    '</button>',

                    // This small close button will be appended to your html/inline/ajax content by default,
                    // if "smallBtn" option is not set to false
                    smallBtn: '<button data-fancybox-close class="fancybox-close-small" title="{{CLOSE}}"></button>',

                    // Arrows
                    arrowLeft: '<button data-fancybox-prev class="fancybox-button fancybox-button--arrow_left" title="{{PREV}}">' +
                    '<svg viewBox="0 0 40 40">' +
                    '<path d="M10,20 L30,20 L10,20 L18,28 L10,20 L18,12 L10,20"></path>' +
                    '</svg>' +
                    '</button>',

                    arrowRight: '<button data-fancybox-next class="fancybox-button fancybox-button--arrow_right" title="{{NEXT}}">' +
                    '<svg viewBox="0 0 40 40">' +
                    '<path d="M30,20 L10,20 L30,20 L22,28 L30,20 L22,12 L30,20"></path>' +
                    '</svg>' +
                    '</button>'
                },

                // Container is injected into this element
                parentEl: 'body',


                // Focus handling
                // ==============

                // Try to focus on the first focusable element after opening
                autoFocus: false,

                // Put focus back to active element after closing
                backFocus: true,

                // Do not let user to focus on element outside modal content
                trapFocus: true,


                // Module specific options
                // =======================

                fullScreen: {
                    autoStart: false,
                },

                // Set `touch: false` to disable dragging/swiping
                touch: {
                    vertical: true,  // Allow to drag content vertically
                    momentum: true   // Continue movement after releasing mouse/touch when panning
                },

                // Hash value when initializing manually,
                // set `false` to disable hash change
                hash: null,

                // Customize or add new media types
                // Example:
                /*
        media : {
            youtube : {
                params : {
                    autoplay : 0
                }
            }
        }
        */
                media: {},

                slideShow: {
                    autoStart: false,
                    speed: 4000
                },

                thumbs: {
                    autoStart: false,                  // Display thumbnails on opening
                    hideOnClose: true,                   // Hide thumbnail grid when closing animation starts
                    parentEl: '.fancybox-container',  // Container is injected into this element
                    axis: 'y'                     // Vertical (y) or horizontal (x) scrolling
                },

                // Callbacks
                //==========

                // See Documentation/API/Events for more information
                // Example:
                /*
            afterShow: function( instance, current ) {
                 console.info( 'Clicked element:' );
                 console.info( current.opts.$orig );
            }
        */

                onInit: $.noop,  // When instance has been initialized

                beforeLoad: $.noop,  // Before the content of a slide is being loaded
                afterLoad: $.noop,  // When the content of a slide is done loading

                beforeShow: $.noop,  // Before open animation starts
                afterShow: $.noop,  // When content is done loading and animating

                beforeClose: $.noop,  // Before the instance attempts to close. Return false to cancel the close.
                afterClose: $.noop,  // After instance has been closed

                onActivate: $.noop,  // When instance is brought to front
                onDeactivate: $.noop,  // When other instance has been activated


                // Interaction
                // ===========

                // Use options below to customize taken action when user clicks or double clicks on the fancyBox area,
                // each option can be string or method that returns value.
                //
                // Possible values:
                //   "close"           - close instance
                //   "next"            - move to next gallery item
                //   "nextOrClose"     - move to next gallery item or close if gallery has only one item
                //   "toggleControls"  - show/hide controls
                //   "zoom"            - zoom image (if loaded)
                //   false             - do nothing

                // Clicked on the content
                clickContent: function (current, event) {
                    return current.type === 'image' ? 'zoom' : false;
                },

                // Clicked on the slide
                clickSlide: 'close',

                // Clicked on the background (backdrop) element
                clickOutside: 'close',

                // Same as previous two, but for double click
                dblclickContent: false,
                dblclickSlide: false,
                dblclickOutside: false,


                // Custom options when mobile device is detected
                // =============================================

                mobile: {
                    margin: 0,

                    clickContent: function (current, event) {
                        return current.type === 'image' ? 'toggleControls' : false;
                    },
                    clickSlide: function (current, event) {
                        return current.type === 'image' ? 'toggleControls' : 'close';
                    },
                    dblclickContent: function (current, event) {
                        return current.type === 'image' ? 'zoom' : false;
                    },
                    dblclickSlide: function (current, event) {
                        return current.type === 'image' ? 'zoom' : false;
                    }
                },


                // Internationalization
                // ============

                lang: 'en',
                i18n: {
                    'en': {
                        CLOSE: 'Close',
                        NEXT: 'Next',
                        PREV: 'Previous',
                        ERROR: 'The requested content cannot be loaded. <br/> Please try again later.',
                        PLAY_START: 'Start slideshow',
                        PLAY_STOP: 'Pause slideshow',
                        FULL_SCREEN: 'Full screen',
                        THUMBS: 'Thumbnails',
                        DOWNLOAD: 'Download',
                        SHARE: 'Share',
                        ZOOM: 'Zoom'
                    },
                    'de': {
                        CLOSE: 'Schliessen',
                        NEXT: 'Weiter',
                        PREV: 'Zurück',
                        ERROR: 'Die angeforderten Daten konnten nicht geladen werden. <br/> Bitte versuchen Sie es später nochmal.',
                        PLAY_START: 'Diaschau starten',
                        PLAY_STOP: 'Diaschau beenden',
                        FULL_SCREEN: 'Vollbild',
                        THUMBS: 'Vorschaubilder',
                        DOWNLOAD: 'Herunterladen',
                        SHARE: 'Teilen',
                        ZOOM: 'Maßstab'
                    }
                }

            };

            // Few useful variables and methods
            // ================================

            var $W = $(window);
            var $D = $(document);

            var called = 0;


            // Check if an object is a jQuery object and not a native JavaScript object
            // ========================================================================

            var isQuery = function (obj) {
                return obj && obj.hasOwnProperty && obj instanceof $;
            };


            // Handle multiple browsers for "requestAnimationFrame" and "cancelAnimationFrame"
            // ===============================================================================

            var requestAFrame = (function () {
                return window.requestAnimationFrame ||
                    window.webkitRequestAnimationFrame ||
                    window.mozRequestAnimationFrame ||
                    window.oRequestAnimationFrame ||
                    // if all else fails, use setTimeout
                    function (callback) {
                        return window.setTimeout(callback, 1000 / 60);
                    };
            })();


            // Detect the supported transition-end event property name
            // =======================================================

            var transitionEnd = (function () {
                var t, el = document.createElement("fakeelement");

                var transitions = {
                    "transition": "transitionend",
                    "OTransition": "oTransitionEnd",
                    "MozTransition": "transitionend",
                    "WebkitTransition": "webkitTransitionEnd"
                };

                for (t in transitions) {
                    if (el.style[t] !== undefined) {
                        return transitions[t];
                    }
                }

                return 'transitionend';
            })();


            // Force redraw on an element.
            // This helps in cases where the browser doesn't redraw an updated element properly.
            // =================================================================================

            var forceRedraw = function ($el) {
                return ($el && $el.length && $el[0].offsetHeight);
            };


            // Class definition
            // ================

            var FancyBox = function (content, opts, index) {
                var self = this;

                self.opts = $.extend(true, {index: index}, $.fancybox.defaults, opts || {});

                if ($.fancybox.isMobile) {
                    self.opts = $.extend(true, {}, self.opts, self.opts.mobile);
                }

                // Exclude buttons option from deep merging
                if (opts && $.isArray(opts.buttons)) {
                    self.opts.buttons = opts.buttons;
                }

                self.id = self.opts.id || ++called;
                self.group = [];

                self.currIndex = parseInt(self.opts.index, 10) || 0;
                self.prevIndex = null;

                self.prevPos = null;
                self.currPos = 0;

                self.firstRun = null;

                // Create group elements from original item collection
                self.createGroup(content);

                if (!self.group.length) {
                    return;
                }

                // Save last active element and current scroll position
                self.$lastFocus = $(document.activeElement).blur();

                // Collection of gallery objects
                self.slides = {};

                self.init();
            };

            $.extend(FancyBox.prototype, {

                // Create DOM structure
                // ====================

                init: function () {
                    var self = this,
                        firstItem = self.group[self.currIndex],
                        firstItemOpts = firstItem.opts,
                        scrollbarWidth = $.fancybox.scrollbarWidth,
                        $scrollDiv,
                        $container,
                        buttonStr;

                    self.scrollTop = $D.scrollTop();
                    self.scrollLeft = $D.scrollLeft();


                    // Hide scrollbars
                    // ===============

                    if (!$.fancybox.getInstance()) {

                        $('body').addClass('fancybox-active');

                        // iOS hack
                        if (/iPad|iPhone|iPod/.test(navigator.userAgent) && !window.MSStream) {

                            // iOS has problems for input elements inside fixed containers,
                            // the workaround is to apply `position: fixed` to `<body>` element,
                            // unfortunately, this makes it lose the scrollbars and forces address bar to appear.

                            if (firstItem.type !== 'image') {
                                $('body').css('top', $('body').scrollTop() * -1).addClass('fancybox-iosfix');
                            }

                        } else if (!$.fancybox.isMobile && document.body.scrollHeight > window.innerHeight) {

                            if (scrollbarWidth === undefined) {
                                $scrollDiv = $('<div style="width:50px;height:50px;overflow:scroll;" />').appendTo('body');

                                scrollbarWidth = $.fancybox.scrollbarWidth = $scrollDiv[0].offsetWidth - $scrollDiv[0].clientWidth;

                                $scrollDiv.remove();
                            }

                            $('head').append('<style id="fancybox-style-noscroll" type="text/css">.compensate-for-scrollbar { margin-right: ' + scrollbarWidth + 'px; }</style>');
                            $('body').addClass('compensate-for-scrollbar');
                        }
                    }


                    // Build html markup and set references
                    // ====================================

                    // Build html code for buttons and insert into main template
                    buttonStr = '';

                    $.each(firstItemOpts.buttons, function (index, value) {
                        buttonStr += (firstItemOpts.btnTpl[value] || '');
                    });

                    // Create markup from base template, it will be initially hidden to
                    // avoid unnecessary work like painting while initializing is not complete
                    $container = $(
                        self.translate(self,
                            firstItemOpts.baseTpl
                                .replace('\{\{buttons\}\}', buttonStr)
                                .replace('\{\{arrows\}\}', firstItemOpts.btnTpl.arrowLeft + firstItemOpts.btnTpl.arrowRight)
                        )
                    )
                        .attr('id', 'fancybox-container-' + self.id)
                        .addClass('fancybox-is-hidden')
                        .addClass(firstItemOpts.baseClass)
                        .data('FancyBox', self)
                        .appendTo(firstItemOpts.parentEl);

                    // Create object holding references to jQuery wrapped nodes
                    self.$refs = {
                        container: $container
                    };

                    ['bg', 'inner', 'infobar', 'toolbar', 'stage', 'caption', 'navigation'].forEach(function (item) {
                        self.$refs[item] = $container.find('.fancybox-' + item);
                    });

                    self.trigger('onInit');

                    // Enable events, deactive previous instances
                    self.activate();

                    // Build slides, load and reveal content
                    self.jumpTo(self.currIndex);
                },


                // Simple i18n support - replaces object keys found in template
                // with corresponding values
                // ============================================================

                translate: function (obj, str) {
                    var arr = obj.opts.i18n[obj.opts.lang];

                    return str.replace(/\{\{(\w+)\}\}/g, function (match, n) {
                        var value = arr[n];

                        if (value === undefined) {
                            return match;
                        }

                        return value;
                    });
                },

                // Create array of gally item objects
                // Check if each object has valid type and content
                // ===============================================

                createGroup: function (content) {
                    var self = this;
                    var items = $.makeArray(content);

                    $.each(items, function (i, item) {
                        var obj = {},
                            opts = {},
                            $item,
                            type,
                            src,
                            srcParts;

                        // Step 1 - Make sure we have an object
                        // ====================================

                        if ($.isPlainObject(item)) {

                            // We probably have manual usage here, something like
                            // $.fancybox.open( [ { src : "image.jpg", type : "image" } ] )

                            obj = item;
                            opts = item.opts || item;

                        } else if ($.type(item) === 'object' && $(item).length) {

                            // Here we probably have jQuery collection returned by some selector
                            $item = $(item);

                            opts = $item.data();
                            opts = $.extend({}, opts, opts.options || {});

                            // Here we store clicked element
                            opts.$orig = $item;

                            obj.src = opts.src || $item.attr('href');

                            // Assume that simple syntax is used, for example:
                            //   `$.fancybox.open( $("#test"), {} );`
                            if (!obj.type && !obj.src) {
                                obj.type = 'inline';
                                obj.src = item;
                            }

                        } else {

                            // Assume we have a simple html code, for example:
                            //   $.fancybox.open( '<div><h1>Hi!</h1></div>' );

                            obj = {
                                type: 'html',
                                src: item + ''
                            };

                        }

                        // Each gallery object has full collection of options
                        obj.opts = $.extend(true, {}, self.opts, opts);

                        // Do not merge buttons array
                        if ($.isArray(opts.buttons)) {
                            obj.opts.buttons = opts.buttons;
                        }


                        // Step 2 - Make sure we have content type, if not - try to guess
                        // ==============================================================

                        type = obj.type || obj.opts.type;
                        src = obj.src || '';

                        if (!type && src) {
                            if (src.match(/(^data:image\/[a-z0-9+\/=]*,)|(\.(jp(e|g|eg)|gif|png|bmp|webp|svg|ico)((\?|#).*)?$)/i)) {
                                type = 'image';

                            } else if (src.match(/\.(pdf)((\?|#).*)?$/i)) {
                                type = 'pdf';

                            } else if (src.charAt(0) === '#') {
                                type = 'inline';
                            }
                        }

                        if (type) {
                            obj.type = type;

                        } else {
                            self.trigger('objectNeedsType', obj);
                        }


                        // Step 3 - Some adjustments
                        // =========================

                        obj.index = self.group.length;

                        // Check if $orig and $thumb objects exist
                        if (obj.opts.$orig && !obj.opts.$orig.length) {
                            delete obj.opts.$orig;
                        }

                        if (!obj.opts.$thumb && obj.opts.$orig) {
                            obj.opts.$thumb = obj.opts.$orig.find('img:first');
                        }

                        if (obj.opts.$thumb && !obj.opts.$thumb.length) {
                            delete obj.opts.$thumb;
                        }

                        // "caption" is a "special" option, it can be used to customize caption per gallery item ..
                        if ($.type(obj.opts.caption) === 'function') {
                            obj.opts.caption = obj.opts.caption.apply(item, [self, obj]);
                        }

                        if ($.type(self.opts.caption) === 'function') {
                            obj.opts.caption = self.opts.caption.apply(item, [self, obj]);
                        }

                        // Make sure we have caption as a string or jQuery object
                        if (!(obj.opts.caption instanceof $)) {
                            obj.opts.caption = obj.opts.caption === undefined ? '' : obj.opts.caption + '';
                        }

                        // Check if url contains "filter" used to filter the content
                        // Example: "ajax.html #something"
                        if (type === 'ajax') {
                            srcParts = src.split(/\s+/, 2);

                            if (srcParts.length > 1) {
                                obj.src = srcParts.shift();

                                obj.opts.filter = srcParts.shift();
                            }
                        }

                        if (obj.opts.smallBtn == 'auto') {

                            if ($.inArray(type, ['html', 'inline', 'ajax']) > -1) {
                                obj.opts.toolbar = false;
                                obj.opts.smallBtn = true;

                            } else {
                                obj.opts.smallBtn = false;
                            }

                        }

                        // If the type is "pdf", then simply load file into iframe
                        if (type === 'pdf') {
                            obj.type = 'iframe';

                            obj.opts.iframe.preload = false;
                        }

                        // Hide all buttons and disable interactivity for modal items
                        if (obj.opts.modal) {

                            obj.opts = $.extend(true, obj.opts, {
                                // Remove buttons
                                infobar: 0,
                                toolbar: 0,

                                smallBtn: 0,

                                // Disable keyboard navigation
                                keyboard: 0,

                                // Disable some modules
                                slideShow: 0,
                                fullScreen: 0,
                                thumbs: 0,
                                touch: 0,

                                // Disable click event handlers
                                clickContent: false,
                                clickSlide: false,
                                clickOutside: false,
                                dblclickContent: false,
                                dblclickSlide: false,
                                dblclickOutside: false
                            });

                        }

                        // Step 4 - Add processed object to group
                        // ======================================

                        self.group.push(obj);

                    });

                },


                // Attach an event handler functions for:
                //   - navigation buttons
                //   - browser scrolling, resizing;
                //   - focusing
                //   - keyboard
                //   - detect idle
                // ======================================

                addEvents: function () {
                    var self = this;

                    self.removeEvents();

                    // Make navigation elements clickable
                    self.$refs.container.on('click.fb-close', '[data-fancybox-close]', function (e) {
                        e.stopPropagation();
                        e.preventDefault();

                        self.close(e);

                    }).on('click.fb-prev touchend.fb-prev', '[data-fancybox-prev]', function (e) {
                        e.stopPropagation();
                        e.preventDefault();

                        self.previous();

                    }).on('click.fb-next touchend.fb-next', '[data-fancybox-next]', function (e) {
                        e.stopPropagation();
                        e.preventDefault();

                        self.next();

                    }).on('click.fb', '[data-fancybox-zoom]', function (e) {
                        // Click handler for zoom button
                        self[self.isScaledDown() ? 'scaleToActual' : 'scaleToFit']();
                    });


                    // Handle page scrolling and browser resizing
                    $W.on('orientationchange.fb resize.fb', function (e) {

                        if (e && e.originalEvent && e.originalEvent.type === "resize") {

                            requestAFrame(function () {
                                self.update();
                            });

                        } else {

                            self.$refs.stage.hide();

                            setTimeout(function () {
                                self.$refs.stage.show();

                                self.update();
                            }, 600);

                        }

                    });

                    // Trap keyboard focus inside of the modal, so the user does not accidentally tab outside of the modal
                    // (a.k.a. "escaping the modal")
                    $D.on('focusin.fb', function (e) {
                        var instance = $.fancybox ? $.fancybox.getInstance() : null;

                        if (instance.isClosing || !instance.current || !instance.current.opts.trapFocus || $(e.target).hasClass('fancybox-container') || $(e.target).is(document)) {
                            return;
                        }

                        if (instance && $(e.target).css('position') !== 'fixed' && !instance.$refs.container.has(e.target).length) {
                            e.stopPropagation();

                            instance.focus();

                            // Sometimes page gets scrolled, set it back
                            $W.scrollTop(self.scrollTop).scrollLeft(self.scrollLeft);
                        }
                    });


                    // Enable keyboard navigation
                    $D.on('keydown.fb', function (e) {
                        var current = self.current,
                            keycode = e.keyCode || e.which;

                        if (!current || !current.opts.keyboard) {
                            return;
                        }

                        if ($(e.target).is('input') || $(e.target).is('textarea')) {
                            return;
                        }

                        // Backspace and Esc keys
                        if (keycode === 8 || keycode === 27) {
                            e.preventDefault();

                            self.close(e);

                            return;
                        }

                        // Left arrow and Up arrow
                        if (keycode === 37 || keycode === 38) {
                            e.preventDefault();

                            self.previous();

                            return;
                        }

                        // Righ arrow and Down arrow
                        if (keycode === 39 || keycode === 40) {
                            e.preventDefault();

                            self.next();

                            return;
                        }

                        self.trigger('afterKeydown', e, keycode);
                    });


                    // Hide controls after some inactivity period
                    if (self.group[self.currIndex].opts.idleTime) {
                        self.idleSecondsCounter = 0;

                        $D.on('mousemove.fb-idle mouseleave.fb-idle mousedown.fb-idle touchstart.fb-idle touchmove.fb-idle scroll.fb-idle keydown.fb-idle', function (e) {
                            self.idleSecondsCounter = 0;

                            if (self.isIdle) {
                                self.showControls();
                            }

                            self.isIdle = false;
                        });

                        self.idleInterval = window.setInterval(function () {
                            self.idleSecondsCounter++;

                            if (self.idleSecondsCounter >= self.group[self.currIndex].opts.idleTime) {
                                self.isIdle = true;
                                self.idleSecondsCounter = 0;

                                self.hideControls();
                            }

                        }, 1000);
                    }

                },


                // Remove events added by the core
                // ===============================

                removeEvents: function () {
                    var self = this;

                    $W.off('orientationchange.fb resize.fb');
                    $D.off('focusin.fb keydown.fb .fb-idle');

                    this.$refs.container.off('.fb-close .fb-prev .fb-next');

                    if (self.idleInterval) {
                        window.clearInterval(self.idleInterval);

                        self.idleInterval = null;
                    }
                },


                // Change to previous gallery item
                // ===============================

                previous: function (duration) {
                    return this.jumpTo(this.currPos - 1, duration);
                },


                // Change to next gallery item
                // ===========================

                next: function (duration) {
                    return this.jumpTo(this.currPos + 1, duration);
                },


                // Switch to selected gallery item
                // ===============================

                jumpTo: function (pos, duration, slide) {
                    var self = this,
                        firstRun,
                        loop,
                        current,
                        previous,
                        canvasWidth,
                        currentPos,
                        transitionProps;

                    var groupLen = self.group.length;

                    if (self.isSliding || self.isClosing || (self.isAnimating && self.firstRun)) {
                        return;
                    }

                    pos = parseInt(pos, 10);
                    loop = self.current ? self.current.opts.loop : self.opts.loop;

                    if (!loop && (pos < 0 || pos >= groupLen)) {
                        return false;
                    }

                    firstRun = self.firstRun = (self.firstRun === null);

                    if (groupLen < 2 && !firstRun && !!self.isSliding) {
                        return;
                    }

                    previous = self.current;

                    self.prevIndex = self.currIndex;
                    self.prevPos = self.currPos;

                    // Create slides
                    current = self.createSlide(pos);

                    if (groupLen > 1) {
                        if (loop || current.index > 0) {
                            self.createSlide(pos - 1);
                        }

                        if (loop || current.index < groupLen - 1) {
                            self.createSlide(pos + 1);
                        }
                    }

                    self.current = current;
                    self.currIndex = current.index;
                    self.currPos = current.pos;

                    self.trigger('beforeShow', firstRun);

                    self.updateControls();

                    currentPos = $.fancybox.getTranslate(current.$slide);

                    current.isMoved = (currentPos.left !== 0 || currentPos.top !== 0) && !current.$slide.hasClass('fancybox-animated');
                    current.forcedDuration = undefined;

                    if ($.isNumeric(duration)) {
                        current.forcedDuration = duration;
                    } else {
                        duration = current.opts[firstRun ? 'animationDuration' : 'transitionDuration'];
                    }

                    duration = parseInt(duration, 10);

                    // Fresh start - reveal container, current slide and start loading content
                    if (firstRun) {

                        if (current.opts.animationEffect && duration) {
                            self.$refs.container.css('transition-duration', duration + 'ms');
                        }

                        self.$refs.container.removeClass('fancybox-is-hidden');

                        forceRedraw(self.$refs.container);

                        self.$refs.container.addClass('fancybox-is-open');

                        // Make first slide visible (to display loading icon, if needed)
                        current.$slide.addClass('fancybox-slide--current');

                        self.loadSlide(current);

                        self.preload();

                        return;
                    }

                    // Clean up
                    $.each(self.slides, function (index, slide) {
                        $.fancybox.stop(slide.$slide);
                    });

                    // Make current that slide is visible even if content is still loading
                    current.$slide.removeClass('fancybox-slide--next fancybox-slide--previous').addClass('fancybox-slide--current');

                    // If slides have been dragged, animate them to correct position
                    if (current.isMoved) {
                        canvasWidth = Math.round(current.$slide.width());

                        $.each(self.slides, function (index, slide) {
                            var pos = slide.pos - current.pos;

                            $.fancybox.animate(slide.$slide, {
                                top: 0,
                                left: (pos * canvasWidth) + (pos * slide.opts.gutter)
                            }, duration, function () {

                                slide.$slide.removeAttr('style').removeClass('fancybox-slide--next fancybox-slide--previous');

                                if (slide.pos === self.currPos) {
                                    current.isMoved = false;

                                    self.complete();
                                }
                            });
                        });

                    } else {
                        self.$refs.stage.children().removeAttr('style');
                    }

                    // Start transition that reveals current content
                    // or wait when it will be loaded

                    if (current.isLoaded) {
                        self.revealContent(current);

                    } else {
                        self.loadSlide(current);
                    }

                    self.preload();

                    if (previous.pos === current.pos) {
                        return;
                    }

                    // Handle previous slide
                    // =====================

                    transitionProps = 'fancybox-slide--' + (previous.pos > current.pos ? 'next' : 'previous');

                    previous.$slide.removeClass('fancybox-slide--complete fancybox-slide--current fancybox-slide--next fancybox-slide--previous');

                    previous.isComplete = false;

                    if (!duration || (!current.isMoved && !current.opts.transitionEffect)) {
                        return;
                    }

                    if (current.isMoved) {
                        previous.$slide.addClass(transitionProps);

                    } else {

                        transitionProps = 'fancybox-animated ' + transitionProps + ' fancybox-fx-' + current.opts.transitionEffect;

                        $.fancybox.animate(previous.$slide, transitionProps, duration, function () {
                            previous.$slide.removeClass(transitionProps).removeAttr('style');
                        });

                    }

                },


                // Create new "slide" element
                // These are gallery items  that are actually added to DOM
                // =======================================================

                createSlide: function (pos) {

                    var self = this;
                    var $slide;
                    var index;

                    index = pos % self.group.length;
                    index = index < 0 ? self.group.length + index : index;

                    if (!self.slides[pos] && self.group[index]) {
                        $slide = $('<div class="fancybox-slide"></div>').appendTo(self.$refs.stage);

                        self.slides[pos] = $.extend(true, {}, self.group[index], {
                            pos: pos,
                            $slide: $slide,
                            isLoaded: false,
                        });

                        self.updateSlide(self.slides[pos]);
                    }

                    return self.slides[pos];
                },


                // Scale image to the actual size of the image
                // ===========================================

                scaleToActual: function (x, y, duration) {

                    var self = this;

                    var current = self.current;
                    var $what = current.$content;

                    var imgPos, posX, posY, scaleX, scaleY;

                    var canvasWidth = parseInt(current.$slide.width(), 10);
                    var canvasHeight = parseInt(current.$slide.height(), 10);

                    var newImgWidth = current.width;
                    var newImgHeight = current.height;

                    if (!(current.type == 'image' && !current.hasError) || !$what || self.isAnimating) {
                        return;
                    }

                    $.fancybox.stop($what);

                    self.isAnimating = true;

                    x = x === undefined ? canvasWidth * 0.5 : x;
                    y = y === undefined ? canvasHeight * 0.5 : y;

                    imgPos = $.fancybox.getTranslate($what);

                    scaleX = newImgWidth / imgPos.width;
                    scaleY = newImgHeight / imgPos.height;

                    // Get center position for original image
                    posX = (canvasWidth * 0.5 - newImgWidth * 0.5);
                    posY = (canvasHeight * 0.5 - newImgHeight * 0.5);

                    // Make sure image does not move away from edges
                    if (newImgWidth > canvasWidth) {
                        posX = imgPos.left * scaleX - ((x * scaleX) - x);

                        if (posX > 0) {
                            posX = 0;
                        }

                        if (posX < canvasWidth - newImgWidth) {
                            posX = canvasWidth - newImgWidth;
                        }
                    }

                    if (newImgHeight > canvasHeight) {
                        posY = imgPos.top * scaleY - ((y * scaleY) - y);

                        if (posY > 0) {
                            posY = 0;
                        }

                        if (posY < canvasHeight - newImgHeight) {
                            posY = canvasHeight - newImgHeight;
                        }
                    }

                    self.updateCursor(newImgWidth, newImgHeight);

                    $.fancybox.animate($what, {
                        top: posY,
                        left: posX,
                        scaleX: scaleX,
                        scaleY: scaleY
                    }, duration || 330, function () {
                        self.isAnimating = false;
                    });

                    // Stop slideshow
                    if (self.SlideShow && self.SlideShow.isActive) {
                        self.SlideShow.stop();
                    }
                },


                // Scale image to fit inside parent element
                // ========================================

                scaleToFit: function (duration) {

                    var self = this;

                    var current = self.current;
                    var $what = current.$content;
                    var end;

                    if (!(current.type == 'image' && !current.hasError) || !$what || self.isAnimating) {
                        return;
                    }

                    $.fancybox.stop($what);

                    self.isAnimating = true;

                    end = self.getFitPos(current);

                    self.updateCursor(end.width, end.height);

                    $.fancybox.animate($what, {
                        top: end.top,
                        left: end.left,
                        scaleX: end.width / $what.width(),
                        scaleY: end.height / $what.height()
                    }, duration || 330, function () {
                        self.isAnimating = false;
                    });

                },

                // Calculate image size to fit inside viewport
                // ===========================================

                getFitPos: function (slide) {
                    var self = this;
                    var $what = slide.$content;

                    var imgWidth = slide.width;
                    var imgHeight = slide.height;

                    var margin = slide.opts.margin;

                    var canvasWidth, canvasHeight, minRatio, width, height;

                    if (!$what || !$what.length || (!imgWidth && !imgHeight)) {
                        return false;
                    }

                    // Convert "margin to CSS style: [ top, right, bottom, left ]
                    if ($.type(margin) === "number") {
                        margin = [margin, margin];
                    }

                    if (margin.length == 2) {
                        margin = [margin[0], margin[1], margin[0], margin[1]];
                    }

                    // We can not use $slide width here, because it can have different diemensions while in transiton
                    canvasWidth = parseInt(self.$refs.stage.width(), 10) - (margin[1] + margin[3]);
                    canvasHeight = parseInt(self.$refs.stage.height(), 10) - (margin[0] + margin[2]);

                    minRatio = Math.min(1, canvasWidth / imgWidth, canvasHeight / imgHeight);

                    width = Math.floor(minRatio * imgWidth);
                    height = Math.floor(minRatio * imgHeight);

                    // Use floor rounding to make sure it really fits
                    return {
                        top: Math.floor((canvasHeight - height) * 0.5) + margin[0],
                        left: Math.floor((canvasWidth - width) * 0.5) + margin[3],
                        width: width,
                        height: height
                    };

                },


                // Update position and content of all slides
                // =========================================

                update: function () {

                    var self = this;

                    $.each(self.slides, function (key, slide) {
                        self.updateSlide(slide);
                    });

                },


                // Update slide position and scale content to fit
                // ==============================================

                updateSlide: function (slide) {

                    var self = this;
                    var $what = slide.$content;

                    if ($what && (slide.width || slide.height)) {
                        self.isAnimating = false;

                        $.fancybox.stop($what);

                        $.fancybox.setTranslate($what, self.getFitPos(slide));

                        if (slide.pos === self.currPos) {
                            self.updateCursor();
                        }
                    }

                    slide.$slide.trigger('refresh');

                    self.trigger('onUpdate', slide);

                },

                // Update cursor style depending if content can be zoomed
                // ======================================================

                updateCursor: function (nextWidth, nextHeight) {

                    var self = this;
                    var isScaledDown;

                    var $container = self.$refs.container.removeClass('fancybox-is-zoomable fancybox-can-zoomIn fancybox-can-drag fancybox-can-zoomOut');

                    if (!self.current || self.isClosing) {
                        return;
                    }

                    if (self.isZoomable()) {

                        $container.addClass('fancybox-is-zoomable');

                        if (nextWidth !== undefined && nextHeight !== undefined) {
                            isScaledDown = nextWidth < self.current.width && nextHeight < self.current.height;

                        } else {
                            isScaledDown = self.isScaledDown();
                        }

                        if (isScaledDown) {

                            // If image is scaled down, then, obviously, it can be zoomed to full size
                            $container.addClass('fancybox-can-zoomIn');

                        } else {

                            if (self.current.opts.touch) {

                                // If image size ir largen than available available and touch module is not disable,
                                // then user can do panning
                                $container.addClass('fancybox-can-drag');

                            } else {
                                $container.addClass('fancybox-can-zoomOut');
                            }

                        }

                    } else if (self.current.opts.touch) {
                        $container.addClass('fancybox-can-drag');
                    }

                },


                // Check if current slide is zoomable
                // ==================================

                isZoomable: function () {

                    var self = this;

                    var current = self.current;
                    var fitPos;

                    if (!current || self.isClosing) {
                        return;
                    }

                    // Assume that slide is zoomable if
                    //   - image is loaded successfuly
                    //   - click action is "zoom"
                    //   - actual size of the image is smaller than available area
                    if (current.type === 'image' && current.isLoaded && !current.hasError &&
                        (current.opts.clickContent === 'zoom' || ($.isFunction(current.opts.clickContent) && current.opts.clickContent(current) === "zoom"))
                    ) {

                        fitPos = self.getFitPos(current);

                        if (current.width > fitPos.width || current.height > fitPos.height) {
                            return true;
                        }

                    }

                    return false;

                },


                // Check if current image dimensions are smaller than actual
                // =========================================================

                isScaledDown: function () {

                    var self = this;

                    var current = self.current;
                    var $what = current.$content;

                    var rez = false;

                    if ($what) {
                        rez = $.fancybox.getTranslate($what);
                        rez = rez.width < current.width || rez.height < current.height;
                    }

                    return rez;

                },


                // Check if image dimensions exceed parent element
                // ===============================================

                canPan: function () {

                    var self = this;

                    var current = self.current;
                    var $what = current.$content;

                    var rez = false;

                    if ($what) {
                        rez = self.getFitPos(current);
                        rez = Math.abs($what.width() - rez.width) > 1 || Math.abs($what.height() - rez.height) > 1;

                    }

                    return rez;

                },


                // Load content into the slide
                // ===========================

                loadSlide: function (slide) {

                    var self = this, type, $slide;
                    var ajaxLoad;

                    if (slide.isLoading) {
                        return;
                    }

                    if (slide.isLoaded) {
                        return;
                    }

                    slide.isLoading = true;

                    self.trigger('beforeLoad', slide);

                    type = slide.type;
                    $slide = slide.$slide;

                    $slide
                        .off('refresh')
                        .trigger('onReset')
                        .addClass('fancybox-slide--' + (type || 'unknown'))
                        .addClass(slide.opts.slideClass);

                    // Create content depending on the type

                    switch (type) {

                        case 'image':

                            self.setImage(slide);

                            break;

                        case 'iframe':

                            self.setIframe(slide);

                            break;

                        case 'html':

                            self.setContent(slide, slide.src || slide.content);

                            break;

                        case 'inline':

                            if ($(slide.src).length) {
                                self.setContent(slide, $(slide.src));

                            } else {
                                self.setError(slide);
                            }

                            break;

                        case 'ajax':

                            self.showLoading(slide);

                            ajaxLoad = $.ajax($.extend({}, slide.opts.ajax.settings, {
                                url: slide.src,
                                success: function (data, textStatus) {

                                    if (textStatus === 'success') {
                                        self.setContent(slide, data);
                                    }

                                },
                                error: function (jqXHR, textStatus) {

                                    if (jqXHR && textStatus !== 'abort') {
                                        self.setError(slide);
                                    }

                                }
                            }));

                            $slide.one('onReset', function () {
                                ajaxLoad.abort();
                            });

                            break;

                        default:

                            self.setError(slide);

                            break;

                    }

                    return true;

                },


                // Use thumbnail image, if possible
                // ================================

                setImage: function (slide) {

                    var self = this;
                    var srcset = slide.opts.srcset || slide.opts.image.srcset;

                    var found, temp, pxRatio, windowWidth;

                    // If we have "srcset", then we need to find matching "src" value.
                    // This is necessary, because when you set an src attribute, the browser will preload the image
                    // before any javascript or even CSS is applied.
                    if (srcset) {
                        pxRatio = window.devicePixelRatio || 1;
                        windowWidth = window.innerWidth * pxRatio;

                        temp = srcset.split(',').map(function (el) {
                            var ret = {};

                            el.trim().split(/\s+/).forEach(function (el, i) {
                                var value = parseInt(el.substring(0, el.length - 1), 10);

                                if (i === 0) {
                                    return (ret.url = el);
                                }

                                if (value) {
                                    ret.value = value;
                                    ret.postfix = el[el.length - 1];
                                }

                            });

                            return ret;
                        });

                        // Sort by value
                        temp.sort(function (a, b) {
                            return a.value - b.value;
                        });

                        // Ok, now we have an array of all srcset values
                        for (var j = 0; j < temp.length; j++) {
                            var el = temp[j];

                            if ((el.postfix === 'w' && el.value >= windowWidth) || (el.postfix === 'x' && el.value >= pxRatio)) {
                                found = el;
                                break;
                            }
                        }

                        // If not found, take the last one
                        if (!found && temp.length) {
                            found = temp[temp.length - 1];
                        }

                        if (found) {
                            slide.src = found.url;

                            // If we have default width/height values, we can calculate height for matching source
                            if (slide.width && slide.height && found.postfix == 'w') {
                                slide.height = (slide.width / slide.height) * found.value;
                                slide.width = found.value;
                            }
                        }
                    }

                    // This will be wrapper containing both ghost and actual image
                    slide.$content = $('<div class="fancybox-image-wrap"></div>')
                        .addClass('fancybox-is-hidden')
                        .appendTo(slide.$slide);


                    // If we have a thumbnail, we can display it while actual image is loading
                    // Users will not stare at black screen and actual image will appear gradually
                    if (slide.opts.preload !== false && slide.opts.width && slide.opts.height && (slide.opts.thumb || slide.opts.$thumb)) {

                        slide.width = slide.opts.width;
                        slide.height = slide.opts.height;

                        slide.$ghost = $('<img />')
                            .one('error', function () {

                                $(this).remove();

                                slide.$ghost = null;

                                self.setBigImage(slide);

                            })
                            .one('load', function () {

                                self.afterLoad(slide);

                                self.setBigImage(slide);

                            })
                            .addClass('fancybox-image')
                            .appendTo(slide.$content)
                            .attr('src', slide.opts.thumb || slide.opts.$thumb.attr('src'));

                    } else {

                        self.setBigImage(slide);

                    }

                },


                // Create full-size image
                // ======================

                setBigImage: function (slide) {
                    var self = this;
                    var $img = $('<img />');

                    slide.$image = $img
                        .one('error', function () {

                            self.setError(slide);

                        })
                        .one('load', function () {

                            // Clear timeout that checks if loading icon needs to be displayed
                            clearTimeout(slide.timouts);

                            slide.timouts = null;

                            if (self.isClosing) {
                                return;
                            }

                            slide.width = this.naturalWidth;
                            slide.height = this.naturalHeight;

                            if (slide.opts.image.srcset) {
                                $img.attr('sizes', '100vw').attr('srcset', slide.opts.image.srcset);
                            }

                            self.hideLoading(slide);

                            if (slide.$ghost) {

                                slide.timouts = setTimeout(function () {
                                    slide.timouts = null;

                                    slide.$ghost.hide();

                                }, Math.min(300, Math.max(1000, slide.height / 1600)));

                            } else {
                                self.afterLoad(slide);
                            }

                        })
                        .addClass('fancybox-image')
                        .attr('src', slide.src)
                        .appendTo(slide.$content);

                    if (($img[0].complete || $img[0].readyState == "complete") && $img[0].naturalWidth && $img[0].naturalHeight) {
                        $img.trigger('load');

                    } else if ($img[0].error) {
                        $img.trigger('error');

                    } else {

                        slide.timouts = setTimeout(function () {
                            if (!$img[0].complete && !slide.hasError) {
                                self.showLoading(slide);
                            }

                        }, 100);

                    }

                },


                // Create iframe wrapper, iframe and bindings
                // ==========================================

                setIframe: function (slide) {
                    var self = this,
                        opts = slide.opts.iframe,
                        $slide = slide.$slide,
                        $iframe;

                    slide.$content = $('<div class="fancybox-content' + (opts.preload ? ' fancybox-is-hidden' : '') + '"></div>')
                        .css(opts.css)
                        .appendTo($slide);

                    $iframe = $(opts.tpl.replace(/\{rnd\}/g, new Date().getTime()))
                        .attr(opts.attr)
                        .appendTo(slide.$content);

                    if (opts.preload) {

                        self.showLoading(slide);

                        // Unfortunately, it is not always possible to determine if iframe is successfully loaded
                        // (due to browser security policy)

                        $iframe.on('load.fb error.fb', function (e) {
                            this.isReady = 1;

                            slide.$slide.trigger('refresh');

                            self.afterLoad(slide);
                        });

                        // Recalculate iframe content size
                        // ===============================

                        $slide.on('refresh.fb', function () {
                            var $wrap = slide.$content,
                                frameWidth = opts.css.width,
                                frameHeight = opts.css.height,
                                scrollWidth,
                                $contents,
                                $body;

                            if ($iframe[0].isReady !== 1) {
                                return;
                            }

                            // Check if content is accessible,
                            // it will fail if frame is not with the same origin

                            try {
                                $contents = $iframe.contents();
                                $body = $contents.find('body');

                            } catch (ignore) {
                            }

                            // Calculate dimensions for the wrapper
                            if ($body && $body.length) {

                                if (frameWidth === undefined) {
                                    scrollWidth = $iframe[0].contentWindow.document.documentElement.scrollWidth;

                                    frameWidth = Math.ceil($body.outerWidth(true) + ($wrap.width() - scrollWidth));
                                    frameWidth += $wrap.outerWidth() - $wrap.innerWidth();
                                }

                                if (frameHeight === undefined) {
                                    frameHeight = Math.ceil($body.outerHeight(true));
                                    frameHeight += $wrap.outerHeight() - $wrap.innerHeight();
                                }

                                // Resize wrapper to fit iframe content
                                if (frameWidth) {
                                    $wrap.width(frameWidth);
                                }

                                if (frameHeight) {
                                    $wrap.height(frameHeight);
                                }
                            }

                            $wrap.removeClass('fancybox-is-hidden');

                        });

                    } else {

                        this.afterLoad(slide);

                    }

                    $iframe.attr('src', slide.src);

                    if (slide.opts.smallBtn === true) {
                        slide.$content.prepend(self.translate(slide, slide.opts.btnTpl.smallBtn));
                    }

                    // Remove iframe if closing or changing gallery item
                    $slide.one('onReset', function () {

                        // This helps IE not to throw errors when closing
                        try {

                            $(this).find('iframe').hide().attr('src', '//about:blank');

                        } catch (ignore) {
                        }

                        $(this).empty();

                        slide.isLoaded = false;

                    });

                },


                // Wrap and append content to the slide
                // ======================================

                setContent: function (slide, content) {

                    var self = this;

                    if (self.isClosing) {
                        return;
                    }

                    self.hideLoading(slide);

                    slide.$slide.empty();

                    if (isQuery(content) && content.parent().length) {

                        // If content is a jQuery object, then it will be moved to the slide.
                        // The placeholder is created so we will know where to put it back.
                        // If user is navigating gallery fast, then the content might be already inside fancyBox
                        // =====================================================================================

                        // Make sure content is not already moved to fancyBox
                        content.parent('.fancybox-slide--inline').trigger('onReset');

                        // Create temporary element marking original place of the content
                        slide.$placeholder = $('<div></div>').hide().insertAfter(content);

                        // Make sure content is visible
                        content.css('display', 'inline-block');

                    } else if (!slide.hasError) {

                        // If content is just a plain text, try to convert it to html
                        if ($.type(content) === 'string') {
                            content = $('<div>').append($.trim(content)).contents();

                            // If we have text node, then add wrapping element to make vertical alignment work
                            if (content[0].nodeType === 3) {
                                content = $('<div>').html(content);
                            }
                        }

                        // If "filter" option is provided, then filter content
                        if (slide.opts.filter) {
                            content = $('<div>').html(content).find(slide.opts.filter);
                        }

                    }

                    slide.$slide.one('onReset', function () {

                        // Put content back
                        if (slide.$placeholder) {
                            slide.$placeholder.after(content.hide()).remove();

                            slide.$placeholder = null;
                        }

                        // Remove custom close button
                        if (slide.$smallBtn) {
                            slide.$smallBtn.remove();

                            slide.$smallBtn = null;
                        }

                        // Remove content and mark slide as not loaded
                        if (!slide.hasError) {
                            $(this).empty();

                            slide.isLoaded = false;
                        }

                    });

                    slide.$content = $(content).appendTo(slide.$slide);

                    this.afterLoad(slide);
                },

                // Display error message
                // =====================

                setError: function (slide) {

                    slide.hasError = true;

                    slide.$slide.removeClass('fancybox-slide--' + slide.type);

                    this.setContent(slide, this.translate(slide, slide.opts.errorTpl));

                },


                // Show loading icon inside the slide
                // ==================================

                showLoading: function (slide) {

                    var self = this;

                    slide = slide || self.current;

                    if (slide && !slide.$spinner) {
                        slide.$spinner = $(self.opts.spinnerTpl).appendTo(slide.$slide);
                    }

                },

                // Remove loading icon from the slide
                // ==================================

                hideLoading: function (slide) {

                    var self = this;

                    slide = slide || self.current;

                    if (slide && slide.$spinner) {
                        slide.$spinner.remove();

                        delete slide.$spinner;
                    }

                },


                // Adjustments after slide content has been loaded
                // ===============================================

                afterLoad: function (slide) {

                    var self = this;

                    if (self.isClosing) {
                        return;
                    }

                    slide.isLoading = false;
                    slide.isLoaded = true;

                    self.trigger('afterLoad', slide);

                    self.hideLoading(slide);

                    if (slide.opts.smallBtn && !slide.$smallBtn) {
                        slide.$smallBtn = $(self.translate(slide, slide.opts.btnTpl.smallBtn)).appendTo(slide.$content.filter('div,form').first());
                    }

                    if (slide.opts.protect && slide.$content && !slide.hasError) {

                        // Disable right click
                        slide.$content.on('contextmenu.fb', function (e) {
                            if (e.button == 2) {
                                e.preventDefault();
                            }

                            return true;
                        });

                        // Add fake element on top of the image
                        // This makes a bit harder for user to select image
                        if (slide.type === 'image') {
                            $('<div class="fancybox-spaceball"></div>').appendTo(slide.$content);
                        }

                    }

                    self.revealContent(slide);

                },


                // Make content visible
                // This method is called right after content has been loaded or
                // user navigates gallery and transition should start
                // ============================================================

                revealContent: function (slide) {

                    var self = this;
                    var $slide = slide.$slide;

                    var effect, effectClassName, duration, opacity, end, start = false;

                    effect = slide.opts[self.firstRun ? 'animationEffect' : 'transitionEffect'];
                    duration = slide.opts[self.firstRun ? 'animationDuration' : 'transitionDuration'];

                    duration = parseInt(slide.forcedDuration === undefined ? duration : slide.forcedDuration, 10);

                    if (slide.isMoved || slide.pos !== self.currPos || !duration) {
                        effect = false;
                    }

                    // Check if can zoom
                    if (effect === 'zoom' && !(slide.pos === self.currPos && duration && slide.type === 'image' && !slide.hasError && (start = self.getThumbPos(slide)))) {
                        effect = 'fade';
                    }

                    // Zoom animation
                    // ==============

                    if (effect === 'zoom') {
                        end = self.getFitPos(slide);

                        end.scaleX = end.width / start.width;
                        end.scaleY = end.height / start.height;

                        delete end.width;
                        delete end.height;

                        // Check if we need to animate opacity
                        opacity = slide.opts.zoomOpacity;

                        if (opacity == 'auto') {
                            opacity = Math.abs(slide.width / slide.height - start.width / start.height) > 0.1;
                        }

                        if (opacity) {
                            start.opacity = 0.1;
                            end.opacity = 1;
                        }

                        // Draw image at start position
                        $.fancybox.setTranslate(slide.$content.removeClass('fancybox-is-hidden'), start);

                        forceRedraw(slide.$content);

                        // Start animation
                        $.fancybox.animate(slide.$content, end, duration, function () {
                            self.complete();
                        });

                        return;
                    }

                    self.updateSlide(slide);


                    // Simply show content
                    // ===================

                    if (!effect) {
                        forceRedraw($slide);

                        slide.$content.removeClass('fancybox-is-hidden');

                        if (slide.pos === self.currPos) {
                            self.complete();
                        }

                        return;
                    }

                    $.fancybox.stop($slide);

                    effectClassName = 'fancybox-animated fancybox-slide--' + (slide.pos >= self.prevPos ? 'next' : 'previous') + ' fancybox-fx-' + effect;

                    $slide.removeAttr('style').removeClass('fancybox-slide--current fancybox-slide--next fancybox-slide--previous').addClass(effectClassName);

                    slide.$content.removeClass('fancybox-is-hidden');

                    //Force reflow for CSS3 transitions
                    forceRedraw($slide);

                    $.fancybox.animate($slide, 'fancybox-slide--current', duration, function (e) {
                        $slide.removeClass(effectClassName).removeAttr('style');

                        if (slide.pos === self.currPos) {
                            self.complete();
                        }

                    }, true);

                },


                // Check if we can and have to zoom from thumbnail
                //================================================

                getThumbPos: function (slide) {

                    var self = this;
                    var rez = false;

                    // Check if element is inside the viewport by at least 1 pixel
                    var isElementVisible = function ($el) {
                        var element = $el[0];

                        var elementRect = element.getBoundingClientRect();
                        var parentRects = [];

                        var visibleInAllParents;

                        while (element.parentElement !== null) {
                            if ($(element.parentElement).css('overflow') === 'hidden' || $(element.parentElement).css('overflow') === 'auto') {
                                parentRects.push(element.parentElement.getBoundingClientRect());
                            }

                            element = element.parentElement;
                        }

                        visibleInAllParents = parentRects.every(function (parentRect) {
                            var visiblePixelX = Math.min(elementRect.right, parentRect.right) - Math.max(elementRect.left, parentRect.left);
                            var visiblePixelY = Math.min(elementRect.bottom, parentRect.bottom) - Math.max(elementRect.top, parentRect.top);

                            return visiblePixelX > 0 && visiblePixelY > 0;
                        });

                        return visibleInAllParents &&
                            elementRect.bottom > 0 && elementRect.right > 0 &&
                            elementRect.left < $(window).width() && elementRect.top < $(window).height();
                    };

                    var $thumb = slide.opts.$thumb;
                    var thumbPos = $thumb ? $thumb.offset() : 0;
                    var slidePos;

                    if (thumbPos && $thumb[0].ownerDocument === document && isElementVisible($thumb)) {
                        slidePos = self.$refs.stage.offset();

                        rez = {
                            top: thumbPos.top - slidePos.top + parseFloat($thumb.css("border-top-width") || 0),
                            left: thumbPos.left - slidePos.left + parseFloat($thumb.css("border-left-width") || 0),
                            width: $thumb.width(),
                            height: $thumb.height(),
                            scaleX: 1,
                            scaleY: 1
                        };
                    }

                    return rez;
                },


                // Final adjustments after current gallery item is moved to position
                // and it`s content is loaded
                // ==================================================================

                complete: function () {

                    var self = this;

                    var current = self.current;
                    var slides = {};

                    if (current.isMoved || !current.isLoaded || current.isComplete) {
                        return;
                    }

                    current.isComplete = true;

                    current.$slide.siblings().trigger('onReset');

                    // Trigger any CSS3 transiton inside the slide
                    forceRedraw(current.$slide);

                    current.$slide.addClass('fancybox-slide--complete');

                    // Remove unnecessary slides
                    $.each(self.slides, function (key, slide) {
                        if (slide.pos >= self.currPos - 1 && slide.pos <= self.currPos + 1) {
                            slides[slide.pos] = slide;

                        } else if (slide) {

                            $.fancybox.stop(slide.$slide);

                            slide.$slide.off().remove();
                        }
                    });

                    self.slides = slides;

                    self.updateCursor();

                    self.trigger('afterShow');

                    // Try to focus on the first focusable element
                    if ($(document.activeElement).is('[disabled]') || (current.opts.autoFocus && !(current.type == 'image' || current.type === 'iframe'))) {
                        self.focus();
                    }

                },


                // Preload next and previous slides
                // ================================

                preload: function () {
                    var self = this;
                    var next, prev;

                    if (self.group.length < 2) {
                        return;
                    }

                    next = self.slides[self.currPos + 1];
                    prev = self.slides[self.currPos - 1];

                    if (next && next.type === 'image') {
                        self.loadSlide(next);
                    }

                    if (prev && prev.type === 'image') {
                        self.loadSlide(prev);
                    }

                },


                // Try to find and focus on the first focusable element
                // ====================================================

                focus: function () {
                    var current = this.current;
                    var $el;

                    if (this.isClosing) {
                        return;
                    }

                    if (current && current.isComplete) {

                        // Look for first input with autofocus attribute
                        $el = current.$slide.find('input[autofocus]:enabled:visible:first');

                        if (!$el.length) {
                            $el = current.$slide.find('button,:input,[tabindex],a').filter(':enabled:visible:first');
                        }
                    }

                    $el = $el && $el.length ? $el : this.$refs.container;

                    $el.focus();
                },


                // Activates current instance - brings container to the front and enables keyboard,
                // notifies other instances about deactivating
                // =================================================================================

                activate: function () {
                    var self = this;

                    // Deactivate all instances
                    $('.fancybox-container').each(function () {
                        var instance = $(this).data('FancyBox');

                        // Skip self and closing instances
                        if (instance && instance.id !== self.id && !instance.isClosing) {
                            instance.trigger('onDeactivate');

                            instance.removeEvents();

                            instance.isVisible = false;
                        }

                    });

                    self.isVisible = true;

                    if (self.current || self.isIdle) {
                        self.update();

                        self.updateControls();
                    }

                    self.trigger('onActivate');

                    self.addEvents();
                },


                // Start closing procedure
                // This will start "zoom-out" animation if needed and clean everything up afterwards
                // =================================================================================

                close: function (e, d) {

                    var self = this;
                    var current = self.current;

                    var effect, duration;
                    var $what, opacity, start, end;

                    var done = function () {
                        self.cleanUp(e);
                    };

                    if (self.isClosing) {
                        return false;
                    }

                    self.isClosing = true;

                    // If beforeClose callback prevents closing, make sure content is centered
                    if (self.trigger('beforeClose', e) === false) {
                        self.isClosing = false;

                        requestAFrame(function () {
                            self.update();
                        });

                        return false;
                    }

                    // Remove all events
                    // If there are multiple instances, they will be set again by "activate" method
                    self.removeEvents();

                    if (current.timouts) {
                        clearTimeout(current.timouts);
                    }

                    $what = current.$content;
                    effect = current.opts.animationEffect;
                    duration = $.isNumeric(d) ? d : (effect ? current.opts.animationDuration : 0);

                    // Remove other slides
                    current.$slide.off(transitionEnd).removeClass('fancybox-slide--complete fancybox-slide--next fancybox-slide--previous fancybox-animated');

                    current.$slide.siblings().trigger('onReset').remove();

                    // Trigger animations
                    if (duration) {
                        self.$refs.container.removeClass('fancybox-is-open').addClass('fancybox-is-closing');
                    }

                    // Clean up
                    self.hideLoading(current);

                    self.hideControls();

                    self.updateCursor();

                    // Check if possible to zoom-out
                    if (effect === 'zoom' && !(e !== true && $what && duration && current.type === 'image' && !current.hasError && (end = self.getThumbPos(current)))) {
                        effect = 'fade';
                    }

                    if (effect === 'zoom') {
                        $.fancybox.stop($what);

                        start = $.fancybox.getTranslate($what);

                        start.width = start.width * start.scaleX;
                        start.height = start.height * start.scaleY;

                        // Check if we need to animate opacity
                        opacity = current.opts.zoomOpacity;

                        if (opacity == 'auto') {
                            opacity = Math.abs(current.width / current.height - end.width / end.height) > 0.1;
                        }

                        if (opacity) {
                            end.opacity = 0;
                        }

                        start.scaleX = start.width / end.width;
                        start.scaleY = start.height / end.height;

                        start.width = end.width;
                        start.height = end.height;

                        $.fancybox.setTranslate(current.$content, start);

                        forceRedraw(current.$content);

                        $.fancybox.animate(current.$content, end, duration, done);

                        return true;
                    }

                    if (effect && duration) {

                        // If skip animation
                        if (e === true) {
                            setTimeout(done, duration);

                        } else {
                            $.fancybox.animate(current.$slide.removeClass('fancybox-slide--current'), 'fancybox-animated fancybox-slide--previous fancybox-fx-' + effect, duration, done);
                        }

                    } else {
                        done();
                    }

                    return true;
                },


                // Final adjustments after removing the instance
                // =============================================

                cleanUp: function (e) {
                    var self = this,
                        $body = $('body'),
                        instance,
                        offset;

                    self.current.$slide.trigger('onReset');

                    self.$refs.container.empty().remove();

                    self.trigger('afterClose', e);

                    // Place back focus
                    if (self.$lastFocus && !!self.current.opts.backFocus) {
                        self.$lastFocus.focus();
                    }

                    self.current = null;

                    // Check if there are other instances
                    instance = $.fancybox.getInstance();

                    if (instance) {
                        instance.activate();

                    } else {

                        $W.scrollTop(self.scrollTop).scrollLeft(self.scrollLeft);

                        $body.removeClass('fancybox-active compensate-for-scrollbar');

                        if ($body.hasClass('fancybox-iosfix')) {
                            offset = parseInt(document.body.style.top, 10);

                            $body.removeClass('fancybox-iosfix').css('top', '').scrollTop(offset * -1);
                        }

                        $('#fancybox-style-noscroll').remove();

                    }

                },


                // Call callback and trigger an event
                // ==================================

                trigger: function (name, slide) {
                    var args = Array.prototype.slice.call(arguments, 1),
                        self = this,
                        obj = slide && slide.opts ? slide : self.current,
                        rez;

                    if (obj) {
                        args.unshift(obj);

                    } else {
                        obj = self;
                    }

                    args.unshift(self);

                    if ($.isFunction(obj.opts[name])) {
                        rez = obj.opts[name].apply(obj, args);
                    }

                    if (rez === false) {
                        return rez;
                    }

                    if (name === 'afterClose' || !self.$refs) {
                        $D.trigger(name + '.fb', args);

                    } else {
                        self.$refs.container.trigger(name + '.fb', args);
                    }

                },


                // Update infobar values, navigation button states and reveal caption
                // ==================================================================

                updateControls: function (force) {

                    var self = this;

                    var current = self.current,
                        index = current.index,
                        caption = current.opts.caption,
                        $container = self.$refs.container,
                        $caption = self.$refs.caption;

                    // Recalculate content dimensions
                    current.$slide.trigger('refresh');

                    self.$caption = caption && caption.length ? $caption.html(caption) : null;

                    if (!self.isHiddenControls && !self.isIdle) {
                        self.showControls();
                    }

                    // Update info and navigation elements
                    $container.find('[data-fancybox-count]').html(self.group.length);
                    $container.find('[data-fancybox-index]').html(index + 1);

                    $container.find('[data-fancybox-prev]').prop('disabled', (!current.opts.loop && index <= 0));
                    $container.find('[data-fancybox-next]').prop('disabled', (!current.opts.loop && index >= self.group.length - 1));

                    if (current.type === 'image') {

                        // Update download button source
                        $container.find('[data-fancybox-download]').attr('href', current.opts.image.src || current.src).show();

                    } else {
                        $container.find('[data-fancybox-download],[data-fancybox-zoom]').hide();
                    }
                },

                // Hide toolbar and caption
                // ========================

                hideControls: function () {

                    this.isHiddenControls = true;

                    this.$refs.container.removeClass('fancybox-show-infobar fancybox-show-toolbar fancybox-show-caption fancybox-show-nav');

                },

                showControls: function () {
                    var self = this;
                    var opts = self.current ? self.current.opts : self.opts;
                    var $container = self.$refs.container;

                    self.isHiddenControls = false;
                    self.idleSecondsCounter = 0;

                    $container
                        .toggleClass('fancybox-show-toolbar', !!(opts.toolbar && opts.buttons))
                        .toggleClass('fancybox-show-infobar', !!(opts.infobar && self.group.length > 1))
                        .toggleClass('fancybox-show-nav', !!(opts.arrows && self.group.length > 1))
                        .toggleClass('fancybox-is-modal', !!opts.modal);

                    if (self.$caption) {
                        $container.addClass('fancybox-show-caption ');

                    } else {
                        $container.removeClass('fancybox-show-caption');
                    }

                },


                // Toggle toolbar and caption
                // ==========================

                toggleControls: function () {
                    if (this.isHiddenControls) {
                        this.showControls();

                    } else {
                        this.hideControls();
                    }

                },


            });


            $.fancybox = {

                version: "3.2.5",
                defaults: defaults,


                // Get current instance and execute a command.
                //
                // Examples of usage:
                //
                //   $instance = $.fancybox.getInstance();
                //   $.fancybox.getInstance().jumpTo( 1 );
                //   $.fancybox.getInstance( 'jumpTo', 1 );
                //   $.fancybox.getInstance( function() {
                //       console.info( this.currIndex );
                //   });
                // ======================================================

                getInstance: function (command) {
                    var instance = $('.fancybox-container:not(".fancybox-is-closing"):last').data('FancyBox');
                    var args = Array.prototype.slice.call(arguments, 1);

                    if (instance instanceof FancyBox) {

                        if ($.type(command) === 'string') {
                            instance[command].apply(instance, args);

                        } else if ($.type(command) === 'function') {
                            command.apply(instance, args);
                        }

                        return instance;
                    }

                    return false;

                },


                // Create new instance
                // ===================

                open: function (items, opts, index) {
                    return new FancyBox(items, opts, index);
                },


                // Close current or all instances
                // ==============================

                close: function (all) {
                    var instance = this.getInstance();

                    if (instance) {
                        instance.close();

                        // Try to find and close next instance

                        if (all === true) {
                            this.close();
                        }
                    }

                },

                // Close instances and unbind all events
                // ==============================

                destroy: function () {

                    this.close(true);

                    $D.off('click.fb-start');

                },


                // Try to detect mobile devices
                // ============================

                isMobile: document.createTouch !== undefined && /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent),


                // Detect if 'translate3d' support is available
                // ============================================

                use3d: (function () {
                    var div = document.createElement('div');

                    return window.getComputedStyle && window.getComputedStyle(div).getPropertyValue('transform') && !(document.documentMode && document.documentMode < 11);
                }()),

                // Helper function to get current visual state of an element
                // returns array[ top, left, horizontal-scale, vertical-scale, opacity ]
                // =====================================================================

                getTranslate: function ($el) {
                    var matrix;

                    if (!$el || !$el.length) {
                        return false;
                    }

                    matrix = $el.eq(0).css('transform');

                    if (matrix && matrix.indexOf('matrix') !== -1) {
                        matrix = matrix.split('(')[1];
                        matrix = matrix.split(')')[0];
                        matrix = matrix.split(',');
                    } else {
                        matrix = [];
                    }

                    if (matrix.length) {

                        // If IE
                        if (matrix.length > 10) {
                            matrix = [matrix[13], matrix[12], matrix[0], matrix[5]];

                        } else {
                            matrix = [matrix[5], matrix[4], matrix[0], matrix[3]];
                        }

                        matrix = matrix.map(parseFloat);

                    } else {
                        matrix = [0, 0, 1, 1];

                        var transRegex = /\.*translate\((.*)px,(.*)px\)/i;
                        var transRez = transRegex.exec($el.eq(0).attr('style'));

                        if (transRez) {
                            matrix[0] = parseFloat(transRez[2]);
                            matrix[1] = parseFloat(transRez[1]);
                        }
                    }

                    return {
                        top: matrix[0],
                        left: matrix[1],
                        scaleX: matrix[2],
                        scaleY: matrix[3],
                        opacity: parseFloat($el.css('opacity')),
                        width: $el.width(),
                        height: $el.height()
                    };

                },


                // Shortcut for setting "translate3d" properties for element
                // Can set be used to set opacity, too
                // ========================================================

                setTranslate: function ($el, props) {
                    var str = '';
                    var css = {};

                    if (!$el || !props) {
                        return;
                    }

                    if (props.left !== undefined || props.top !== undefined) {
                        str = (props.left === undefined ? $el.position().left : props.left) + 'px, ' + (props.top === undefined ? $el.position().top : props.top) + 'px';

                        if (this.use3d) {
                            str = 'translate3d(' + str + ', 0px)';

                        } else {
                            str = 'translate(' + str + ')';
                        }
                    }

                    if (props.scaleX !== undefined && props.scaleY !== undefined) {
                        str = (str.length ? str + ' ' : '') + 'scale(' + props.scaleX + ', ' + props.scaleY + ')';
                    }

                    if (str.length) {
                        css.transform = str;
                    }

                    if (props.opacity !== undefined) {
                        css.opacity = props.opacity;
                    }

                    if (props.width !== undefined) {
                        css.width = props.width;
                    }

                    if (props.height !== undefined) {
                        css.height = props.height;
                    }

                    return $el.css(css);
                },


                // Simple CSS transition handler
                // =============================

                animate: function ($el, to, duration, callback, leaveAnimationName) {
                    if ($.isFunction(duration)) {
                        callback = duration;
                        duration = null;
                    }

                    if (!$.isPlainObject(to)) {
                        $el.removeAttr('style');
                    }

                    $el.on(transitionEnd, function (e) {

                        // Skip events from child elements and z-index change
                        if (e && e.originalEvent && (!$el.is(e.originalEvent.target) || e.originalEvent.propertyName == 'z-index')) {
                            return;
                        }

                        $.fancybox.stop($el);

                        if ($.isPlainObject(to)) {

                            if (to.scaleX !== undefined && to.scaleY !== undefined) {
                                $el.css('transition-duration', '');

                                to.width = Math.round($el.width() * to.scaleX);
                                to.height = Math.round($el.height() * to.scaleY);

                                to.scaleX = 1;
                                to.scaleY = 1;

                                $.fancybox.setTranslate($el, to);
                            }

                        } else if (leaveAnimationName !== true) {
                            $el.removeClass(to);
                        }

                        if ($.isFunction(callback)) {
                            callback(e);
                        }

                    });

                    if ($.isNumeric(duration)) {
                        $el.css('transition-duration', duration + 'ms');
                    }

                    if ($.isPlainObject(to)) {
                        $.fancybox.setTranslate($el, to);

                    } else {
                        $el.addClass(to);
                    }

                    if (to.scaleX && $el.hasClass('fancybox-image-wrap')) {
                        $el.parent().addClass('fancybox-is-scaling');
                    }

                    // Make sure that `transitionend` callback gets fired
                    $el.data("timer", setTimeout(function () {
                        $el.trigger('transitionend');
                    }, duration + 16));

                },

                stop: function ($el) {
                    clearTimeout($el.data("timer"));

                    $el.off('transitionend').css('transition-duration', '');

                    if ($el.hasClass('fancybox-image-wrap')) {
                        $el.parent().removeClass('fancybox-is-scaling');
                    }
                }

            };


            // Default click handler for "fancyboxed" links
            // ============================================

            function _run(e) {
                var $target = $(e.currentTarget),
                    opts = e.data ? e.data.options : {},
                    value = $target.attr('data-fancybox') || '',
                    index = 0,
                    items = [];

                // Avoid opening multiple times
                if (e.isDefaultPrevented()) {
                    return;
                }

                e.preventDefault();

                // Get all related items and find index for clicked one
                if (value) {
                    items = opts.selector ? $(opts.selector) : (e.data ? e.data.items : []);
                    items = items.length ? items.filter('[data-fancybox="' + value + '"]') : $('[data-fancybox="' + value + '"]');

                    index = items.index($target);

                    // Sometimes current item can not be found
                    // (for example, when slider clones items)
                    if (index < 0) {
                        index = 0;
                    }

                } else {
                    items = [$target];
                }

                $.fancybox.open(items, opts, index);
            }


            // Create a jQuery plugin
            // ======================

            $.fn.fancybox = function (options) {
                var selector;

                options = options || {};
                selector = options.selector || false;

                if (selector) {

                    $('body').off('click.fb-start', selector).on('click.fb-start', selector, {
                        options: options
                    }, _run);

                } else {

                    this.off('click.fb-start').on('click.fb-start', {
                        items: this,
                        options: options
                    }, _run);

                }

                return this;
            };


            // Self initializing plugin
            // ========================

            $D.on('click.fb-start', '[data-fancybox]', _run);

        }(window, document, window.jQuery || jQuery));

// ==========================================================================
//
// Media
// Adds additional media type support
//
// ==========================================================================
        ;(function ($) {

            'use strict';

            // Formats matching url to final form

            var format = function (url, rez, params) {
                if (!url) {
                    return;
                }

                params = params || '';

                if ($.type(params) === "object") {
                    params = $.param(params, true);
                }

                $.each(rez, function (key, value) {
                    url = url.replace('$' + key, value || '');
                });

                if (params.length) {
                    url += (url.indexOf('?') > 0 ? '&' : '?') + params;
                }

                return url;
            };

            // Object containing properties for each media type

            var defaults = {
                youtube: {
                    matcher: /(youtube\.com|youtu\.be|youtube\-nocookie\.com)\/(watch\?(.*&)?v=|v\/|u\/|embed\/?)?(videoseries\?list=(.*)|[\w-]{11}|\?listType=(.*)&list=(.*))(.*)/i,
                    params: {
                        autoplay: 1,
                        autohide: 1,
                        fs: 1,
                        rel: 0,
                        hd: 1,
                        wmode: 'transparent',
                        enablejsapi: 1,
                        html5: 1
                    },
                    paramPlace: 8,
                    type: 'iframe',
                    url: '//www.youtube.com/embed/$4',
                    thumb: '//img.youtube.com/vi/$4/hqdefault.jpg'
                },

                vimeo: {
                    matcher: /^.+vimeo.com\/(.*\/)?([\d]+)(.*)?/,
                    params: {
                        autoplay: 1,
                        hd: 1,
                        show_title: 1,
                        show_byline: 1,
                        show_portrait: 0,
                        fullscreen: 1,
                        api: 1
                    },
                    paramPlace: 3,
                    type: 'iframe',
                    url: '//player.vimeo.com/video/$2'
                },

                metacafe: {
                    matcher: /metacafe.com\/watch\/(\d+)\/(.*)?/,
                    type: 'iframe',
                    url: '//www.metacafe.com/embed/$1/?ap=1'
                },

                dailymotion: {
                    matcher: /dailymotion.com\/video\/(.*)\/?(.*)/,
                    params: {
                        additionalInfos: 0,
                        autoStart: 1
                    },
                    type: 'iframe',
                    url: '//www.dailymotion.com/embed/video/$1'
                },

                vine: {
                    matcher: /vine.co\/v\/([a-zA-Z0-9\?\=\-]+)/,
                    type: 'iframe',
                    url: '//vine.co/v/$1/embed/simple'
                },

                instagram: {
                    matcher: /(instagr\.am|instagram\.com)\/p\/([a-zA-Z0-9_\-]+)\/?/i,
                    type: 'image',
                    url: '//$1/p/$2/media/?size=l'
                },

                // Examples:
                // http://maps.google.com/?ll=48.857995,2.294297&spn=0.007666,0.021136&t=m&z=16
                // https://www.google.com/maps/@37.7852006,-122.4146355,14.65z
                // https://www.google.com/maps/place/Googleplex/@37.4220041,-122.0833494,17z/data=!4m5!3m4!1s0x0:0x6c296c66619367e0!8m2!3d37.4219998!4d-122.0840572
                gmap_place: {
                    matcher: /(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(((maps\/(place\/(.*)\/)?\@(.*),(\d+.?\d+?)z))|(\?ll=))(.*)?/i,
                    type: 'iframe',
                    url: function (rez) {
                        return '//maps.google.' + rez[2] + '/?ll=' + (rez[9] ? rez[9] + '&z=' + Math.floor(rez[10]) + (rez[12] ? rez[12].replace(/^\//, "&") : '') : rez[12]) + '&output=' + (rez[12] && rez[12].indexOf('layer=c') > 0 ? 'svembed' : 'embed');
                    }
                },

                // Examples:
                // https://www.google.com/maps/search/Empire+State+Building/
                // https://www.google.com/maps/search/?api=1&query=centurylink+field
                // https://www.google.com/maps/search/?api=1&query=47.5951518,-122.3316393
                gmap_search: {
                    matcher: /(maps\.)?google\.([a-z]{2,3}(\.[a-z]{2})?)\/(maps\/search\/)(.*)/i,
                    type: 'iframe',
                    url: function (rez) {
                        return '//maps.google.' + rez[2] + '/maps?q=' + rez[5].replace('query=', 'q=').replace('api=1', '') + '&output=embed';
                    }
                }
            };

            $(document).on('objectNeedsType.fb', function (e, instance, item) {

                var url = item.src || '',
                    type = false,
                    media,
                    thumb,
                    rez,
                    params,
                    urlParams,
                    paramObj,
                    provider;

                media = $.extend(true, {}, defaults, item.opts.media);

                // Look for any matching media type
                $.each(media, function (providerName, providerOpts) {
                    rez = url.match(providerOpts.matcher);

                    if (!rez) {
                        return;
                    }

                    type = providerOpts.type;
                    paramObj = {};

                    if (providerOpts.paramPlace && rez[providerOpts.paramPlace]) {
                        urlParams = rez[providerOpts.paramPlace];

                        if (urlParams[0] == '?') {
                            urlParams = urlParams.substring(1);
                        }

                        urlParams = urlParams.split('&');

                        for (var m = 0; m < urlParams.length; ++m) {
                            var p = urlParams[m].split('=', 2);

                            if (p.length == 2) {
                                paramObj[p[0]] = decodeURIComponent(p[1].replace(/\+/g, " "));
                            }
                        }
                    }

                    params = $.extend(true, {}, providerOpts.params, item.opts[providerName], paramObj);

                    url = $.type(providerOpts.url) === "function" ? providerOpts.url.call(this, rez, params, item) : format(providerOpts.url, rez, params);
                    thumb = $.type(providerOpts.thumb) === "function" ? providerOpts.thumb.call(this, rez, params, item) : format(providerOpts.thumb, rez);

                    if (providerName === 'vimeo') {
                        url = url.replace('&%23', '#');
                    }

                    return false;
                });

                // If it is found, then change content type and update the url

                if (type) {
                    item.src = url;
                    item.type = type;

                    if (!item.opts.thumb && !(item.opts.$thumb && item.opts.$thumb.length)) {
                        item.opts.thumb = thumb;
                    }

                    if (type === 'iframe') {
                        $.extend(true, item.opts, {
                            iframe: {
                                preload: false,
                                attr: {
                                    scrolling: "no"
                                }
                            }
                        });

                        item.contentProvider = provider;

                        item.opts.slideClass += ' fancybox-slide--' + (provider == 'gmap_place' || provider == 'gmap_search' ? 'map' : 'video');
                    }

                } else if (url) {
                    item.type = item.opts.defaultType;
                }

            });

        }(window.jQuery || jQuery));

// ==========================================================================
//
// Guestures
// Adds touch guestures, handles click and tap events
//
// ==========================================================================
        ;(function (window, document, $) {
            'use strict';

            var requestAFrame = (function () {
                return window.requestAnimationFrame ||
                    window.webkitRequestAnimationFrame ||
                    window.mozRequestAnimationFrame ||
                    window.oRequestAnimationFrame ||
                    // if all else fails, use setTimeout
                    function (callback) {
                        return window.setTimeout(callback, 1000 / 60);
                    };
            })();


            var cancelAFrame = (function () {
                return window.cancelAnimationFrame ||
                    window.webkitCancelAnimationFrame ||
                    window.mozCancelAnimationFrame ||
                    window.oCancelAnimationFrame ||
                    function (id) {
                        window.clearTimeout(id);
                    };
            })();


            var pointers = function (e) {
                var result = [];

                e = e.originalEvent || e || window.e;
                e = e.touches && e.touches.length ? e.touches : (e.changedTouches && e.changedTouches.length ? e.changedTouches : [e]);

                for (var key in e) {

                    if (e[key].pageX) {
                        result.push({x: e[key].pageX, y: e[key].pageY});

                    } else if (e[key].clientX) {
                        result.push({x: e[key].clientX, y: e[key].clientY});
                    }
                }

                return result;
            };

            var distance = function (point2, point1, what) {
                if (!point1 || !point2) {
                    return 0;
                }

                if (what === 'x') {
                    return point2.x - point1.x;

                } else if (what === 'y') {
                    return point2.y - point1.y;
                }

                return Math.sqrt(Math.pow(point2.x - point1.x, 2) + Math.pow(point2.y - point1.y, 2));
            };

            var isClickable = function ($el) {

                if ($el.is('a,area,button,[role="button"],input,label,select,summary,textarea') || $.isFunction($el.get(0).onclick) || $el.data('selectable')) {
                    return true;
                }

                // Check for attributes like data-fancybox-next or data-fancybox-close
                for (var i = 0, atts = $el[0].attributes, n = atts.length; i < n; i++) {
                    if (atts[i].nodeName.substr(0, 14) === 'data-fancybox-') {
                        return true;
                    }
                }

                return false;
            };

            var hasScrollbars = function (el) {
                var overflowY = window.getComputedStyle(el)['overflow-y'];
                var overflowX = window.getComputedStyle(el)['overflow-x'];

                var vertical = (overflowY === 'scroll' || overflowY === 'auto') && el.scrollHeight > el.clientHeight;
                var horizontal = (overflowX === 'scroll' || overflowX === 'auto') && el.scrollWidth > el.clientWidth;

                return vertical || horizontal;
            };

            var isScrollable = function ($el) {
                var rez = false;

                while (true) {
                    rez = hasScrollbars($el.get(0));

                    if (rez) {
                        break;
                    }

                    $el = $el.parent();

                    if (!$el.length || $el.hasClass('fancybox-stage') || $el.is('body')) {
                        break;
                    }
                }

                return rez;
            };


            var Guestures = function (instance) {
                var self = this;

                self.instance = instance;

                self.$bg = instance.$refs.bg;
                self.$stage = instance.$refs.stage;
                self.$container = instance.$refs.container;

                self.destroy();

                self.$container.on('touchstart.fb.touch mousedown.fb.touch', $.proxy(self, 'ontouchstart'));
            };

            Guestures.prototype.destroy = function () {
                this.$container.off('.fb.touch');
            };

            Guestures.prototype.ontouchstart = function (e) {
                var self = this;

                var $target = $(e.target);
                var instance = self.instance;
                var current = instance.current;
                var $content = current.$content;

                var isTouchDevice = (e.type == 'touchstart');

                // Do not respond to both events
                if (isTouchDevice) {
                    self.$container.off('mousedown.fb.touch');
                }

                // Ignore clicks while zooming or closing
                if (!current || self.instance.isAnimating || self.instance.isClosing) {
                    e.stopPropagation();
                    e.preventDefault();

                    return;
                }

                // Ignore right click
                if (e.originalEvent && e.originalEvent.button == 2) {
                    return;
                }

                // Ignore taping on links, buttons, input elements
                if (!$target.length || isClickable($target) || isClickable($target.parent())) {
                    return;
                }

                // Ignore clicks on the scrollbar
                if (e.originalEvent.clientX > $target[0].clientWidth + $target.offset().left) {
                    return;
                }

                self.startPoints = pointers(e);

                // Prevent zooming if already swiping
                if (!self.startPoints || (self.startPoints.length > 1 && instance.isSliding)) {
                    return;
                }

                self.$target = $target;
                self.$content = $content;
                self.canTap = true;
                self.opts = current.opts.touch;

                $(document).off('.fb.touch');

                $(document).on(isTouchDevice ? 'touchend.fb.touch touchcancel.fb.touch' : 'mouseup.fb.touch mouseleave.fb.touch', $.proxy(self, "ontouchend"));
                $(document).on(isTouchDevice ? 'touchmove.fb.touch' : 'mousemove.fb.touch', $.proxy(self, "ontouchmove"));

                if (!(self.opts || instance.canPan()) || !($target.is(self.$stage) || self.$stage.find($target).length)) {

                    // Prevent ghosting
                    if ($target.is('img')) {
                        e.preventDefault();
                    }

                    return;
                }

                e.stopPropagation();

                if (!($.fancybox.isMobile && (isScrollable(self.$target) || isScrollable(self.$target.parent())))) {
                    e.preventDefault();
                }

                self.canvasWidth = Math.round(current.$slide[0].clientWidth);
                self.canvasHeight = Math.round(current.$slide[0].clientHeight);

                self.startTime = new Date().getTime();
                self.distanceX = self.distanceY = self.distance = 0;

                self.isPanning = false;
                self.isSwiping = false;
                self.isZooming = false;

                self.sliderStartPos = self.sliderLastPos || {top: 0, left: 0};
                self.contentStartPos = $.fancybox.getTranslate(self.$content);
                self.contentLastPos = null;

                if (self.startPoints.length === 1 && !self.isZooming) {
                    self.canTap = !instance.isSliding;

                    if (current.type === 'image' && (self.contentStartPos.width > self.canvasWidth + 1 || self.contentStartPos.height > self.canvasHeight + 1)) {

                        $.fancybox.stop(self.$content);

                        self.$content.css('transition-duration', '0ms');

                        self.isPanning = true;

                    } else {

                        self.isSwiping = true;
                    }

                    self.$container.addClass('fancybox-controls--isGrabbing');
                }

                if (self.startPoints.length === 2 && !instance.isAnimating && !current.hasError && current.type === 'image' && (current.isLoaded || current.$ghost)) {
                    self.isZooming = true;

                    self.isSwiping = false;
                    self.isPanning = false;

                    $.fancybox.stop(self.$content);

                    self.$content.css('transition-duration', '0ms');

                    self.centerPointStartX = ((self.startPoints[0].x + self.startPoints[1].x) * 0.5) - $(window).scrollLeft();
                    self.centerPointStartY = ((self.startPoints[0].y + self.startPoints[1].y) * 0.5) - $(window).scrollTop();

                    self.percentageOfImageAtPinchPointX = (self.centerPointStartX - self.contentStartPos.left) / self.contentStartPos.width;
                    self.percentageOfImageAtPinchPointY = (self.centerPointStartY - self.contentStartPos.top) / self.contentStartPos.height;

                    self.startDistanceBetweenFingers = distance(self.startPoints[0], self.startPoints[1]);
                }

            };

            Guestures.prototype.ontouchmove = function (e) {

                var self = this;

                self.newPoints = pointers(e);

                if ($.fancybox.isMobile && (isScrollable(self.$target) || isScrollable(self.$target.parent()))) {
                    e.stopPropagation();

                    self.canTap = false;

                    return;
                }

                if (!(self.opts || self.instance.canPan()) || !self.newPoints || !self.newPoints.length) {
                    return;
                }

                self.distanceX = distance(self.newPoints[0], self.startPoints[0], 'x');
                self.distanceY = distance(self.newPoints[0], self.startPoints[0], 'y');

                self.distance = distance(self.newPoints[0], self.startPoints[0]);

                // Skip false ontouchmove events (Chrome)
                if (self.distance > 0) {

                    if (!(self.$target.is(self.$stage) || self.$stage.find(self.$target).length)) {
                        return;
                    }

                    e.stopPropagation();
                    e.preventDefault();

                    if (self.isSwiping) {
                        self.onSwipe();

                    } else if (self.isPanning) {
                        self.onPan();

                    } else if (self.isZooming) {
                        self.onZoom();
                    }

                }

            };

            Guestures.prototype.onSwipe = function () {

                var self = this;

                var swiping = self.isSwiping;
                var left = self.sliderStartPos.left || 0;
                var angle;

                if (swiping === true) {

                    if (Math.abs(self.distance) > 10) {

                        self.canTap = false;

                        if (self.instance.group.length < 2 && self.opts.vertical) {
                            self.isSwiping = 'y';

                        } else if (self.instance.isSliding || self.opts.vertical === false || (self.opts.vertical === 'auto' && $(window).width() > 800)) {
                            self.isSwiping = 'x';

                        } else {
                            angle = Math.abs(Math.atan2(self.distanceY, self.distanceX) * 180 / Math.PI);

                            self.isSwiping = (angle > 45 && angle < 135) ? 'y' : 'x';
                        }

                        self.instance.isSliding = self.isSwiping;

                        // Reset points to avoid jumping, because we dropped first swipes to calculate the angle
                        self.startPoints = self.newPoints;

                        $.each(self.instance.slides, function (index, slide) {
                            $.fancybox.stop(slide.$slide);

                            slide.$slide.css('transition-duration', '0ms');

                            slide.inTransition = false;

                            if (slide.pos === self.instance.current.pos) {
                                self.sliderStartPos.left = $.fancybox.getTranslate(slide.$slide).left;
                            }
                        });

                        //self.instance.current.isMoved = true;

                        // Stop slideshow
                        if (self.instance.SlideShow && self.instance.SlideShow.isActive) {
                            self.instance.SlideShow.stop();
                        }
                    }

                } else {

                    if (swiping == 'x') {

                        // Sticky edges
                        if (self.distanceX > 0 && (self.instance.group.length < 2 || (self.instance.current.index === 0 && !self.instance.current.opts.loop))) {
                            left = left + Math.pow(self.distanceX, 0.8);

                        } else if (self.distanceX < 0 && (self.instance.group.length < 2 || (self.instance.current.index === self.instance.group.length - 1 && !self.instance.current.opts.loop))) {
                            left = left - Math.pow(-self.distanceX, 0.8);

                        } else {
                            left = left + self.distanceX;
                        }

                    }

                    self.sliderLastPos = {
                        top: swiping == 'x' ? 0 : self.sliderStartPos.top + self.distanceY,
                        left: left
                    };

                    if (self.requestId) {
                        cancelAFrame(self.requestId);

                        self.requestId = null;
                    }

                    self.requestId = requestAFrame(function () {

                        if (self.sliderLastPos) {
                            $.each(self.instance.slides, function (index, slide) {
                                var pos = slide.pos - self.instance.currPos;

                                $.fancybox.setTranslate(slide.$slide, {
                                    top: self.sliderLastPos.top,
                                    left: self.sliderLastPos.left + (pos * self.canvasWidth) + (pos * slide.opts.gutter)
                                });
                            });

                            self.$container.addClass('fancybox-is-sliding');
                        }

                    });

                }

            };

            Guestures.prototype.onPan = function () {

                var self = this;

                var newOffsetX, newOffsetY, newPos;

                self.canTap = false;

                if (self.contentStartPos.width > self.canvasWidth) {
                    newOffsetX = self.contentStartPos.left + self.distanceX;

                } else {
                    newOffsetX = self.contentStartPos.left;
                }

                newOffsetY = self.contentStartPos.top + self.distanceY;

                newPos = self.limitMovement(newOffsetX, newOffsetY, self.contentStartPos.width, self.contentStartPos.height);

                newPos.scaleX = self.contentStartPos.scaleX;
                newPos.scaleY = self.contentStartPos.scaleY;

                self.contentLastPos = newPos;

                if (self.requestId) {
                    cancelAFrame(self.requestId);

                    self.requestId = null;
                }

                self.requestId = requestAFrame(function () {
                    $.fancybox.setTranslate(self.$content, self.contentLastPos);
                });
            };

            // Make panning sticky to the edges
            Guestures.prototype.limitMovement = function (newOffsetX, newOffsetY, newWidth, newHeight) {

                var self = this;

                var minTranslateX, minTranslateY, maxTranslateX, maxTranslateY;

                var canvasWidth = self.canvasWidth;
                var canvasHeight = self.canvasHeight;

                var currentOffsetX = self.contentStartPos.left;
                var currentOffsetY = self.contentStartPos.top;

                var distanceX = self.distanceX;
                var distanceY = self.distanceY;

                // Slow down proportionally to traveled distance

                minTranslateX = Math.max(0, canvasWidth * 0.5 - newWidth * 0.5);
                minTranslateY = Math.max(0, canvasHeight * 0.5 - newHeight * 0.5);

                maxTranslateX = Math.min(canvasWidth - newWidth, canvasWidth * 0.5 - newWidth * 0.5);
                maxTranslateY = Math.min(canvasHeight - newHeight, canvasHeight * 0.5 - newHeight * 0.5);

                if (newWidth > canvasWidth) {

                    //   ->
                    if (distanceX > 0 && newOffsetX > minTranslateX) {
                        newOffsetX = minTranslateX - 1 + Math.pow(-minTranslateX + currentOffsetX + distanceX, 0.8) || 0;
                    }

                    //    <-
                    if (distanceX < 0 && newOffsetX < maxTranslateX) {
                        newOffsetX = maxTranslateX + 1 - Math.pow(maxTranslateX - currentOffsetX - distanceX, 0.8) || 0;
                    }

                }

                if (newHeight > canvasHeight) {

                    //   \/
                    if (distanceY > 0 && newOffsetY > minTranslateY) {
                        newOffsetY = minTranslateY - 1 + Math.pow(-minTranslateY + currentOffsetY + distanceY, 0.8) || 0;
                    }

                    //   /\
                    if (distanceY < 0 && newOffsetY < maxTranslateY) {
                        newOffsetY = maxTranslateY + 1 - Math.pow(maxTranslateY - currentOffsetY - distanceY, 0.8) || 0;
                    }

                }

                return {
                    top: newOffsetY,
                    left: newOffsetX
                };

            };


            Guestures.prototype.limitPosition = function (newOffsetX, newOffsetY, newWidth, newHeight) {

                var self = this;

                var canvasWidth = self.canvasWidth;
                var canvasHeight = self.canvasHeight;

                if (newWidth > canvasWidth) {
                    newOffsetX = newOffsetX > 0 ? 0 : newOffsetX;
                    newOffsetX = newOffsetX < canvasWidth - newWidth ? canvasWidth - newWidth : newOffsetX;

                } else {

                    // Center horizontally
                    newOffsetX = Math.max(0, canvasWidth / 2 - newWidth / 2);

                }

                if (newHeight > canvasHeight) {
                    newOffsetY = newOffsetY > 0 ? 0 : newOffsetY;
                    newOffsetY = newOffsetY < canvasHeight - newHeight ? canvasHeight - newHeight : newOffsetY;

                } else {

                    // Center vertically
                    newOffsetY = Math.max(0, canvasHeight / 2 - newHeight / 2);

                }

                return {
                    top: newOffsetY,
                    left: newOffsetX
                };

            };

            Guestures.prototype.onZoom = function () {

                var self = this;

                // Calculate current distance between points to get pinch ratio and new width and height

                var currentWidth = self.contentStartPos.width;
                var currentHeight = self.contentStartPos.height;

                var currentOffsetX = self.contentStartPos.left;
                var currentOffsetY = self.contentStartPos.top;

                var endDistanceBetweenFingers = distance(self.newPoints[0], self.newPoints[1]);

                var pinchRatio = endDistanceBetweenFingers / self.startDistanceBetweenFingers;

                var newWidth = Math.floor(currentWidth * pinchRatio);
                var newHeight = Math.floor(currentHeight * pinchRatio);

                // This is the translation due to pinch-zooming
                var translateFromZoomingX = (currentWidth - newWidth) * self.percentageOfImageAtPinchPointX;
                var translateFromZoomingY = (currentHeight - newHeight) * self.percentageOfImageAtPinchPointY;

                //Point between the two touches

                var centerPointEndX = ((self.newPoints[0].x + self.newPoints[1].x) / 2) - $(window).scrollLeft();
                var centerPointEndY = ((self.newPoints[0].y + self.newPoints[1].y) / 2) - $(window).scrollTop();

                // And this is the translation due to translation of the centerpoint
                // between the two fingers

                var translateFromTranslatingX = centerPointEndX - self.centerPointStartX;
                var translateFromTranslatingY = centerPointEndY - self.centerPointStartY;

                // The new offset is the old/current one plus the total translation

                var newOffsetX = currentOffsetX + (translateFromZoomingX + translateFromTranslatingX);
                var newOffsetY = currentOffsetY + (translateFromZoomingY + translateFromTranslatingY);

                var newPos = {
                    top: newOffsetY,
                    left: newOffsetX,
                    scaleX: self.contentStartPos.scaleX * pinchRatio,
                    scaleY: self.contentStartPos.scaleY * pinchRatio
                };

                self.canTap = false;

                self.newWidth = newWidth;
                self.newHeight = newHeight;

                self.contentLastPos = newPos;

                if (self.requestId) {
                    cancelAFrame(self.requestId);

                    self.requestId = null;
                }

                self.requestId = requestAFrame(function () {
                    $.fancybox.setTranslate(self.$content, self.contentLastPos);
                });

            };

            Guestures.prototype.ontouchend = function (e) {

                var self = this;
                var dMs = Math.max((new Date().getTime()) - self.startTime, 1);

                var swiping = self.isSwiping;
                var panning = self.isPanning;
                var zooming = self.isZooming;

                self.endPoints = pointers(e);

                self.$container.removeClass('fancybox-controls--isGrabbing');

                $(document).off('.fb.touch');

                if (self.requestId) {
                    cancelAFrame(self.requestId);

                    self.requestId = null;
                }

                self.isSwiping = false;
                self.isPanning = false;
                self.isZooming = false;

                if (self.canTap) {
                    return self.onTap(e);
                }

                self.speed = 366;

                // Speed in px/ms
                self.velocityX = self.distanceX / dMs * 0.5;
                self.velocityY = self.distanceY / dMs * 0.5;

                self.speedX = Math.max(self.speed * 0.5, Math.min(self.speed * 1.5, (1 / Math.abs(self.velocityX)) * self.speed));

                if (panning) {
                    self.endPanning();

                } else if (zooming) {
                    self.endZooming();

                } else {
                    self.endSwiping(swiping);
                }

                return;
            };

            Guestures.prototype.endSwiping = function (swiping) {

                var self = this;
                var ret = false;

                self.instance.isSliding = false;
                self.sliderLastPos = null;

                // Close if swiped vertically / navigate if horizontally
                if (swiping == 'y' && Math.abs(self.distanceY) > 50) {

                    // Continue vertical movement
                    $.fancybox.animate(self.instance.current.$slide, {
                        top: self.sliderStartPos.top + self.distanceY + (self.velocityY * 150),
                        opacity: 0
                    }, 150);

                    ret = self.instance.close(true, 300);

                } else if (swiping == 'x' && self.distanceX > 50 && self.instance.group.length > 1) {
                    ret = self.instance.previous(self.speedX);

                } else if (swiping == 'x' && self.distanceX < -50 && self.instance.group.length > 1) {
                    ret = self.instance.next(self.speedX);
                }

                if (ret === false && (swiping == 'x' || swiping == 'y')) {
                    self.instance.jumpTo(self.instance.current.index, 150);
                }

                self.$container.removeClass('fancybox-is-sliding');

            };

            // Limit panning from edges
            // ========================

            Guestures.prototype.endPanning = function () {

                var self = this;
                var newOffsetX, newOffsetY, newPos;

                if (!self.contentLastPos) {
                    return;
                }

                if (self.opts.momentum === false) {
                    newOffsetX = self.contentLastPos.left;
                    newOffsetY = self.contentLastPos.top;

                } else {

                    // Continue movement
                    newOffsetX = self.contentLastPos.left + (self.velocityX * self.speed);
                    newOffsetY = self.contentLastPos.top + (self.velocityY * self.speed);
                }

                newPos = self.limitPosition(newOffsetX, newOffsetY, self.contentStartPos.width, self.contentStartPos.height);

                newPos.width = self.contentStartPos.width;
                newPos.height = self.contentStartPos.height;

                $.fancybox.animate(self.$content, newPos, 330);
            };


            Guestures.prototype.endZooming = function () {

                var self = this;

                var current = self.instance.current;

                var newOffsetX, newOffsetY, newPos, reset;

                var newWidth = self.newWidth;
                var newHeight = self.newHeight;

                if (!self.contentLastPos) {
                    return;
                }

                newOffsetX = self.contentLastPos.left;
                newOffsetY = self.contentLastPos.top;

                reset = {
                    top: newOffsetY,
                    left: newOffsetX,
                    width: newWidth,
                    height: newHeight,
                    scaleX: 1,
                    scaleY: 1
                };

                // Reset scalex/scaleY values; this helps for perfomance and does not break animation
                $.fancybox.setTranslate(self.$content, reset);

                if (newWidth < self.canvasWidth && newHeight < self.canvasHeight) {
                    self.instance.scaleToFit(150);

                } else if (newWidth > current.width || newHeight > current.height) {
                    self.instance.scaleToActual(self.centerPointStartX, self.centerPointStartY, 150);

                } else {

                    newPos = self.limitPosition(newOffsetX, newOffsetY, newWidth, newHeight);

                    // Switch from scale() to width/height or animation will not work correctly
                    $.fancybox.setTranslate(self.content, $.fancybox.getTranslate(self.$content));

                    $.fancybox.animate(self.$content, newPos, 150);
                }

            };

            Guestures.prototype.onTap = function (e) {
                var self = this;
                var $target = $(e.target);

                var instance = self.instance;
                var current = instance.current;

                var endPoints = (e && pointers(e)) || self.startPoints;

                var tapX = endPoints[0] ? endPoints[0].x - self.$stage.offset().left : 0;
                var tapY = endPoints[0] ? endPoints[0].y - self.$stage.offset().top : 0;

                var where;

                var process = function (prefix) {

                    var action = current.opts[prefix];

                    if ($.isFunction(action)) {
                        action = action.apply(instance, [current, e]);
                    }

                    if (!action) {
                        return;
                    }

                    switch (action) {

                        case "close" :

                            instance.close(self.startEvent);

                            break;

                        case "toggleControls" :

                            instance.toggleControls(true);

                            break;

                        case "next" :

                            instance.next();

                            break;

                        case "nextOrClose" :

                            if (instance.group.length > 1) {
                                instance.next();

                            } else {
                                instance.close(self.startEvent);
                            }

                            break;

                        case "zoom" :

                            if (current.type == 'image' && (current.isLoaded || current.$ghost)) {

                                if (instance.canPan()) {
                                    instance.scaleToFit();

                                } else if (instance.isScaledDown()) {
                                    instance.scaleToActual(tapX, tapY);

                                } else if (instance.group.length < 2) {
                                    instance.close(self.startEvent);
                                }
                            }

                            break;
                    }

                };

                // Ignore right click
                if (e.originalEvent && e.originalEvent.button == 2) {
                    return;
                }

                // Skip if current slide is not in the center
                if (instance.isSliding) {
                    return;
                }

                // Skip if clicked on the scrollbar
                if (tapX > $target[0].clientWidth + $target.offset().left) {
                    return;
                }

                // Check where is clicked
                if ($target.is('.fancybox-bg,.fancybox-inner,.fancybox-outer,.fancybox-container')) {
                    where = 'Outside';

                } else if ($target.is('.fancybox-slide')) {
                    where = 'Slide';

                } else if (instance.current.$content && instance.current.$content.has(e.target).length) {
                    where = 'Content';

                } else {
                    return;
                }

                // Check if this is a double tap
                if (self.tapped) {

                    // Stop previously created single tap
                    clearTimeout(self.tapped);
                    self.tapped = null;

                    // Skip if distance between taps is too big
                    if (Math.abs(tapX - self.tapX) > 50 || Math.abs(tapY - self.tapY) > 50 || instance.isSliding) {
                        return this;
                    }

                    // OK, now we assume that this is a double-tap
                    process('dblclick' + where);

                } else {

                    // Single tap will be processed if user has not clicked second time within 300ms
                    // or there is no need to wait for double-tap
                    self.tapX = tapX;
                    self.tapY = tapY;

                    if (current.opts['dblclick' + where] && current.opts['dblclick' + where] !== current.opts['click' + where]) {
                        self.tapped = setTimeout(function () {
                            self.tapped = null;

                            process('click' + where);

                        }, 300);

                    } else {
                        process('click' + where);
                    }

                }

                return this;
            };

            $(document).on('onActivate.fb', function (e, instance) {
                if (instance && !instance.Guestures) {
                    instance.Guestures = new Guestures(instance);
                }
            });

            $(document).on('beforeClose.fb', function (e, instance) {
                if (instance && instance.Guestures) {
                    instance.Guestures.destroy();
                }
            });


        }(window, document, window.jQuery || jQuery));

// ==========================================================================
//
// SlideShow
// Enables slideshow functionality
//
// Example of usage:
// $.fancybox.getInstance().SlideShow.start()
//
// ==========================================================================
        ;(function (document, $) {
            'use strict';

            $.extend(true, $.fancybox.defaults, {
                btnTpl: {
                    slideShow:
                    '<button data-fancybox-play class="fancybox-button fancybox-button--play" title="{{PLAY_START}}">' +
                    '<svg viewBox="0 0 40 40">' +
                    '<path d="M13,12 L27,20 L13,27 Z" />' +
                    '<path d="M15,10 v19 M23,10 v19" />' +
                    '</svg>' +
                    '</button>'
                },
                slideShow: {
                    autoStart: false,
                    speed: 3000
                }
            });

            var SlideShow = function (instance) {
                this.instance = instance;
                this.init();
            };

            $.extend(SlideShow.prototype, {
                timer: null,
                isActive: false,
                $button: null,

                init: function () {
                    var self = this;

                    self.$button = self.instance.$refs.toolbar.find('[data-fancybox-play]').on('click', function () {
                        self.toggle();
                    });

                    if (self.instance.group.length < 2 || !self.instance.group[self.instance.currIndex].opts.slideShow) {
                        self.$button.hide();
                    }
                },

                set: function (force) {
                    var self = this;

                    // Check if reached last element
                    if (self.instance && self.instance.current && (force === true || self.instance.current.opts.loop || self.instance.currIndex < self.instance.group.length - 1)) {
                        self.timer = setTimeout(function () {
                            if (self.isActive) {
                                self.instance.jumpTo((self.instance.currIndex + 1) % self.instance.group.length);
                            }

                        }, self.instance.current.opts.slideShow.speed);

                    } else {
                        self.stop();
                        self.instance.idleSecondsCounter = 0;
                        self.instance.showControls();
                    }
                },

                clear: function () {
                    var self = this;

                    clearTimeout(self.timer);

                    self.timer = null;
                },

                start: function () {
                    var self = this;
                    var current = self.instance.current;

                    if (current) {
                        self.isActive = true;

                        self.$button
                            .attr('title', current.opts.i18n[current.opts.lang].PLAY_STOP)
                            .removeClass('fancybox-button--play')
                            .addClass('fancybox-button--pause');

                        self.set(true);
                    }
                },

                stop: function () {
                    var self = this;
                    var current = self.instance.current;

                    self.clear();

                    self.$button
                        .attr('title', current.opts.i18n[current.opts.lang].PLAY_START)
                        .removeClass('fancybox-button--pause')
                        .addClass('fancybox-button--play');

                    self.isActive = false;
                },

                toggle: function () {
                    var self = this;

                    if (self.isActive) {
                        self.stop();

                    } else {
                        self.start();
                    }
                }

            });

            $(document).on({
                'onInit.fb': function (e, instance) {
                    if (instance && !instance.SlideShow) {
                        instance.SlideShow = new SlideShow(instance);
                    }
                },

                'beforeShow.fb': function (e, instance, current, firstRun) {
                    var SlideShow = instance && instance.SlideShow;

                    if (firstRun) {

                        if (SlideShow && current.opts.slideShow.autoStart) {
                            SlideShow.start();
                        }

                    } else if (SlideShow && SlideShow.isActive) {
                        SlideShow.clear();
                    }
                },

                'afterShow.fb': function (e, instance, current) {
                    var SlideShow = instance && instance.SlideShow;

                    if (SlideShow && SlideShow.isActive) {
                        SlideShow.set();
                    }
                },

                'afterKeydown.fb': function (e, instance, current, keypress, keycode) {
                    var SlideShow = instance && instance.SlideShow;

                    // "P" or Spacebar
                    if (SlideShow && current.opts.slideShow && (keycode === 80 || keycode === 32) && !$(document.activeElement).is('button,a,input')) {
                        keypress.preventDefault();

                        SlideShow.toggle();
                    }
                },

                'beforeClose.fb onDeactivate.fb': function (e, instance) {
                    var SlideShow = instance && instance.SlideShow;

                    if (SlideShow) {
                        SlideShow.stop();
                    }
                }
            });

            // Page Visibility API to pause slideshow when window is not active
            $(document).on("visibilitychange", function () {
                var instance = $.fancybox.getInstance();
                var SlideShow = instance && instance.SlideShow;

                if (SlideShow && SlideShow.isActive) {
                    if (document.hidden) {
                        SlideShow.clear();

                    } else {
                        SlideShow.set();
                    }
                }
            });

        }(document, window.jQuery || jQuery));

// ==========================================================================
//
// FullScreen
// Adds fullscreen functionality
//
// ==========================================================================
        ;(function (document, $) {
            'use strict';

            // Collection of methods supported by user browser
            var fn = (function () {

                var fnMap = [
                    [
                        'requestFullscreen',
                        'exitFullscreen',
                        'fullscreenElement',
                        'fullscreenEnabled',
                        'fullscreenchange',
                        'fullscreenerror'
                    ],
                    // new WebKit
                    [
                        'webkitRequestFullscreen',
                        'webkitExitFullscreen',
                        'webkitFullscreenElement',
                        'webkitFullscreenEnabled',
                        'webkitfullscreenchange',
                        'webkitfullscreenerror'

                    ],
                    // old WebKit (Safari 5.1)
                    [
                        'webkitRequestFullScreen',
                        'webkitCancelFullScreen',
                        'webkitCurrentFullScreenElement',
                        'webkitCancelFullScreen',
                        'webkitfullscreenchange',
                        'webkitfullscreenerror'

                    ],
                    [
                        'mozRequestFullScreen',
                        'mozCancelFullScreen',
                        'mozFullScreenElement',
                        'mozFullScreenEnabled',
                        'mozfullscreenchange',
                        'mozfullscreenerror'
                    ],
                    [
                        'msRequestFullscreen',
                        'msExitFullscreen',
                        'msFullscreenElement',
                        'msFullscreenEnabled',
                        'MSFullscreenChange',
                        'MSFullscreenError'
                    ]
                ];

                var val;
                var ret = {};
                var i, j;

                for (i = 0; i < fnMap.length; i++) {
                    val = fnMap[i];

                    if (val && val[1] in document) {
                        for (j = 0; j < val.length; j++) {
                            ret[fnMap[0][j]] = val[j];
                        }

                        return ret;
                    }
                }

                return false;
            })();

            // If browser does not have Full Screen API, then simply unset default button template and stop
            if (!fn) {

                if ($ && $.fancybox) {
                    $.fancybox.defaults.btnTpl.fullScreen = false;
                }

                return;
            }

            var FullScreen = {

                request: function (elem) {

                    elem = elem || document.documentElement;

                    elem[fn.requestFullscreen](elem.ALLOW_KEYBOARD_INPUT);

                },
                exit: function () {

                    document[fn.exitFullscreen]();

                },
                toggle: function (elem) {

                    elem = elem || document.documentElement;

                    if (this.isFullscreen()) {
                        this.exit();

                    } else {
                        this.request(elem);
                    }

                },
                isFullscreen: function () {

                    return Boolean(document[fn.fullscreenElement]);

                },
                enabled: function () {

                    return Boolean(document[fn.fullscreenEnabled]);

                }
            };

            $.extend(true, $.fancybox.defaults, {
                btnTpl: {
                    fullScreen:
                    '<button data-fancybox-fullscreen class="fancybox-button fancybox-button--fullscreen" title="{{FULL_SCREEN}}">' +
                    '<svg viewBox="0 0 40 40">' +
                    '<path d="M9,12 h22 v16 h-22 v-16 v16 h22 v-16 Z" />' +
                    '</svg>' +
                    '</button>'
                },
                fullScreen: {
                    autoStart: false
                }
            });

            $(document).on({
                'onInit.fb': function (e, instance) {
                    var $container;

                    if (instance && instance.group[instance.currIndex].opts.fullScreen) {
                        $container = instance.$refs.container;

                        $container.on('click.fb-fullscreen', '[data-fancybox-fullscreen]', function (e) {

                            e.stopPropagation();
                            e.preventDefault();

                            FullScreen.toggle($container[0]);

                        });

                        if (instance.opts.fullScreen && instance.opts.fullScreen.autoStart === true) {
                            FullScreen.request($container[0]);
                        }

                        // Expose API
                        instance.FullScreen = FullScreen;

                    } else if (instance) {
                        instance.$refs.toolbar.find('[data-fancybox-fullscreen]').hide();
                    }

                },

                'afterKeydown.fb': function (e, instance, current, keypress, keycode) {

                    // "P" or Spacebar
                    if (instance && instance.FullScreen && keycode === 70) {
                        keypress.preventDefault();

                        instance.FullScreen.toggle(instance.$refs.container[0]);
                    }

                },

                'beforeClose.fb': function (instance) {
                    if (instance && instance.FullScreen) {
                        FullScreen.exit();
                    }
                }
            });

            $(document).on(fn.fullscreenchange, function () {
                var isFullscreen = FullScreen.isFullscreen(),
                    instance = $.fancybox.getInstance();

                if (instance) {

                    // If image is zooming, then force to stop and reposition properly
                    if (instance.current && instance.current.type === 'image' && instance.isAnimating) {
                        instance.current.$content.css('transition', 'none');

                        instance.isAnimating = false;

                        instance.update(true, true, 0);
                    }

                    instance.trigger('onFullscreenChange', isFullscreen);

                    instance.$refs.container.toggleClass('fancybox-is-fullscreen', isFullscreen);
                }

            });

        }(document, window.jQuery || jQuery));

// ==========================================================================
//
// Thumbs
// Displays thumbnails in a grid
//
// ==========================================================================
        ;(function (document, $) {
            'use strict';

            // Make sure there are default values
            $.fancybox.defaults = $.extend(true, {
                btnTpl: {
                    thumbs:
                    '<button data-fancybox-thumbs class="fancybox-button fancybox-button--thumbs" title="{{THUMBS}}">' +
                    '<svg viewBox="0 0 120 120">' +
                    '<path d="M30,30 h14 v14 h-14 Z M50,30 h14 v14 h-14 Z M70,30 h14 v14 h-14 Z M30,50 h14 v14 h-14 Z M50,50 h14 v14 h-14 Z M70,50 h14 v14 h-14 Z M30,70 h14 v14 h-14 Z M50,70 h14 v14 h-14 Z M70,70 h14 v14 h-14 Z" />' +
                    '</svg>' +
                    '</button>'
                },
                thumbs: {
                    autoStart: false,                  // Display thumbnails on opening
                    hideOnClose: true,                   // Hide thumbnail grid when closing animation starts
                    parentEl: '.fancybox-container',  // Container is injected into this element
                    axis: 'y'                     // Vertical (y) or horizontal (x) scrolling
                }
            }, $.fancybox.defaults);

            var FancyThumbs = function (instance) {
                this.init(instance);
            };

            $.extend(FancyThumbs.prototype, {

                $button: null,
                $grid: null,
                $list: null,
                isVisible: false,
                isActive: false,

                init: function (instance) {
                    var self = this;

                    self.instance = instance;

                    instance.Thumbs = self;

                    // Enable thumbs if at least two group items have thumbnails
                    var first = instance.group[0],
                        second = instance.group[1];

                    self.opts = instance.group[instance.currIndex].opts.thumbs;

                    self.$button = instance.$refs.toolbar.find('[data-fancybox-thumbs]');

                    if (self.opts && first && second && (
                            (first.type == 'image' || first.opts.thumb || first.opts.$thumb) &&
                            (second.type == 'image' || second.opts.thumb || second.opts.$thumb)
                        )) {

                        self.$button.show().on('click', function () {
                            self.toggle();
                        });

                        self.isActive = true;

                    } else {
                        self.$button.hide();
                    }
                },

                create: function () {
                    var self = this,
                        instance = self.instance,
                        parentEl = self.opts.parentEl,
                        list,
                        src;

                    self.$grid = $('<div class="fancybox-thumbs fancybox-thumbs-' + self.opts.axis + '"></div>').appendTo(instance.$refs.container.find(parentEl).addBack().filter(parentEl));

                    // Build list HTML
                    list = '<ul>';

                    $.each(instance.group, function (i, item) {
                        src = item.opts.thumb || (item.opts.$thumb ? item.opts.$thumb.attr('src') : null);

                        if (!src && item.type === 'image') {
                            src = item.src;
                        }

                        if (src && src.length) {
                            list += '<li data-index="' + i + '"  tabindex="0" class="fancybox-thumbs-loading"><img data-src="' + src + '" /></li>';
                        }
                    });

                    list += '</ul>';

                    self.$list = $(list).appendTo(self.$grid).on('click', 'li', function () {
                        instance.jumpTo($(this).data('index'));
                    });

                    self.$list.find('img').hide().one('load', function () {
                        var $parent = $(this).parent().removeClass('fancybox-thumbs-loading'),
                            thumbWidth = $parent.outerWidth(),
                            thumbHeight = $parent.outerHeight(),
                            width,
                            height,
                            widthRatio,
                            heightRatio;

                        width = this.naturalWidth || this.width;
                        height = this.naturalHeight || this.height;

                        // Calculate thumbnail dimensions; center vertically and horizontally
                        widthRatio = width / thumbWidth;
                        heightRatio = height / thumbHeight;

                        if (widthRatio >= 1 && heightRatio >= 1) {
                            if (widthRatio > heightRatio) {
                                width = width / heightRatio;
                                height = thumbHeight;

                            } else {
                                width = thumbWidth;
                                height = height / widthRatio;
                            }
                        }

                        $(this).css({
                            width: Math.floor(width),
                            height: Math.floor(height),
                            'margin-top': height > thumbHeight ? (Math.floor(thumbHeight * 0.3 - height * 0.3)) : Math.floor(thumbHeight * 0.5 - height * 0.5),
                            'margin-left': Math.floor(thumbWidth * 0.5 - width * 0.5)
                        }).show();

                    })
                        .each(function () {
                            this.src = $(this).data('src');
                        });

                    if (self.opts.axis === 'x') {
                        self.$list.width(parseInt(self.$grid.css("padding-right")) + (instance.group.length * self.$list.children().eq(0).outerWidth(true)) + 'px');
                    }
                },

                focus: function (duration) {
                    var self = this,
                        $list = self.$list,
                        thumb,
                        thumbPos;

                    if (self.instance.current) {
                        thumb = $list.children()
                            .removeClass('fancybox-thumbs-active')
                            .filter('[data-index="' + self.instance.current.index + '"]')
                            .addClass('fancybox-thumbs-active');

                        thumbPos = thumb.position();

                        // Check if need to scroll to make current thumb visible
                        if (self.opts.axis === 'y' && (thumbPos.top < 0 || thumbPos.top > ($list.height() - thumb.outerHeight()))) {
                            $list.stop().animate({'scrollTop': $list.scrollTop() + thumbPos.top}, duration);

                        } else if (self.opts.axis === 'x' && (
                                thumbPos.left < $list.parent().scrollLeft() ||
                                thumbPos.left > ($list.parent().scrollLeft() + ($list.parent().width() - thumb.outerWidth()))
                            )
                        ) {
                            $list.parent().stop().animate({'scrollLeft': thumbPos.left}, duration);
                        }
                    }
                },

                update: function () {
                    this.instance.$refs.container.toggleClass('fancybox-show-thumbs', this.isVisible);

                    if (this.isVisible) {
                        if (!this.$grid) {
                            this.create();
                        }

                        this.instance.trigger('onThumbsShow');

                        this.focus(0);

                    } else if (this.$grid) {
                        this.instance.trigger('onThumbsHide');
                    }

                    // Update content position
                    this.instance.update();
                },

                hide: function () {
                    this.isVisible = false;
                    this.update();
                },

                show: function () {
                    this.isVisible = true;
                    this.update();
                },

                toggle: function () {
                    this.isVisible = !this.isVisible;
                    this.update();
                }
            });

            $(document).on({

                'onInit.fb': function (e, instance) {
                    var Thumbs;

                    if (instance && !instance.Thumbs) {
                        Thumbs = new FancyThumbs(instance);

                        if (Thumbs.isActive && Thumbs.opts.autoStart === true) {
                            Thumbs.show();
                        }
                    }
                },

                'beforeShow.fb': function (e, instance, item, firstRun) {
                    var Thumbs = instance && instance.Thumbs;

                    if (Thumbs && Thumbs.isVisible) {
                        Thumbs.focus(firstRun ? 0 : 250);
                    }
                },

                'afterKeydown.fb': function (e, instance, current, keypress, keycode) {
                    var Thumbs = instance && instance.Thumbs;

                    // "G"
                    if (Thumbs && Thumbs.isActive && keycode === 71) {
                        keypress.preventDefault();

                        Thumbs.toggle();
                    }
                },

                'beforeClose.fb': function (e, instance) {
                    var Thumbs = instance && instance.Thumbs;

                    if (Thumbs && Thumbs.isVisible && Thumbs.opts.hideOnClose !== false) {
                        Thumbs.$grid.hide();
                    }
                }

            });

        }(document, window.jQuery));

//// ==========================================================================
//
// Share
// Displays simple form for sharing current url
//
// ==========================================================================
        ;(function (document, $) {
            'use strict';

            $.extend(true, $.fancybox.defaults, {
                btnTpl: {
                    share:
                    '<button data-fancybox-share class="fancybox-button fancybox-button--share" title="{{SHARE}}">' +
                    '<svg viewBox="0 0 40 40">' +
                    '<path d="M6,30 C8,18 19,16 23,16 L23,16 L23,10 L33,20 L23,29 L23,24 C19,24 8,27 6,30 Z">' +
                    '</svg>' +
                    '</button>'
                },
                share: {
                    tpl:
                    '<div class="fancybox-share">' +
                    '<h1>{{SHARE}}</h1>' +
                    '<p>' +
                    '<a href="https://www.facebook.com/sharer/sharer.php?u={{src}}" target="_blank" class="fancybox-share_button">' +
                    '<svg version="1.1" viewBox="0 0 32 32" fill="#3b5998"><path d="M27.6 3h-23.2c-.8 0-1.4.6-1.4 1.4v23.1c0 .9.6 1.5 1.4 1.5h12.5v-10.1h-3.4v-3.9h3.4v-2.9c0-3.4 2.1-5.2 5-5.2 1.4 0 2.7.1 3 .2v3.5h-2.1c-1.6 0-1.9.8-1.9 1.9v2.5h3.9l-.5 3.9h-3.4v10.1h6.6c.8 0 1.4-.6 1.4-1.4v-23.2c.1-.8-.5-1.4-1.3-1.4z"></path></svg>' +
                    '<span>Facebook</span>' +
                    '</a>' +
                    '<a href="https://www.pinterest.com/pin/create/button/?url={{src}}&amp;description={{descr}}" target="_blank" class="fancybox-share_button">' +
                    '<svg version="1.1" viewBox="0 0 32 32" fill="#c92228"><path d="M16 3c-7.2 0-13 5.8-13 13 0 5.5 3.4 10.2 8.3 12.1-.1-1-.2-2.6 0-3.7.2-1 1.5-6.5 1.5-6.5s-.4-.8-.4-1.9c0-1.8 1-3.2 2.4-3.2 1.1 0 1.6.8 1.6 1.8 0 1.1-.7 2.8-1.1 4.3-.3 1.3.6 2.3 1.9 2.3 2.3 0 4.1-2.4 4.1-6 0-3.1-2.2-5.3-5.4-5.3-3.7 0-5.9 2.8-5.9 5.6 0 1.1.4 2.3 1 3 .1.1.1.2.1.4-.1.4-.3 1.3-.4 1.5-.1.2-.2.3-.4.2-1.6-.8-2.6-3.1-2.6-5 0-4.1 3-7.9 8.6-7.9 4.5 0 8 3.2 8 7.5 0 4.5-2.8 8.1-6.7 8.1-1.3 0-2.6-.7-3-1.5 0 0-.7 2.5-.8 3.1-.3 1.1-1.1 2.5-1.6 3.4 1.2.4 2.5.6 3.8.6 7.2 0 13-5.8 13-13 0-7.1-5.8-12.9-13-12.9z"></path></svg>' +
                    '<span>Pinterest</span>' +
                    '</a>' +
                    '<a href="https://twitter.com/intent/tweet?url={{src}}&amp;text={{descr}}" target="_blank" class="fancybox-share_button">' +
                    '<svg version="1.1" viewBox="0 0 32 32" fill="#1da1f2"><path d="M30 7.3c-1 .5-2.1.8-3.3.9 1.2-.7 2.1-1.8 2.5-3.2-1.1.7-2.3 1.1-3.6 1.4-1-1.1-2.5-1.8-4.2-1.8-3.2 0-5.7 2.6-5.7 5.7 0 .5.1.9.1 1.3-4.8-.2-9-2.5-11.8-6-.5.9-.8 1.9-.8 3 0 2 1 3.8 2.6 4.8-.9 0-1.8-.3-2.6-.7v.1c0 2.8 2 5.1 4.6 5.6-.5.1-1 .2-1.5.2-.4 0-.7 0-1.1-.1.7 2.3 2.9 3.9 5.4 4-2 1.5-4.4 2.5-7.1 2.5-.5 0-.9 0-1.4-.1 2.5 1.6 5.6 2.6 8.8 2.6 10.6 0 16.3-8.8 16.3-16.3v-.7c1.1-1 2-2 2.8-3.2z"></path></svg>' +
                    '<span>Twitter</span>' +
                    '</a>' +
                    '</p>' +
                    '<p><input type="text" value="{{src_raw}}" onfocus="this.select()" /></p>' +
                    '</div>'
                }
            });

            function escapeHtml(string) {
                var entityMap = {
                    '&': '&amp;',
                    '<': '&lt;',
                    '>': '&gt;',
                    '"': '&quot;',
                    "'": '&#39;',
                    '/': '&#x2F;',
                    '`': '&#x60;',
                    '=': '&#x3D;'
                };

                return String(string).replace(/[&<>"'`=\/]/g, function (s) {
                    return entityMap[s];
                });
            }

            $(document).on('click', '[data-fancybox-share]', function () {
                var f = $.fancybox.getInstance(),
                    url,
                    tpl;

                if (f) {
                    url = f.current.opts.hash === false ? f.current.src : window.location;
                    tpl = f.current.opts.share.tpl
                        .replace(/\{\{src\}\}/g, encodeURIComponent(url))
                        .replace(/\{\{src_raw\}\}/g, escapeHtml(url))
                        .replace(/\{\{descr\}\}/g, f.$caption ? encodeURIComponent(f.$caption.text()) : '');

                    $.fancybox.open({
                        src: f.translate(f, tpl),
                        type: 'html',
                        opts: {
                            animationEffect: "fade",
                            animationDuration: 250
                        }
                    });
                }

            });

        }(document, window.jQuery || jQuery));

// ==========================================================================
//
// Hash
// Enables linking to each modal
//
// ==========================================================================
        ;(function (document, window, $) {
            'use strict';

            // Simple $.escapeSelector polyfill (for jQuery prior v3)
            if (!$.escapeSelector) {
                $.escapeSelector = function (sel) {
                    var rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\x80-\uFFFF\w-]/g;
                    var fcssescape = function (ch, asCodePoint) {
                        if (asCodePoint) {
                            // U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
                            if (ch === "\0") {
                                return "\uFFFD";
                            }

                            // Control characters and (dependent upon position) numbers get escaped as code points
                            return ch.slice(0, -1) + "\\" + ch.charCodeAt(ch.length - 1).toString(16) + " ";
                        }

                        // Other potentially-special ASCII characters get backslash-escaped
                        return "\\" + ch;
                    };

                    return (sel + "").replace(rcssescape, fcssescape);
                };
            }

            // Create new history entry only once
            var shouldCreateHistory = true;

            // Variable containing last hash value set by fancyBox
            // It will be used to determine if fancyBox needs to close after hash change is detected
            var currentHash = null;

            // Throttling the history change
            var timerID = null;

            // Get info about gallery name and current index from url
            function parseUrl() {
                var hash = window.location.hash.substr(1);
                var rez = hash.split('-');
                var index = rez.length > 1 && /^\+?\d+$/.test(rez[rez.length - 1]) ? parseInt(rez.pop(-1), 10) || 1 : 1;
                var gallery = rez.join('-');

                // Index is starting from 1
                if (index < 1) {
                    index = 1;
                }

                return {
                    hash: hash,
                    index: index,
                    gallery: gallery
                };
            }

            // Trigger click evnt on links to open new fancyBox instance
            function triggerFromUrl(url) {
                var $el;

                if (url.gallery !== '') {

                    // If we can find element matching 'data-fancybox' atribute, then trigger click event for that ..
                    $el = $("[data-fancybox='" + $.escapeSelector(url.gallery) + "']").eq(url.index - 1);

                    if (!$el.length) {
                        // .. if not, try finding element by ID
                        $el = $("#" + $.escapeSelector(url.gallery) + "");
                    }

                    if ($el.length) {
                        shouldCreateHistory = false;

                        $el.trigger('click');
                    }

                }
            }

            // Get gallery name from current instance
            function getGalleryID(instance) {
                var opts;

                if (!instance) {
                    return false;
                }

                opts = instance.current ? instance.current.opts : instance.opts;

                return opts.hash || (opts.$orig ? opts.$orig.data('fancybox') : '');
            }

            // Start when DOM becomes ready
            $(function () {

                // Check if user has disabled this module
                if ($.fancybox.defaults.hash === false) {
                    return;
                }

                // Update hash when opening/closing fancyBox
                $(document).on({
                    'onInit.fb': function (e, instance) {
                        var url, gallery;

                        if (instance.group[instance.currIndex].opts.hash === false) {
                            return;
                        }

                        url = parseUrl();
                        gallery = getGalleryID(instance);

                        // Make sure gallery start index matches index from hash
                        if (gallery && url.gallery && gallery == url.gallery) {
                            instance.currIndex = url.index - 1;
                        }
                    },

                    'beforeShow.fb': function (e, instance, current) {
                        var gallery;

                        if (!current || current.opts.hash === false) {
                            return;
                        }

                        gallery = getGalleryID(instance);

                        // Update window hash
                        if (gallery && gallery !== '') {

                            if (window.location.hash.indexOf(gallery) < 0) {
                                instance.opts.origHash = window.location.hash;
                            }

                            currentHash = gallery + (instance.group.length > 1 ? '-' + (current.index + 1) : '');

                            if ('replaceState' in window.history) {
                                if (timerID) {
                                    clearTimeout(timerID);
                                }

                                timerID = setTimeout(function () {
                                    window.history[shouldCreateHistory ? 'pushState' : 'replaceState']({}, document.title, window.location.pathname + window.location.search + '#' + currentHash);

                                    timerID = null;

                                    shouldCreateHistory = false;

                                }, 300);

                            } else {
                                window.location.hash = currentHash;
                            }

                        }

                    },

                    'beforeClose.fb': function (e, instance, current) {
                        var gallery, origHash;

                        if (timerID) {
                            clearTimeout(timerID);
                        }

                        if (current.opts.hash === false) {
                            return;
                        }

                        gallery = getGalleryID(instance);
                        origHash = instance && instance.opts.origHash ? instance.opts.origHash : '';

                        // Remove hash from location bar
                        if (gallery && gallery !== '') {

                            if ('replaceState' in history) {
                                window.history.replaceState({}, document.title, window.location.pathname + window.location.search + origHash);

                            } else {
                                window.location.hash = origHash;

                                // Keep original scroll position
                                $(window).scrollTop(instance.scrollTop).scrollLeft(instance.scrollLeft);
                            }
                        }

                        currentHash = null;
                    }
                });

                // Check if need to close after url has changed
                $(window).on('hashchange.fb', function () {
                    var url = parseUrl();

                    if ($.fancybox.getInstance()) {
                        if (currentHash && currentHash !== url.gallery + '-' + url.index && !(url.index === 1 && currentHash == url.gallery)) {
                            currentHash = null;

                            $.fancybox.close();
                        }

                    } else if (url.gallery !== '') {
                        triggerFromUrl(url);
                    }
                });

                // Check current hash and trigger click event on matching element to start fancyBox, if needed
                setTimeout(function () {
                    triggerFromUrl(parseUrl());
                }, 50);
            });

        }(document, window, window.jQuery || jQuery));


        /***/
    }),
    /* 113 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheConstructor_vue_vue_type_script_lang_js___ = __webpack_require__(114);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheConstructor_vue_vue_type_script_lang_js____default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheConstructor_vue_vue_type_script_lang_js___);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheConstructor_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheConstructor_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony default export */
        __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheConstructor_vue_vue_type_script_lang_js____default.a);

        /***/
    }),
    /* 114 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _axios = __webpack_require__(115);

        var _axios2 = _interopRequireDefault(_axios);

        var _TheTabs = __webpack_require__(350);

        var _TheTabs2 = _interopRequireDefault(_TheTabs);

        var _TheImageBuilder = __webpack_require__(353);

        var _TheImageBuilder2 = _interopRequireDefault(_TheImageBuilder);

        var _TheFilters = __webpack_require__(356);

        var _TheFilters2 = _interopRequireDefault(_TheFilters);

        var _TheFiltersForms = __webpack_require__(359);

        var _TheFiltersForms2 = _interopRequireDefault(_TheFiltersForms);

        var _TheCard = __webpack_require__(365);

        var _TheCard2 = _interopRequireDefault(_TheCard);

        var _PopUpFormSubmit = __webpack_require__(81);

        var _PopUpFormSubmit2 = _interopRequireDefault(_PopUpFormSubmit);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {default: obj};
        }

        exports.default = {
            name: 'TheConstructor',
            components: {
                TheTabs: _TheTabs2.default,
                TheImageBuilder: _TheImageBuilder2.default,
                TheFilters: _TheFilters2.default,
                TheFiltersForms: _TheFiltersForms2.default,
                TheCard: _TheCard2.default,
                PopUpFormSubmit: _PopUpFormSubmit2.default
            },
            data: function data() {
                return {
                    title: 'The constructor',
                    response: null,
                    preloader: true
                };
            },
            created: function created() {
                var _this = this;

                var elId = document.body.querySelector('#apartment_id') === null ? null : document.body.querySelector('#apartment_id').value;
                _axios2.default.get('/apartment/constructor/index.json', {
                    params: {
                        id: elId
                    }
                }).then(function (r) {
                    _this.response = r.data;
                    setTimeout(function () {
                        _this.preloader = false;
                    }, 1500);
                }).catch(function (e) {
                    _this.preloader = true;
                    console.error(e);
                });
            }
        }; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

        /***/
    }),
    /* 115 */
    /***/ (function (module, exports, __webpack_require__) {

        module.exports = __webpack_require__(332);

        /***/
    }),
    /* 116 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        module.exports = function bind(fn, thisArg) {
            return function wrap() {
                var args = new Array(arguments.length);
                for (var i = 0; i < args.length; i++) {
                    args[i] = arguments[i];
                }
                return fn.apply(thisArg, args);
            };
        };


        /***/
    }),
    /* 117 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";
        /* WEBPACK VAR INJECTION */
        (function (process) {

            var utils = __webpack_require__(13);
            var settle = __webpack_require__(336);
            var buildURL = __webpack_require__(338);
            var parseHeaders = __webpack_require__(339);
            var isURLSameOrigin = __webpack_require__(340);
            var createError = __webpack_require__(118);
            var btoa = (typeof window !== 'undefined' && window.btoa && window.btoa.bind(window)) || __webpack_require__(341);

            module.exports = function xhrAdapter(config) {
                return new Promise(function dispatchXhrRequest(resolve, reject) {
                    var requestData = config.data;
                    var requestHeaders = config.headers;

                    if (utils.isFormData(requestData)) {
                        delete requestHeaders['Content-Type']; // Let the browser set it
                    }

                    var request = new XMLHttpRequest();
                    var loadEvent = 'onreadystatechange';
                    var xDomain = false;

                    // For IE 8/9 CORS support
                    // Only supports POST and GET calls and doesn't returns the response headers.
                    // DON'T do this for testing b/c XMLHttpRequest is mocked, not XDomainRequest.
                    if (process.env.NODE_ENV !== 'test' &&
                        typeof window !== 'undefined' &&
                        window.XDomainRequest && !('withCredentials' in request) &&
                        !isURLSameOrigin(config.url)) {
                        request = new window.XDomainRequest();
                        loadEvent = 'onload';
                        xDomain = true;
                        request.onprogress = function handleProgress() {
                        };
                        request.ontimeout = function handleTimeout() {
                        };
                    }

                    // HTTP basic authentication
                    if (config.auth) {
                        var username = config.auth.username || '';
                        var password = config.auth.password || '';
                        requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);
                    }

                    request.open(config.method.toUpperCase(), buildURL(config.url, config.params, config.paramsSerializer), true);

                    // Set the request timeout in MS
                    request.timeout = config.timeout;

                    // Listen for ready state
                    request[loadEvent] = function handleLoad() {
                        if (!request || (request.readyState !== 4 && !xDomain)) {
                            return;
                        }

                        // The request errored out and we didn't get a response, this will be
                        // handled by onerror instead
                        // With one exception: request that using file: protocol, most browsers
                        // will return status as 0 even though it's a successful request
                        if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {
                            return;
                        }

                        // Prepare the response
                        var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;
                        var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;
                        var response = {
                            data: responseData,
                            // IE sends 1223 instead of 204 (https://github.com/axios/axios/issues/201)
                            status: request.status === 1223 ? 204 : request.status,
                            statusText: request.status === 1223 ? 'No Content' : request.statusText,
                            headers: responseHeaders,
                            config: config,
                            request: request
                        };

                        settle(resolve, reject, response);

                        // Clean up request
                        request = null;
                    };

                    // Handle low level network errors
                    request.onerror = function handleError() {
                        // Real errors are hidden from us by the browser
                        // onerror should only fire if it's a network error
                        reject(createError('Network Error', config, null, request));

                        // Clean up request
                        request = null;
                    };

                    // Handle timeout
                    request.ontimeout = function handleTimeout() {
                        reject(createError('timeout of ' + config.timeout + 'ms exceeded', config, 'ECONNABORTED',
                            request));

                        // Clean up request
                        request = null;
                    };

                    // Add xsrf header
                    // This is only done if running in a standard browser environment.
                    // Specifically not if we're in a web worker, or react-native.
                    if (utils.isStandardBrowserEnv()) {
                        var cookies = __webpack_require__(342);

                        // Add xsrf header
                        var xsrfValue = (config.withCredentials || isURLSameOrigin(config.url)) && config.xsrfCookieName ?
                            cookies.read(config.xsrfCookieName) :
                            undefined;

                        if (xsrfValue) {
                            requestHeaders[config.xsrfHeaderName] = xsrfValue;
                        }
                    }

                    // Add headers to the request
                    if ('setRequestHeader' in request) {
                        utils.forEach(requestHeaders, function setRequestHeader(val, key) {
                            if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {
                                // Remove Content-Type if data is undefined
                                delete requestHeaders[key];
                            } else {
                                // Otherwise add header to the request
                                request.setRequestHeader(key, val);
                            }
                        });
                    }

                    // Add withCredentials to request if needed
                    if (config.withCredentials) {
                        request.withCredentials = true;
                    }

                    // Add responseType to request if needed
                    if (config.responseType) {
                        try {
                            request.responseType = config.responseType;
                        } catch (e) {
                            // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.
                            // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.
                            if (config.responseType !== 'json') {
                                throw e;
                            }
                        }
                    }

                    // Handle progress if needed
                    if (typeof config.onDownloadProgress === 'function') {
                        request.addEventListener('progress', config.onDownloadProgress);
                    }

                    // Not all browsers support upload events
                    if (typeof config.onUploadProgress === 'function' && request.upload) {
                        request.upload.addEventListener('progress', config.onUploadProgress);
                    }

                    if (config.cancelToken) {
                        // Handle cancellation
                        config.cancelToken.promise.then(function onCanceled(cancel) {
                            if (!request) {
                                return;
                            }

                            request.abort();
                            reject(cancel);
                            // Clean up request
                            request = null;
                        });
                    }

                    if (requestData === undefined) {
                        requestData = null;
                    }

                    // Send the request
                    request.send(requestData);
                });
            };

            /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(47)))

        /***/
    }),
    /* 118 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var enhanceError = __webpack_require__(337);

        /**
         * Create an Error with the specified message, config, error code, request and response.
         *
         * @param {string} message The error message.
         * @param {Object} config The config.
         * @param {string} [code] The error code (for example, 'ECONNABORTED').
         * @param {Object} [request] The request.
         * @param {Object} [response] The response.
         * @returns {Error} The created error.
         */
        module.exports = function createError(message, config, code, request, response) {
            var error = new Error(message);
            return enhanceError(error, config, code, request, response);
        };


        /***/
    }),
    /* 119 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        module.exports = function isCancel(value) {
            return !!(value && value.__CANCEL__);
        };


        /***/
    }),
    /* 120 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        /**
         * A `Cancel` is an object that is thrown when an operation is canceled.
         *
         * @class
         * @param {string=} message The message.
         */
        function Cancel(message) {
            this.message = message;
        }

        Cancel.prototype.toString = function toString() {
            return 'Cancel' + (this.message ? ': ' + this.message : '');
        };

        Cancel.prototype.__CANCEL__ = true;

        module.exports = Cancel;


        /***/
    }),
    /* 121 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheTabs_vue_vue_type_script_lang_js___ = __webpack_require__(122);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheTabs_vue_vue_type_script_lang_js____default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheTabs_vue_vue_type_script_lang_js___);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheTabs_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheTabs_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony default export */
        __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheTabs_vue_vue_type_script_lang_js____default.a);

        /***/
    }),
    /* 122 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
//
//
//
//
//
//
//
//
//
//
//
//
//
//

        exports.default = {
            name: 'TheTabs',
            props: {
                items: {
                    type: Array,
                    required: true
                }
            },
            methods: {
                setCurrentItem: function setCurrentItem(item) {
                    this.$store.commit('SET_CURRENT_ITEM', item);
                }
            }
        };

        /***/
    }),
    /* 123 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheImageBuilder_vue_vue_type_script_lang_js___ = __webpack_require__(124);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheImageBuilder_vue_vue_type_script_lang_js____default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheImageBuilder_vue_vue_type_script_lang_js___);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheImageBuilder_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheImageBuilder_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony default export */
        __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheImageBuilder_vue_vue_type_script_lang_js____default.a);

        /***/
    }),
    /* 124 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

        exports.default = {
            name: 'TheImageBuilder',
            computed: {
                currentItem: function currentItem() {
                    return this.$store.state.current_item;
                },
                selectedItems: function selectedItems() {
                    return this.$store.state.selected[this.currentItem];
                }
            },
            props: {
                items: {
                    type: Array,
                    required: true
                }
            }
        };

        /***/
    }),
    /* 125 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFilters_vue_vue_type_script_lang_js___ = __webpack_require__(126);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFilters_vue_vue_type_script_lang_js____default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFilters_vue_vue_type_script_lang_js___);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFilters_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFilters_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony default export */
        __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFilters_vue_vue_type_script_lang_js____default.a);

        /***/
    }),
    /* 126 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _vMask = __webpack_require__(127);

        exports.default = {
            name: 'TheFilters',
            directives: {
                mask: _vMask.VueMaskDirective
            },
            computed: {
                itemFilter: function itemFilter() {
                    var items = this.items,
                        currentItem = this.currentItem,
                        currentFilter = this.currentFilter;

                    if (currentFilter > -1) {
                        return items[currentItem].filters[currentFilter];
                    } else {
                        return {};
                    }
                },
                currentItem: function currentItem() {
                    return this.$store.state.current_item;
                },
                checker: function checker() {
                    if (this.items[this.currentItem].filters[this.currentFilter] === undefined) {
                        //this.opened = false;
                        return false;
                    } else {
                        return true;
                    }
                },
                active: function active() {
                    var obj = this.$store.state.selected[this.items[this.currentItem].name];
                    return obj;
                },
                item: function item() {
                    return this.$store.state.current_item;
                }
            },
            data: function data() {
                return {
                    opened: false,
                    currentFilter: -1,
                    currentPopUop: 0,
                    popUp: false,
                    selectedItems: [],
                    first: true
                };
            },

            props: {
                items: {
                    type: Array,
                    required: true
                }
            },
            watch: {
                item: function item(value) {
                    this.opened = false;
                    // this.currentFilter = -1;
                    this.currentPopUop = 0;
                    this.popUp = false;
                    this.first = true;
                }
            },
            methods: {
                selectItem: function selectItem(i, name) {
                    var currentItem = this.currentItem;
                    if (name === 'Оборудование') {
                        this.$store.commit('SET_EQUPMENT', {currentItem: currentItem, name: name, i: i});
                        return;
                    }
                    this.$store.commit('SET_FILTERED_ITEM', {currentItem: currentItem, name: name, i: i});
                },
                showItems: function showItems(i) {
                    if (this.currentFilter === i && !this.opened) {
                        this.currentFilter = -1;
                    } else {
                        this.currentFilter = i;
                    }
                },
                setCurrentPopUpData: function setCurrentPopUpData(i) {
                    this.currentPopUop = i;
                },
                openSubMenu: function openSubMenu(i) {
                    this.opened = true;

                    if (this.currentFilter === i) {
                        this.opened = false;
                    } else if (this.first) {
                        this.opened = true;
                        this.first = false;
                    }
                }
            }
        }; //
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

        /***/
    }),
    /* 127 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "VueMaskPlugin", function () {
            return plugin;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "VueMaskDirective", function () {
            return directive;
        });

        function format(data, mask) {
            if (!mask) return data;

            var maskStartRegExp = /^([^#ANX]+)/;

            if (+data.length === 1 && maskStartRegExp.test(mask)) {
                data = maskStartRegExp.exec(mask)[0] + data;
            }

            var text = '';

            var cOffset = 0;

            for (var i = 0; i < mask.length; i += 1) {
                var m = mask.charAt(i);
                switch (m) {
                    case '#':
                        break;
                    case 'A':
                        break;
                    case '?':
                        break;
                    case 'N':
                        break;
                    case 'X':
                        break;
                    default:
                        data = data.replace(m, '');
                }
            }
            for (var _i = 0, x = 1; x && _i < mask.length; _i += 1) {
                var c = data.charAt(_i - cOffset);
                var _m = mask.charAt(_i);

                switch (_m) {
                    case '#':
                        /\d/.test(c) ? text += c : x = 0;
                        break;
                    case 'A':
                        /[a-z]/i.test(c) ? text += c : x = 0;
                        break;
                    case 'N':
                        /[a-z0-9]/i.test(c) ? text += c : x = 0;
                        break;

                    case '?':
                        cOffset += 1;
                        break;
                    case 'X':
                        text += c;
                        break;
                    default:
                        text += _m;

                        if (c && c !== _m) {
                            data = ' ' + data;
                        }

                        break;
                }
            }
            return text;
        }

        var trigger = function trigger(el, type) {
            var e = document.createEvent('HTMLEvents');
            e.initEvent(type, true, true);
            el.dispatchEvent(e);
        };

        var inBrowser = typeof window !== 'undefined';
        var UA = inBrowser && window.navigator.userAgent.toLowerCase();
        var isEdge = UA && UA.indexOf('edge/') > 0;
        var isAndroid = UA && UA.indexOf('android') > 0;
        var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

        function updateValue(el) {
            var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
            var value = el.value,
                _el$dataset = el.dataset,
                _el$dataset$previousV = _el$dataset.previousValue,
                previousValue = _el$dataset$previousV === undefined ? '' : _el$dataset$previousV,
                mask = _el$dataset.mask;


            if (force || value && value !== previousValue && value.length > previousValue.length) {
                el.value = format(value, mask);
                if (isAndroid && isChrome) {
                    setTimeout(function () {
                        return trigger(el, 'input');
                    }, 0);
                } else {
                    trigger(el, 'input');
                }
            }

            el.dataset.previousValue = value;
        }

        function updateMask(el, mask) {
            el.dataset.mask = mask;
        }

        var directive = {
            bind: function bind(el, _ref) {
                var value = _ref.value;

                updateMask(el, value);
                updateValue(el);
            },
            componentUpdated: function componentUpdated(el, _ref2) {
                var value = _ref2.value,
                    oldValue = _ref2.oldValue;

                var isMaskChanged = value !== oldValue;

                if (isMaskChanged) {
                    updateMask(el, value);
                }

                updateValue(el, isMaskChanged);
            }
        };

        var plugin = (function (Vue) {
            Vue.directive('mask', directive);
        });

        /* harmony default export */
        __webpack_exports__["default"] = (plugin);


        /***/
    }),
    /* 128 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFiltersForms_vue_vue_type_script_lang_js___ = __webpack_require__(129);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFiltersForms_vue_vue_type_script_lang_js____default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFiltersForms_vue_vue_type_script_lang_js___);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFiltersForms_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFiltersForms_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony default export */
        __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFiltersForms_vue_vue_type_script_lang_js____default.a);

        /***/
    }),
    /* 129 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _PopUpFormSubmit = __webpack_require__(81);

        var _PopUpFormSubmit2 = _interopRequireDefault(_PopUpFormSubmit);

        var _globalMixin = __webpack_require__(133);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {default: obj};
        }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

        exports.default = {
            name: 'TheFiltersForms',
            mixins: [_globalMixin.globalMixin],
            data: function data() {
                return {
                    openedPopUp: {
                        "0": false,
                        "1": false
                    }
                };
            },

            components: {
                PopUpFormSubmit: _PopUpFormSubmit2.default
            },
            props: {
                items: {
                    type: Array,
                    required: true
                },
                global: {
                    type: Object,
                    required: true
                }
            },
            computed: {
                fullPriceForAdditionalWorks: function fullPriceForAdditionalWorks() {
                    return parseInt(this.$store.state.total_sum);
                },
                selectedItems: function selectedItems() {
                    var items = this.$store.state.arrResult;
                    return items;
                }
            }

        };

        /***/
    }),
    /* 130 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_script_lang_js___ = __webpack_require__(131);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_script_lang_js____default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_script_lang_js___);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony default export */
        __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_script_lang_js____default.a);

        /***/
    }),
    /* 131 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _vMask = __webpack_require__(127);

        var _axios = __webpack_require__(115);

        var _axios2 = _interopRequireDefault(_axios);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {default: obj};
        }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

        exports.default = {
            name: 'PopUpFormSubmit',
            directives: {
                mask: _vMask.VueMaskDirective
            },
            data: function data() {
                return {
                    state: this.global.form.button,
                    name_value: '',
                    email_value: ''
                };
            },

            props: {
                opened: {
                    type: Boolean
                },
                postLink: {
                    type: String,
                    required: true
                },
                global: {
                    type: Object,
                    required: true
                }
            },
            methods: {
                clearForm: function clearForm() {
                    var form = this.$el.querySelector('.vue-form'),
                        inputs = this.$el.querySelectorAll("input");

                    this.name_value = '';
                    this.email_value = '';

                    var _iteratorNormalCompletion = true;
                    var _didIteratorError = false;
                    var _iteratorError = undefined;

                    try {
                        for (var _iterator = inputs[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                            var item = _step.value;

                            item.setAttribute('value', '');
                            item.value = '';
                        }
                    } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion && _iterator.return) {
                                _iterator.return();
                            }
                        } finally {
                            if (_didIteratorError) {
                                throw _iteratorError;
                            }
                        }
                    }

                    form.reset();
                    this.state = this.global.form.button;
                    this.close();
                },
                close: function close() {
                    this.$emit("close");
                },
                submit: function submit(e) {
                    e.preventDefault();
                    //this.$el.querySelector('.form__button').blur();

                    this.state = this.global.form.button_sending;
                    console.log(this.state);

                    this.postNow();
                },
                postNow: function postNow() {
                    var _this = this;

                    var formData = new FormData(this.$el.querySelector('.vue-form'));

                    _axios2.default.post(this.postLink, formData, {headers: {'Content-Type': 'multipart/form-data'}}).then(function (r) {
                        console.log(r);
                        _this.state = _this.global.form.sended;
                        setTimeout(function () {
                            _this.clearForm();
                        }, 2000);
                    }).catch(function (e) {
                        console.log('error');
                        if (e) console.error(e);
                        _this.state = _this.global.form.error;
                        setTimeout(function () {
                            _this.clearForm();
                        }, 2000);
                    });
                }
            }
        };

        /***/
    }),
    /* 132 */
    /***/ (function (module, exports) {


        /***/
    }),
    /* 133 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        var globalMixin = exports.globalMixin = {
            methods: {
                //https://stackoverflow.com/questions/6784894/add-commas-or-spaces-to-group-every-three-digits
                spacify: function spacify(num) {
                    var str = num.toString().split('.');
                    if (str[0].length >= 5) {
                        str[0] = str[0].replace(/(\d)(?=(\d{3})+$)/g, '$1 ');
                    }
                    if (str[1] && str[1].length >= 5) {
                        str[1] = str[1].replace(/(\d{3})/g, '$1 ');
                    }
                    return str.join(' ');
                }
            }
        };

        /***/
    }),
    /* 134 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheCard_vue_vue_type_script_lang_js___ = __webpack_require__(135);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheCard_vue_vue_type_script_lang_js____default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheCard_vue_vue_type_script_lang_js___);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheCard_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheCard_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony default export */
        __webpack_exports__["default"] = (__WEBPACK_IMPORTED_MODULE_0__node_modules_babel_loader_lib_index_js_ref_0_node_modules_vue_loader_lib_index_js_vue_loader_options_TheCard_vue_vue_type_script_lang_js____default.a);

        /***/
    }),
    /* 135 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _PopUpFormSubmit = __webpack_require__(81);

        var _PopUpFormSubmit2 = _interopRequireDefault(_PopUpFormSubmit);

        var _globalMixin = __webpack_require__(133);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {default: obj};
        }

//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//
//

        exports.default = {
            name: 'TheCard',
            mixins: [_globalMixin.globalMixin],
            data: function data() {
                return {
                    openedPopUp: false
                };
            },

            components: {
                PopUpFormSubmit: _PopUpFormSubmit2.default
            },
            props: {
                items: {
                    type: Array,
                    required: true
                },
                global: {
                    type: Object,
                    required: true
                }
            },
            computed: {
                currentItem: function currentItem() {
                    return this.$store.state.current_item;
                },
                selectedItems: function selectedItems() {
                    return this.$store.state.selected[this.currentItem];
                },
                arrOfSelectedItems: function arrOfSelectedItems() {
                    var selectedItems = this.$store.state.selected;

                    var items = [];
                    for (var i in selectedItems) {
                        items.push(i);
                    }
                    ;

                    var arr = [];
                    for (var _i = 0; _i < items.length; _i++) {
                        arr.push(selectedItems[_i]);
                    }

                    var res = [];

                    for (var _i2 = 0; _i2 < items.length; _i2++) {
                        var walls = arr[_i2]['Стены'];
                        var flor = arr[_i2]['Полы'];
                        var dors = arr[_i2]['Двери'];
                        var additionals = arr[_i2]['Оборудование'];

                        for (var key in additionals) {
                            var check = additionals[key] === true ? this.items[_i2].filters[3].items[key] : null;
                            if (check !== null) res.push(check);
                        }

                        var florItem = null;
                        var dorsItem = null;
                        var wallItem = null;

                        if (this.items[_i2] !== undefined && this.items[_i2].filters[1] !== undefined) {
                            florItem = this.items[_i2].filters[1].items[flor];
                        }
                        if (this.items[_i2] !== undefined && this.items[_i2].filters[2] !== undefined) {
                            dorsItem = this.items[_i2].filters[2].items[dors];
                        }
                        if (this.items[_i2] !== undefined) {
                            wallItem = this.items[_i2].filters[0].items[walls];
                        }

                        if (florItem !== null) res.push(florItem);
                        if (dorsItem !== null) res.push(dorsItem);
                        if (wallItem !== null) res.push(wallItem);
                    }

                    var arrRes = [];
                    var _iteratorNormalCompletion = true;
                    var _didIteratorError = false;
                    var _iteratorError = undefined;

                    try {
                        for (var _iterator = res[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                            var item = _step.value;

                            arrRes.push([item.type, item.name]);
                        }
                    } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion && _iterator.return) {
                                _iterator.return();
                            }
                        } finally {
                            if (_didIteratorError) {
                                throw _iteratorError;
                            }
                        }
                    }

                    this.$store.commit('SET_ARR_RESULT', arrRes);

                    return res;
                },
                fullPrice: function fullPrice() {
                    var selectedItems = this.$store.state.selected,
                        flatPrice = this.global.flat_price,
                        flatSquare = this.global.flat_square,
                        squarePrice = this.global.square_price;

                    var total = flatPrice + flatSquare * squarePrice;

                    var sum = 0,
                        items = [],
                        arr = [];

                    sum += total;

                    for (var i in selectedItems) {
                        items.push(i);
                    }
                    ;

                    for (var _i3 = 0; _i3 < items.length; _i3++) {
                        arr.push(selectedItems[_i3]);
                    }

                    for (var _i4 = 0; _i4 < items.length; _i4++) {
                        var additionals = arr[_i4]['Оборудование'];

                        for (var key in additionals) {
                            sum += additionals[key] === true ? parseInt(this.items[_i4].filters[3].items[key].price) : 0;
                        }
                    }
                    this.$store.commit('SUM', sum);

                    return sum;
                }
            },
            methods: {
                deleteItem: function deleteItem(id) {
                    this.$store.commit('DELETE_EQUPMENT', id);
                }
            }

        };

        /***/
    }),
    /* 136 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        __webpack_require__(137);

        __webpack_require__(286);

        __webpack_require__(110);

        __webpack_require__(289);

        __webpack_require__(290);

        __webpack_require__(291);

        __webpack_require__(292);

        __webpack_require__(293);

        var _nouisliderMin = __webpack_require__(294);

        var _nouisliderMin2 = _interopRequireDefault(_nouisliderMin);

        var _wNumb = __webpack_require__(295);

        var _wNumb2 = _interopRequireDefault(_wNumb);

        var _objectFitImages = __webpack_require__(296);

        var _objectFitImages2 = _interopRequireDefault(_objectFitImages);

        __webpack_require__(297);

        __webpack_require__(298);

        __webpack_require__(299);

        __webpack_require__(300);

        __webpack_require__(301);

        __webpack_require__(302);

        __webpack_require__(303);

        __webpack_require__(304);

        __webpack_require__(305);

        __webpack_require__(306);

        __webpack_require__(307);

        __webpack_require__(308);

        __webpack_require__(309);

        __webpack_require__(310);

        __webpack_require__(111);

        __webpack_require__(311);

        __webpack_require__(312);

        __webpack_require__(313);

        __webpack_require__(314);

        __webpack_require__(315);

        __webpack_require__(316);

        __webpack_require__(317);

        __webpack_require__(318);

        __webpack_require__(319);

        __webpack_require__(320);

        __webpack_require__(321);

        __webpack_require__(322);

        __webpack_require__(323);

        __webpack_require__(324);

        __webpack_require__(325);

        var _commercialProperty = __webpack_require__(369);

        var _commercialProperty2 = _interopRequireDefault(_commercialProperty);

        __webpack_require__(370);

        var _get_in_touch_tabs = __webpack_require__(371);

        var _get_in_touch_tabs2 = _interopRequireDefault(_get_in_touch_tabs);

        var _Dropdown = __webpack_require__(372);

        var _Dropdown2 = _interopRequireDefault(_Dropdown);

        var _course_of_construction = __webpack_require__(373);

        var _course_of_construction2 = _interopRequireDefault(_course_of_construction);

        var _expandableList = __webpack_require__(374);

        var _article = __webpack_require__(375);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {default: obj};
        }

        window.noUiSlider = _nouisliderMin2.default;
        window.wNumb = _wNumb2.default;

// POLYFILL FOR IE IMG

        (0, _objectFitImages2.default)();
// import './components/fillTextToDiv.js';

// import Map from './components/mapCtrl';


// window.mapCtrl = function () {
//   new Map('map_contacts', 'main_pin.png');
//   new Map('map_land_purchase', 'main_pin.png', 'simple', 5);
// };

        var talanApp = {

            init: function init() {
                tools.init(['backgrounds', 'preloader', 'modals', 'tabs']);
                this.initPlugins();
            },
            initPlugins: function initPlugins() {
                if ($('.get_in_touch').length) {
                    var mobDropDown = new _Dropdown2.default();
                    var tabs = new _get_in_touch_tabs2.default('get_in_touch__tabs-btn');
                    var tabsMobile = new _get_in_touch_tabs2.default('dropdown_item__link');
                }

                if ($("[data-youtube]").length) {
                    videoCtrl.init();
                }

                if ($("#preloader").length) {
                    talanPreloader.init();
                }

                if ($("header").length) {
                    headerCtrl.init();
                }

                if ($("[data-scroll-down]").length) {
                    scrollDownCtrl.init();
                }

                if ($('[data-progress]').length) {
                    scaleCtrl.init();
                }

                if ($(".panel-menu").length) {
                    menuCtrl.init();
                }

                if ($('.poster').length) {
                    posterVideoCtrl.init();
                }

                if ($('.panel-menu, header, .complexes').length) {
                    menuDropdownCity.init();
                }

                if ($('.modals').length) {
                    popupCtrl.init();
                }

                if ($('[data-popup-city]').length) {
                    popupCityCtrl.init();
                }

                // wrap article $tables
                var $tables = $('.article table');
                if ($tables.length) (0, _article.wrapTables)($tables);

                // init expandable lists
                if ($('[data-list-show]').length) (0, _expandableList.expandableList)();

                if ($('[data-btn-advantage]').length) {
                    advantageMoreCtrl.init();
                }

                if ($('[data-btn-architect]').length) {
                    architectMoreCtrl.init();
                }

                if ($('[data-circle-progress]').length) {
                    circleProgress.init();
                }

                forms.init();

                if ($("[data-form]").length) {
                    formHandler.init();
                }

                if ($(".filters").length) {
                    searchFilters.init();
                }

                if ($("[data-custom-select]").length) {
                    customSelect.init();
                }

                if ($('.poster').length && !client.isMobile) {
                    customScroll.init();
                }

                // construction course
                var $ccContainer = $('.course_of_construction');
                if ($ccContainer.length) {
                    new _course_of_construction2.default($ccContainer);
                }

                // shares matchHeight
                var $shareCards = $('.shares__card');
                if ($shareCards.length) {
                    $shareCards.matchHeight();
                }

                // payment calc init
                if ($(".calc_form").length) {
                    paymentCalc.init();
                }

                if ($('.commercial__gallery').length) {
                    (0, _commercialProperty2.default)();
                }

                $(document).on('preloaderDone', function () {
                    new WOW({
                        offset: 50
                    }).init();
                });
            }
        };

        $(document).ready(function () {

            talanApp.init();

            if (client.isMobile) {
                var $poster = $('.poster');
                var posterHeight = $poster.height();
                $poster.css('height', posterHeight);
            } else {
                var $poster = $('.poster');
                var posterHeight = $poster.height();
                $poster.css('height', '100vh');
            }
            ;
        });

        $(window).on('resize', function () {
            if (client.isMobile) {
                var $poster = $('.poster');
                $poster.css('height', 'auto');
                var posterHeight = $poster.height();
                if (posterHeight > client.windowW) {
                    $poster.css('height', posterHeight);
                } else {
                    $poster.css('height', '100vh');
                }
                ;
            } else {
                var $poster = $('.poster');
                var posterHeight = $poster.height();
                $poster.css('height', '100vh');
            }
            ;
        });

        $(window).on('load', function () {
            setTimeout(function () {
                $('.preloader').addClass('preloader_done');
            }, 1500);
        });

        $(document).ready(function () {
            $('.questions__form input').on('focus', function (event) {
                var hidePopup = $('.popup_presentation');
                console.log(hidePopup);
                hidePopup.addClass('hide_popup');
            });
        });

        var is_safari = /^((?!chrome|android).)*safari/i.test(navigator.userAgent);

        /***/
    }),
    /* 137 */
    /***/ (function (module, exports, __webpack_require__) {

        __webpack_require__(138);
        __webpack_require__(141);
        __webpack_require__(142);
        __webpack_require__(143);
        __webpack_require__(144);
        __webpack_require__(145);
        __webpack_require__(146);
        __webpack_require__(147);
        __webpack_require__(148);
        __webpack_require__(149);
        __webpack_require__(150);
        __webpack_require__(151);
        __webpack_require__(152);
        __webpack_require__(153);
        __webpack_require__(154);
        __webpack_require__(155);
        __webpack_require__(157);
        __webpack_require__(158);
        __webpack_require__(159);
        __webpack_require__(160);
        __webpack_require__(161);
        __webpack_require__(162);
        __webpack_require__(163);
        __webpack_require__(164);
        __webpack_require__(165);
        __webpack_require__(166);
        __webpack_require__(167);
        __webpack_require__(168);
        __webpack_require__(169);
        __webpack_require__(170);
        __webpack_require__(171);
        __webpack_require__(172);
        __webpack_require__(173);
        __webpack_require__(174);
        __webpack_require__(175);
        __webpack_require__(176);
        __webpack_require__(177);
        __webpack_require__(178);
        __webpack_require__(179);
        __webpack_require__(180);
        __webpack_require__(181);
        __webpack_require__(182);
        __webpack_require__(183);
        __webpack_require__(185);
        __webpack_require__(186);
        __webpack_require__(187);
        __webpack_require__(188);
        __webpack_require__(189);
        __webpack_require__(190);
        __webpack_require__(191);
        __webpack_require__(192);
        __webpack_require__(193);
        __webpack_require__(194);
        __webpack_require__(195);
        __webpack_require__(196);
        __webpack_require__(197);
        __webpack_require__(198);
        __webpack_require__(199);
        __webpack_require__(200);
        __webpack_require__(201);
        __webpack_require__(202);
        __webpack_require__(203);
        __webpack_require__(204);
        __webpack_require__(205);
        __webpack_require__(206);
        __webpack_require__(207);
        __webpack_require__(208);
        __webpack_require__(209);
        __webpack_require__(210);
        __webpack_require__(211);
        __webpack_require__(212);
        __webpack_require__(213);
        __webpack_require__(214);
        __webpack_require__(215);
        __webpack_require__(216);
        __webpack_require__(217);
        __webpack_require__(218);
        __webpack_require__(220);
        __webpack_require__(221);
        __webpack_require__(223);
        __webpack_require__(224);
        __webpack_require__(225);
        __webpack_require__(226);
        __webpack_require__(227);
        __webpack_require__(228);
        __webpack_require__(229);
        __webpack_require__(232);
        __webpack_require__(233);
        __webpack_require__(234);
        __webpack_require__(235);
        __webpack_require__(236);
        __webpack_require__(237);
        __webpack_require__(238);
        __webpack_require__(239);
        __webpack_require__(240);
        __webpack_require__(241);
        __webpack_require__(242);
        __webpack_require__(243);
        __webpack_require__(244);
        __webpack_require__(102);
        __webpack_require__(245);
        __webpack_require__(246);
        __webpack_require__(104);
        __webpack_require__(247);
        __webpack_require__(248);
        __webpack_require__(249);
        __webpack_require__(250);
        __webpack_require__(251);
        __webpack_require__(256);
        __webpack_require__(257);
        __webpack_require__(258);
        __webpack_require__(259);
        __webpack_require__(260);
        __webpack_require__(261);
        __webpack_require__(262);
        __webpack_require__(263);
        __webpack_require__(264);
        __webpack_require__(265);
        __webpack_require__(266);
        __webpack_require__(267);
        __webpack_require__(268);
        __webpack_require__(269);
        __webpack_require__(270);
        __webpack_require__(271);
        __webpack_require__(272);
        __webpack_require__(273);
        __webpack_require__(274);
        __webpack_require__(275);
        __webpack_require__(276);
        __webpack_require__(277);
        __webpack_require__(278);
        __webpack_require__(279);
        __webpack_require__(280);
        __webpack_require__(281);
        __webpack_require__(283);
        __webpack_require__(284);
        __webpack_require__(285);
        module.exports = __webpack_require__(25);


        /***/
    }),
    /* 138 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// ECMAScript 6 symbols shim
        var global = __webpack_require__(3);
        var has = __webpack_require__(10);
        var DESCRIPTORS = __webpack_require__(7);
        var $export = __webpack_require__(0);
        var redefine = __webpack_require__(11);
        var META = __webpack_require__(27).KEY;
        var $fails = __webpack_require__(1);
        var shared = __webpack_require__(59);
        var setToStringTag = __webpack_require__(37);
        var uid = __webpack_require__(30);
        var wks = __webpack_require__(5);
        var wksExt = __webpack_require__(83);
        var wksDefine = __webpack_require__(139);
        var enumKeys = __webpack_require__(140);
        var isArray = __webpack_require__(63);
        var anObject = __webpack_require__(4);
        var isObject = __webpack_require__(2);
        var toIObject = __webpack_require__(16);
        var toPrimitive = __webpack_require__(26);
        var createDesc = __webpack_require__(29);
        var _create = __webpack_require__(33);
        var gOPNExt = __webpack_require__(86);
        var $GOPD = __webpack_require__(23);
        var $DP = __webpack_require__(6);
        var $keys = __webpack_require__(42);
        var gOPD = $GOPD.f;
        var dP = $DP.f;
        var gOPN = gOPNExt.f;
        var $Symbol = global.Symbol;
        var $JSON = global.JSON;
        var _stringify = $JSON && $JSON.stringify;
        var PROTOTYPE = 'prototype';
        var HIDDEN = wks('_hidden');
        var TO_PRIMITIVE = wks('toPrimitive');
        var isEnum = {}.propertyIsEnumerable;
        var SymbolRegistry = shared('symbol-registry');
        var AllSymbols = shared('symbols');
        var OPSymbols = shared('op-symbols');
        var ObjectProto = Object[PROTOTYPE];
        var USE_NATIVE = typeof $Symbol == 'function';
        var QObject = global.QObject;
// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
        var setter = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
        var setSymbolDesc = DESCRIPTORS && $fails(function () {
            return _create(dP({}, 'a', {
                get: function () {
                    return dP(this, 'a', {value: 7}).a;
                }
            })).a != 7;
        }) ? function (it, key, D) {
            var protoDesc = gOPD(ObjectProto, key);
            if (protoDesc) delete ObjectProto[key];
            dP(it, key, D);
            if (protoDesc && it !== ObjectProto) dP(ObjectProto, key, protoDesc);
        } : dP;

        var wrap = function (tag) {
            var sym = AllSymbols[tag] = _create($Symbol[PROTOTYPE]);
            sym._k = tag;
            return sym;
        };

        var isSymbol = USE_NATIVE && typeof $Symbol.iterator == 'symbol' ? function (it) {
            return typeof it == 'symbol';
        } : function (it) {
            return it instanceof $Symbol;
        };

        var $defineProperty = function defineProperty(it, key, D) {
            if (it === ObjectProto) $defineProperty(OPSymbols, key, D);
            anObject(it);
            key = toPrimitive(key, true);
            anObject(D);
            if (has(AllSymbols, key)) {
                if (!D.enumerable) {
                    if (!has(it, HIDDEN)) dP(it, HIDDEN, createDesc(1, {}));
                    it[HIDDEN][key] = true;
                } else {
                    if (has(it, HIDDEN) && it[HIDDEN][key]) it[HIDDEN][key] = false;
                    D = _create(D, {enumerable: createDesc(0, false)});
                }
                return setSymbolDesc(it, key, D);
            }
            return dP(it, key, D);
        };
        var $defineProperties = function defineProperties(it, P) {
            anObject(it);
            var keys = enumKeys(P = toIObject(P));
            var i = 0;
            var l = keys.length;
            var key;
            while (l > i) $defineProperty(it, key = keys[i++], P[key]);
            return it;
        };
        var $create = function create(it, P) {
            return P === undefined ? _create(it) : $defineProperties(_create(it), P);
        };
        var $propertyIsEnumerable = function propertyIsEnumerable(key) {
            var E = isEnum.call(this, key = toPrimitive(key, true));
            if (this === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return false;
            return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key] ? E : true;
        };
        var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key) {
            it = toIObject(it);
            key = toPrimitive(key, true);
            if (it === ObjectProto && has(AllSymbols, key) && !has(OPSymbols, key)) return;
            var D = gOPD(it, key);
            if (D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) D.enumerable = true;
            return D;
        };
        var $getOwnPropertyNames = function getOwnPropertyNames(it) {
            var names = gOPN(toIObject(it));
            var result = [];
            var i = 0;
            var key;
            while (names.length > i) {
                if (!has(AllSymbols, key = names[i++]) && key != HIDDEN && key != META) result.push(key);
            }
            return result;
        };
        var $getOwnPropertySymbols = function getOwnPropertySymbols(it) {
            var IS_OP = it === ObjectProto;
            var names = gOPN(IS_OP ? OPSymbols : toIObject(it));
            var result = [];
            var i = 0;
            var key;
            while (names.length > i) {
                if (has(AllSymbols, key = names[i++]) && (IS_OP ? has(ObjectProto, key) : true)) result.push(AllSymbols[key]);
            }
            return result;
        };

// 19.4.1.1 Symbol([description])
        if (!USE_NATIVE) {
            $Symbol = function Symbol() {
                if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor!');
                var tag = uid(arguments.length > 0 ? arguments[0] : undefined);
                var $set = function (value) {
                    if (this === ObjectProto) $set.call(OPSymbols, value);
                    if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
                    setSymbolDesc(this, tag, createDesc(1, value));
                };
                if (DESCRIPTORS && setter) setSymbolDesc(ObjectProto, tag, {configurable: true, set: $set});
                return wrap(tag);
            };
            redefine($Symbol[PROTOTYPE], 'toString', function toString() {
                return this._k;
            });

            $GOPD.f = $getOwnPropertyDescriptor;
            $DP.f = $defineProperty;
            __webpack_require__(34).f = gOPNExt.f = $getOwnPropertyNames;
            __webpack_require__(49).f = $propertyIsEnumerable;
            __webpack_require__(48).f = $getOwnPropertySymbols;

            if (DESCRIPTORS && !__webpack_require__(31)) {
                redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);
            }

            wksExt.f = function (name) {
                return wrap(wks(name));
            };
        }

        $export($export.G + $export.W + $export.F * !USE_NATIVE, {Symbol: $Symbol});

        for (var es6Symbols = (
            // 19.4.2.2, 19.4.2.3, 19.4.2.4, 19.4.2.6, 19.4.2.8, 19.4.2.9, 19.4.2.10, 19.4.2.11, 19.4.2.12, 19.4.2.13, 19.4.2.14
            'hasInstance,isConcatSpreadable,iterator,match,replace,search,species,split,toPrimitive,toStringTag,unscopables'
        ).split(','), j = 0; es6Symbols.length > j;) wks(es6Symbols[j++]);

        for (var wellKnownSymbols = $keys(wks.store), k = 0; wellKnownSymbols.length > k;) wksDefine(wellKnownSymbols[k++]);

        $export($export.S + $export.F * !USE_NATIVE, 'Symbol', {
            // 19.4.2.1 Symbol.for(key)
            'for': function (key) {
                return has(SymbolRegistry, key += '')
                    ? SymbolRegistry[key]
                    : SymbolRegistry[key] = $Symbol(key);
            },
            // 19.4.2.5 Symbol.keyFor(sym)
            keyFor: function keyFor(sym) {
                if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol!');
                for (var key in SymbolRegistry) if (SymbolRegistry[key] === sym) return key;
            },
            useSetter: function () {
                setter = true;
            },
            useSimple: function () {
                setter = false;
            }
        });

        $export($export.S + $export.F * !USE_NATIVE, 'Object', {
            // 19.1.2.2 Object.create(O [, Properties])
            create: $create,
            // 19.1.2.4 Object.defineProperty(O, P, Attributes)
            defineProperty: $defineProperty,
            // 19.1.2.3 Object.defineProperties(O, Properties)
            defineProperties: $defineProperties,
            // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
            getOwnPropertyDescriptor: $getOwnPropertyDescriptor,
            // 19.1.2.7 Object.getOwnPropertyNames(O)
            getOwnPropertyNames: $getOwnPropertyNames,
            // 19.1.2.8 Object.getOwnPropertySymbols(O)
            getOwnPropertySymbols: $getOwnPropertySymbols
        });

// 24.3.2 JSON.stringify(value [, replacer [, space]])
        $JSON && $export($export.S + $export.F * (!USE_NATIVE || $fails(function () {
            var S = $Symbol();
            // MS Edge converts symbol values to JSON as {}
            // WebKit converts symbol values to JSON as null
            // V8 throws on boxed symbols
            return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';
        })), 'JSON', {
            stringify: function stringify(it) {
                var args = [it];
                var i = 1;
                var replacer, $replacer;
                while (arguments.length > i) args.push(arguments[i++]);
                $replacer = replacer = args[1];
                if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
                if (!isArray(replacer)) replacer = function (key, value) {
                    if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
                    if (!isSymbol(value)) return value;
                };
                args[1] = replacer;
                return _stringify.apply($JSON, args);
            }
        });

// 19.4.3.4 Symbol.prototype[@@toPrimitive](hint)
        $Symbol[PROTOTYPE][TO_PRIMITIVE] || __webpack_require__(14)($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
// 19.4.3.5 Symbol.prototype[@@toStringTag]
        setToStringTag($Symbol, 'Symbol');
// 20.2.1.9 Math[@@toStringTag]
        setToStringTag(Math, 'Math', true);
// 24.3.3 JSON[@@toStringTag]
        setToStringTag(global.JSON, 'JSON', true);


        /***/
    }),
    /* 139 */
    /***/ (function (module, exports, __webpack_require__) {

        var global = __webpack_require__(3);
        var core = __webpack_require__(25);
        var LIBRARY = __webpack_require__(31);
        var wksExt = __webpack_require__(83);
        var defineProperty = __webpack_require__(6).f;
        module.exports = function (name) {
            var $Symbol = core.Symbol || (core.Symbol = LIBRARY ? {} : global.Symbol || {});
            if (name.charAt(0) != '_' && !(name in $Symbol)) defineProperty($Symbol, name, {value: wksExt.f(name)});
        };


        /***/
    }),
    /* 140 */
    /***/ (function (module, exports, __webpack_require__) {

// all enumerable object keys, includes symbols
        var getKeys = __webpack_require__(42);
        var gOPS = __webpack_require__(48);
        var pIE = __webpack_require__(49);
        module.exports = function (it) {
            var result = getKeys(it);
            var getSymbols = gOPS.f;
            if (getSymbols) {
                var symbols = getSymbols(it);
                var isEnum = pIE.f;
                var i = 0;
                var key;
                while (symbols.length > i) if (isEnum.call(it, key = symbols[i++])) result.push(key);
            }
            return result;
        };


        /***/
    }),
    /* 141 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);
// 19.1.2.2 / 15.2.3.5 Object.create(O [, Properties])
        $export($export.S, 'Object', {create: __webpack_require__(33)});


        /***/
    }),
    /* 142 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);
// 19.1.2.4 / 15.2.3.6 Object.defineProperty(O, P, Attributes)
        $export($export.S + $export.F * !__webpack_require__(7), 'Object', {defineProperty: __webpack_require__(6).f});


        /***/
    }),
    /* 143 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);
// 19.1.2.3 / 15.2.3.7 Object.defineProperties(O, Properties)
        $export($export.S + $export.F * !__webpack_require__(7), 'Object', {defineProperties: __webpack_require__(85)});


        /***/
    }),
    /* 144 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)
        var toIObject = __webpack_require__(16);
        var $getOwnPropertyDescriptor = __webpack_require__(23).f;

        __webpack_require__(17)('getOwnPropertyDescriptor', function () {
            return function getOwnPropertyDescriptor(it, key) {
                return $getOwnPropertyDescriptor(toIObject(it), key);
            };
        });


        /***/
    }),
    /* 145 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.9 Object.getPrototypeOf(O)
        var toObject = __webpack_require__(12);
        var $getPrototypeOf = __webpack_require__(35);

        __webpack_require__(17)('getPrototypeOf', function () {
            return function getPrototypeOf(it) {
                return $getPrototypeOf(toObject(it));
            };
        });


        /***/
    }),
    /* 146 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.14 Object.keys(O)
        var toObject = __webpack_require__(12);
        var $keys = __webpack_require__(42);

        __webpack_require__(17)('keys', function () {
            return function keys(it) {
                return $keys(toObject(it));
            };
        });


        /***/
    }),
    /* 147 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.7 Object.getOwnPropertyNames(O)
        __webpack_require__(17)('getOwnPropertyNames', function () {
            return __webpack_require__(86).f;
        });


        /***/
    }),
    /* 148 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.5 Object.freeze(O)
        var isObject = __webpack_require__(2);
        var meta = __webpack_require__(27).onFreeze;

        __webpack_require__(17)('freeze', function ($freeze) {
            return function freeze(it) {
                return $freeze && isObject(it) ? $freeze(meta(it)) : it;
            };
        });


        /***/
    }),
    /* 149 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.17 Object.seal(O)
        var isObject = __webpack_require__(2);
        var meta = __webpack_require__(27).onFreeze;

        __webpack_require__(17)('seal', function ($seal) {
            return function seal(it) {
                return $seal && isObject(it) ? $seal(meta(it)) : it;
            };
        });


        /***/
    }),
    /* 150 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.15 Object.preventExtensions(O)
        var isObject = __webpack_require__(2);
        var meta = __webpack_require__(27).onFreeze;

        __webpack_require__(17)('preventExtensions', function ($preventExtensions) {
            return function preventExtensions(it) {
                return $preventExtensions && isObject(it) ? $preventExtensions(meta(it)) : it;
            };
        });


        /***/
    }),
    /* 151 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.12 Object.isFrozen(O)
        var isObject = __webpack_require__(2);

        __webpack_require__(17)('isFrozen', function ($isFrozen) {
            return function isFrozen(it) {
                return isObject(it) ? $isFrozen ? $isFrozen(it) : false : true;
            };
        });


        /***/
    }),
    /* 152 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.13 Object.isSealed(O)
        var isObject = __webpack_require__(2);

        __webpack_require__(17)('isSealed', function ($isSealed) {
            return function isSealed(it) {
                return isObject(it) ? $isSealed ? $isSealed(it) : false : true;
            };
        });


        /***/
    }),
    /* 153 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.2.11 Object.isExtensible(O)
        var isObject = __webpack_require__(2);

        __webpack_require__(17)('isExtensible', function ($isExtensible) {
            return function isExtensible(it) {
                return isObject(it) ? $isExtensible ? $isExtensible(it) : true : false;
            };
        });


        /***/
    }),
    /* 154 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.3.1 Object.assign(target, source)
        var $export = __webpack_require__(0);

        $export($export.S + $export.F, 'Object', {assign: __webpack_require__(87)});


        /***/
    }),
    /* 155 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.3.10 Object.is(value1, value2)
        var $export = __webpack_require__(0);
        $export($export.S, 'Object', {is: __webpack_require__(156)});


        /***/
    }),
    /* 156 */
    /***/ (function (module, exports) {

// 7.2.9 SameValue(x, y)
        module.exports = Object.is || function is(x, y) {
            // eslint-disable-next-line no-self-compare
            return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
        };


        /***/
    }),
    /* 157 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.1.3.19 Object.setPrototypeOf(O, proto)
        var $export = __webpack_require__(0);
        $export($export.S, 'Object', {setPrototypeOf: __webpack_require__(65).set});


        /***/
    }),
    /* 158 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// 19.1.3.6 Object.prototype.toString()
        var classof = __webpack_require__(50);
        var test = {};
        test[__webpack_require__(5)('toStringTag')] = 'z';
        if (test + '' != '[object z]') {
            __webpack_require__(11)(Object.prototype, 'toString', function toString() {
                return '[object ' + classof(this) + ']';
            }, true);
        }


        /***/
    }),
    /* 159 */
    /***/ (function (module, exports, __webpack_require__) {

// 19.2.3.2 / 15.3.4.5 Function.prototype.bind(thisArg, args...)
        var $export = __webpack_require__(0);

        $export($export.P, 'Function', {bind: __webpack_require__(88)});


        /***/
    }),
    /* 160 */
    /***/ (function (module, exports, __webpack_require__) {

        var dP = __webpack_require__(6).f;
        var FProto = Function.prototype;
        var nameRE = /^\s*function ([^ (]*)/;
        var NAME = 'name';

// 19.2.4.2 name
        NAME in FProto || __webpack_require__(7) && dP(FProto, NAME, {
            configurable: true,
            get: function () {
                try {
                    return ('' + this).match(nameRE)[1];
                } catch (e) {
                    return '';
                }
            }
        });


        /***/
    }),
    /* 161 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var isObject = __webpack_require__(2);
        var getPrototypeOf = __webpack_require__(35);
        var HAS_INSTANCE = __webpack_require__(5)('hasInstance');
        var FunctionProto = Function.prototype;
// 19.2.3.6 Function.prototype[@@hasInstance](V)
        if (!(HAS_INSTANCE in FunctionProto)) __webpack_require__(6).f(FunctionProto, HAS_INSTANCE, {
            value: function (O) {
                if (typeof this != 'function' || !isObject(O)) return false;
                if (!isObject(this.prototype)) return O instanceof this;
                // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
                while (O = getPrototypeOf(O)) if (this.prototype === O) return true;
                return false;
            }
        });


        /***/
    }),
    /* 162 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);
        var $parseInt = __webpack_require__(90);
// 18.2.5 parseInt(string, radix)
        $export($export.G + $export.F * (parseInt != $parseInt), {parseInt: $parseInt});


        /***/
    }),
    /* 163 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);
        var $parseFloat = __webpack_require__(91);
// 18.2.4 parseFloat(string)
        $export($export.G + $export.F * (parseFloat != $parseFloat), {parseFloat: $parseFloat});


        /***/
    }),
    /* 164 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var global = __webpack_require__(3);
        var has = __webpack_require__(10);
        var cof = __webpack_require__(21);
        var inheritIfRequired = __webpack_require__(67);
        var toPrimitive = __webpack_require__(26);
        var fails = __webpack_require__(1);
        var gOPN = __webpack_require__(34).f;
        var gOPD = __webpack_require__(23).f;
        var dP = __webpack_require__(6).f;
        var $trim = __webpack_require__(51).trim;
        var NUMBER = 'Number';
        var $Number = global[NUMBER];
        var Base = $Number;
        var proto = $Number.prototype;
// Opera ~12 has broken Object#toString
        var BROKEN_COF = cof(__webpack_require__(33)(proto)) == NUMBER;
        var TRIM = 'trim' in String.prototype;

// 7.1.3 ToNumber(argument)
        var toNumber = function (argument) {
            var it = toPrimitive(argument, false);
            if (typeof it == 'string' && it.length > 2) {
                it = TRIM ? it.trim() : $trim(it, 3);
                var first = it.charCodeAt(0);
                var third, radix, maxCode;
                if (first === 43 || first === 45) {
                    third = it.charCodeAt(2);
                    if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
                } else if (first === 48) {
                    switch (it.charCodeAt(1)) {
                        case 66:
                        case 98:
                            radix = 2;
                            maxCode = 49;
                            break; // fast equal /^0b[01]+$/i
                        case 79:
                        case 111:
                            radix = 8;
                            maxCode = 55;
                            break; // fast equal /^0o[0-7]+$/i
                        default:
                            return +it;
                    }
                    for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {
                        code = digits.charCodeAt(i);
                        // parseInt parses a string to a first unavailable symbol
                        // but ToNumber should return NaN if a string contains unavailable symbols
                        if (code < 48 || code > maxCode) return NaN;
                    }
                    return parseInt(digits, radix);
                }
            }
            return +it;
        };

        if (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {
            $Number = function Number(value) {
                var it = arguments.length < 1 ? 0 : value;
                var that = this;
                return that instanceof $Number
                // check on 1..constructor(foo) case
                && (BROKEN_COF ? fails(function () {
                    proto.valueOf.call(that);
                }) : cof(that) != NUMBER)
                    ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);
            };
            for (var keys = __webpack_require__(7) ? gOPN(Base) : (
                // ES3:
                'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
                // ES6 (in case, if modules with ES6 Number statics required before):
                'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +
                'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'
            ).split(','), j = 0, key; keys.length > j; j++) {
                if (has(Base, key = keys[j]) && !has($Number, key)) {
                    dP($Number, key, gOPD(Base, key));
                }
            }
            $Number.prototype = proto;
            proto.constructor = $Number;
            __webpack_require__(11)(global, NUMBER, $Number);
        }


        /***/
    }),
    /* 165 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var toInteger = __webpack_require__(22);
        var aNumberValue = __webpack_require__(92);
        var repeat = __webpack_require__(93);
        var $toFixed = 1.0.toFixed;
        var floor = Math.floor;
        var data = [0, 0, 0, 0, 0, 0];
        var ERROR = 'Number.toFixed: incorrect invocation!';
        var ZERO = '0';

        var multiply = function (n, c) {
            var i = -1;
            var c2 = c;
            while (++i < 6) {
                c2 += n * data[i];
                data[i] = c2 % 1e7;
                c2 = floor(c2 / 1e7);
            }
        };
        var divide = function (n) {
            var i = 6;
            var c = 0;
            while (--i >= 0) {
                c += data[i];
                data[i] = floor(c / n);
                c = (c % n) * 1e7;
            }
        };
        var numToString = function () {
            var i = 6;
            var s = '';
            while (--i >= 0) {
                if (s !== '' || i === 0 || data[i] !== 0) {
                    var t = String(data[i]);
                    s = s === '' ? t : s + repeat.call(ZERO, 7 - t.length) + t;
                }
            }
            return s;
        };
        var pow = function (x, n, acc) {
            return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
        };
        var log = function (x) {
            var n = 0;
            var x2 = x;
            while (x2 >= 4096) {
                n += 12;
                x2 /= 4096;
            }
            while (x2 >= 2) {
                n += 1;
                x2 /= 2;
            }
            return n;
        };

        $export($export.P + $export.F * (!!$toFixed && (
            0.00008.toFixed(3) !== '0.000' ||
            0.9.toFixed(0) !== '1' ||
            1.255.toFixed(2) !== '1.25' ||
            1000000000000000128.0.toFixed(0) !== '1000000000000000128'
        ) || !__webpack_require__(1)(function () {
            // V8 ~ Android 4.3-
            $toFixed.call({});
        })), 'Number', {
            toFixed: function toFixed(fractionDigits) {
                var x = aNumberValue(this, ERROR);
                var f = toInteger(fractionDigits);
                var s = '';
                var m = ZERO;
                var e, z, j, k;
                if (f < 0 || f > 20) throw RangeError(ERROR);
                // eslint-disable-next-line no-self-compare
                if (x != x) return 'NaN';
                if (x <= -1e21 || x >= 1e21) return String(x);
                if (x < 0) {
                    s = '-';
                    x = -x;
                }
                if (x > 1e-21) {
                    e = log(x * pow(2, 69, 1)) - 69;
                    z = e < 0 ? x * pow(2, -e, 1) : x / pow(2, e, 1);
                    z *= 0x10000000000000;
                    e = 52 - e;
                    if (e > 0) {
                        multiply(0, z);
                        j = f;
                        while (j >= 7) {
                            multiply(1e7, 0);
                            j -= 7;
                        }
                        multiply(pow(10, j, 1), 0);
                        j = e - 1;
                        while (j >= 23) {
                            divide(1 << 23);
                            j -= 23;
                        }
                        divide(1 << j);
                        multiply(1, 1);
                        divide(2);
                        m = numToString();
                    } else {
                        multiply(0, z);
                        multiply(1 << -e, 0);
                        m = numToString() + repeat.call(ZERO, f);
                    }
                }
                if (f > 0) {
                    k = m.length;
                    m = s + (k <= f ? '0.' + repeat.call(ZERO, f - k) + m : m.slice(0, k - f) + '.' + m.slice(k - f));
                } else {
                    m = s + m;
                }
                return m;
            }
        });


        /***/
    }),
    /* 166 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var $fails = __webpack_require__(1);
        var aNumberValue = __webpack_require__(92);
        var $toPrecision = 1.0.toPrecision;

        $export($export.P + $export.F * ($fails(function () {
            // IE7-
            return $toPrecision.call(1, undefined) !== '1';
        }) || !$fails(function () {
            // V8 ~ Android 4.3-
            $toPrecision.call({});
        })), 'Number', {
            toPrecision: function toPrecision(precision) {
                var that = aNumberValue(this, 'Number#toPrecision: incorrect invocation!');
                return precision === undefined ? $toPrecision.call(that) : $toPrecision.call(that, precision);
            }
        });


        /***/
    }),
    /* 167 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.1.2.1 Number.EPSILON
        var $export = __webpack_require__(0);

        $export($export.S, 'Number', {EPSILON: Math.pow(2, -52)});


        /***/
    }),
    /* 168 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.1.2.2 Number.isFinite(number)
        var $export = __webpack_require__(0);
        var _isFinite = __webpack_require__(3).isFinite;

        $export($export.S, 'Number', {
            isFinite: function isFinite(it) {
                return typeof it == 'number' && _isFinite(it);
            }
        });


        /***/
    }),
    /* 169 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.1.2.3 Number.isInteger(number)
        var $export = __webpack_require__(0);

        $export($export.S, 'Number', {isInteger: __webpack_require__(94)});


        /***/
    }),
    /* 170 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.1.2.4 Number.isNaN(number)
        var $export = __webpack_require__(0);

        $export($export.S, 'Number', {
            isNaN: function isNaN(number) {
                // eslint-disable-next-line no-self-compare
                return number != number;
            }
        });


        /***/
    }),
    /* 171 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.1.2.5 Number.isSafeInteger(number)
        var $export = __webpack_require__(0);
        var isInteger = __webpack_require__(94);
        var abs = Math.abs;

        $export($export.S, 'Number', {
            isSafeInteger: function isSafeInteger(number) {
                return isInteger(number) && abs(number) <= 0x1fffffffffffff;
            }
        });


        /***/
    }),
    /* 172 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.1.2.6 Number.MAX_SAFE_INTEGER
        var $export = __webpack_require__(0);

        $export($export.S, 'Number', {MAX_SAFE_INTEGER: 0x1fffffffffffff});


        /***/
    }),
    /* 173 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.1.2.10 Number.MIN_SAFE_INTEGER
        var $export = __webpack_require__(0);

        $export($export.S, 'Number', {MIN_SAFE_INTEGER: -0x1fffffffffffff});


        /***/
    }),
    /* 174 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);
        var $parseFloat = __webpack_require__(91);
// 20.1.2.12 Number.parseFloat(string)
        $export($export.S + $export.F * (Number.parseFloat != $parseFloat), 'Number', {parseFloat: $parseFloat});


        /***/
    }),
    /* 175 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);
        var $parseInt = __webpack_require__(90);
// 20.1.2.13 Number.parseInt(string, radix)
        $export($export.S + $export.F * (Number.parseInt != $parseInt), 'Number', {parseInt: $parseInt});


        /***/
    }),
    /* 176 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.3 Math.acosh(x)
        var $export = __webpack_require__(0);
        var log1p = __webpack_require__(95);
        var sqrt = Math.sqrt;
        var $acosh = Math.acosh;

        $export($export.S + $export.F * !($acosh
            // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
            && Math.floor($acosh(Number.MAX_VALUE)) == 710
            // Tor Browser bug: Math.acosh(Infinity) -> NaN
            && $acosh(Infinity) == Infinity
        ), 'Math', {
            acosh: function acosh(x) {
                return (x = +x) < 1 ? NaN : x > 94906265.62425156
                    ? Math.log(x) + Math.LN2
                    : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
            }
        });


        /***/
    }),
    /* 177 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.5 Math.asinh(x)
        var $export = __webpack_require__(0);
        var $asinh = Math.asinh;

        function asinh(x) {
            return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : Math.log(x + Math.sqrt(x * x + 1));
        }

// Tor Browser bug: Math.asinh(0) -> -0
        $export($export.S + $export.F * !($asinh && 1 / $asinh(0) > 0), 'Math', {asinh: asinh});


        /***/
    }),
    /* 178 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.7 Math.atanh(x)
        var $export = __webpack_require__(0);
        var $atanh = Math.atanh;

// Tor Browser bug: Math.atanh(-0) -> 0
        $export($export.S + $export.F * !($atanh && 1 / $atanh(-0) < 0), 'Math', {
            atanh: function atanh(x) {
                return (x = +x) == 0 ? x : Math.log((1 + x) / (1 - x)) / 2;
            }
        });


        /***/
    }),
    /* 179 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.9 Math.cbrt(x)
        var $export = __webpack_require__(0);
        var sign = __webpack_require__(68);

        $export($export.S, 'Math', {
            cbrt: function cbrt(x) {
                return sign(x = +x) * Math.pow(Math.abs(x), 1 / 3);
            }
        });


        /***/
    }),
    /* 180 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.11 Math.clz32(x)
        var $export = __webpack_require__(0);

        $export($export.S, 'Math', {
            clz32: function clz32(x) {
                return (x >>>= 0) ? 31 - Math.floor(Math.log(x + 0.5) * Math.LOG2E) : 32;
            }
        });


        /***/
    }),
    /* 181 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.12 Math.cosh(x)
        var $export = __webpack_require__(0);
        var exp = Math.exp;

        $export($export.S, 'Math', {
            cosh: function cosh(x) {
                return (exp(x = +x) + exp(-x)) / 2;
            }
        });


        /***/
    }),
    /* 182 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.14 Math.expm1(x)
        var $export = __webpack_require__(0);
        var $expm1 = __webpack_require__(69);

        $export($export.S + $export.F * ($expm1 != Math.expm1), 'Math', {expm1: $expm1});


        /***/
    }),
    /* 183 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.16 Math.fround(x)
        var $export = __webpack_require__(0);

        $export($export.S, 'Math', {fround: __webpack_require__(184)});


        /***/
    }),
    /* 184 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.16 Math.fround(x)
        var sign = __webpack_require__(68);
        var pow = Math.pow;
        var EPSILON = pow(2, -52);
        var EPSILON32 = pow(2, -23);
        var MAX32 = pow(2, 127) * (2 - EPSILON32);
        var MIN32 = pow(2, -126);

        var roundTiesToEven = function (n) {
            return n + 1 / EPSILON - 1 / EPSILON;
        };

        module.exports = Math.fround || function fround(x) {
            var $abs = Math.abs(x);
            var $sign = sign(x);
            var a, result;
            if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
            a = (1 + EPSILON32 / EPSILON) * $abs;
            result = a - (a - $abs);
            // eslint-disable-next-line no-self-compare
            if (result > MAX32 || result != result) return $sign * Infinity;
            return $sign * result;
        };


        /***/
    }),
    /* 185 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.17 Math.hypot([value1[, value2[, … ]]])
        var $export = __webpack_require__(0);
        var abs = Math.abs;

        $export($export.S, 'Math', {
            hypot: function hypot(value1, value2) { // eslint-disable-line no-unused-vars
                var sum = 0;
                var i = 0;
                var aLen = arguments.length;
                var larg = 0;
                var arg, div;
                while (i < aLen) {
                    arg = abs(arguments[i++]);
                    if (larg < arg) {
                        div = larg / arg;
                        sum = sum * div * div + 1;
                        larg = arg;
                    } else if (arg > 0) {
                        div = arg / larg;
                        sum += div * div;
                    } else sum += arg;
                }
                return larg === Infinity ? Infinity : larg * Math.sqrt(sum);
            }
        });


        /***/
    }),
    /* 186 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.18 Math.imul(x, y)
        var $export = __webpack_require__(0);
        var $imul = Math.imul;

// some WebKit versions fails with big numbers, some has wrong arity
        $export($export.S + $export.F * __webpack_require__(1)(function () {
            return $imul(0xffffffff, 5) != -5 || $imul.length != 2;
        }), 'Math', {
            imul: function imul(x, y) {
                var UINT16 = 0xffff;
                var xn = +x;
                var yn = +y;
                var xl = UINT16 & xn;
                var yl = UINT16 & yn;
                return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
            }
        });


        /***/
    }),
    /* 187 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.21 Math.log10(x)
        var $export = __webpack_require__(0);

        $export($export.S, 'Math', {
            log10: function log10(x) {
                return Math.log(x) * Math.LOG10E;
            }
        });


        /***/
    }),
    /* 188 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.20 Math.log1p(x)
        var $export = __webpack_require__(0);

        $export($export.S, 'Math', {log1p: __webpack_require__(95)});


        /***/
    }),
    /* 189 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.22 Math.log2(x)
        var $export = __webpack_require__(0);

        $export($export.S, 'Math', {
            log2: function log2(x) {
                return Math.log(x) / Math.LN2;
            }
        });


        /***/
    }),
    /* 190 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.28 Math.sign(x)
        var $export = __webpack_require__(0);

        $export($export.S, 'Math', {sign: __webpack_require__(68)});


        /***/
    }),
    /* 191 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.30 Math.sinh(x)
        var $export = __webpack_require__(0);
        var expm1 = __webpack_require__(69);
        var exp = Math.exp;

// V8 near Chromium 38 has a problem with very small numbers
        $export($export.S + $export.F * __webpack_require__(1)(function () {
            return !Math.sinh(-2e-17) != -2e-17;
        }), 'Math', {
            sinh: function sinh(x) {
                return Math.abs(x = +x) < 1
                    ? (expm1(x) - expm1(-x)) / 2
                    : (exp(x - 1) - exp(-x - 1)) * (Math.E / 2);
            }
        });


        /***/
    }),
    /* 192 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.33 Math.tanh(x)
        var $export = __webpack_require__(0);
        var expm1 = __webpack_require__(69);
        var exp = Math.exp;

        $export($export.S, 'Math', {
            tanh: function tanh(x) {
                var a = expm1(x = +x);
                var b = expm1(-x);
                return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
            }
        });


        /***/
    }),
    /* 193 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.2.2.34 Math.trunc(x)
        var $export = __webpack_require__(0);

        $export($export.S, 'Math', {
            trunc: function trunc(it) {
                return (it > 0 ? Math.floor : Math.ceil)(it);
            }
        });


        /***/
    }),
    /* 194 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);
        var toAbsoluteIndex = __webpack_require__(32);
        var fromCharCode = String.fromCharCode;
        var $fromCodePoint = String.fromCodePoint;

// length should be 1, old FF problem
        $export($export.S + $export.F * (!!$fromCodePoint && $fromCodePoint.length != 1), 'String', {
            // 21.1.2.2 String.fromCodePoint(...codePoints)
            fromCodePoint: function fromCodePoint(x) { // eslint-disable-line no-unused-vars
                var res = [];
                var aLen = arguments.length;
                var i = 0;
                var code;
                while (aLen > i) {
                    code = +arguments[i++];
                    if (toAbsoluteIndex(code, 0x10ffff) !== code) throw RangeError(code + ' is not a valid code point');
                    res.push(code < 0x10000
                        ? fromCharCode(code)
                        : fromCharCode(((code -= 0x10000) >> 10) + 0xd800, code % 0x400 + 0xdc00)
                    );
                }
                return res.join('');
            }
        });


        /***/
    }),
    /* 195 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);
        var toIObject = __webpack_require__(16);
        var toLength = __webpack_require__(8);

        $export($export.S, 'String', {
            // 21.1.2.4 String.raw(callSite, ...substitutions)
            raw: function raw(callSite) {
                var tpl = toIObject(callSite.raw);
                var len = toLength(tpl.length);
                var aLen = arguments.length;
                var res = [];
                var i = 0;
                while (len > i) {
                    res.push(String(tpl[i++]));
                    if (i < aLen) res.push(String(arguments[i]));
                }
                return res.join('');
            }
        });


        /***/
    }),
    /* 196 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// 21.1.3.25 String.prototype.trim()
        __webpack_require__(51)('trim', function ($trim) {
            return function trim() {
                return $trim(this, 3);
            };
        });


        /***/
    }),
    /* 197 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $at = __webpack_require__(96)(true);

// 21.1.3.27 String.prototype[@@iterator]()
        __webpack_require__(70)(String, 'String', function (iterated) {
            this._t = String(iterated); // target
            this._i = 0;                // next index
// 21.1.5.2.1 %StringIteratorPrototype%.next()
        }, function () {
            var O = this._t;
            var index = this._i;
            var point;
            if (index >= O.length) return {value: undefined, done: true};
            point = $at(O, index);
            this._i += point.length;
            return {value: point, done: false};
        });


        /***/
    }),
    /* 198 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var $at = __webpack_require__(96)(false);
        $export($export.P, 'String', {
            // 21.1.3.3 String.prototype.codePointAt(pos)
            codePointAt: function codePointAt(pos) {
                return $at(this, pos);
            }
        });


        /***/
    }),
    /* 199 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";
// 21.1.3.6 String.prototype.endsWith(searchString [, endPosition])

        var $export = __webpack_require__(0);
        var toLength = __webpack_require__(8);
        var context = __webpack_require__(71);
        var ENDS_WITH = 'endsWith';
        var $endsWith = ''[ENDS_WITH];

        $export($export.P + $export.F * __webpack_require__(73)(ENDS_WITH), 'String', {
            endsWith: function endsWith(searchString /* , endPosition = @length */) {
                var that = context(this, searchString, ENDS_WITH);
                var endPosition = arguments.length > 1 ? arguments[1] : undefined;
                var len = toLength(that.length);
                var end = endPosition === undefined ? len : Math.min(toLength(endPosition), len);
                var search = String(searchString);
                return $endsWith
                    ? $endsWith.call(that, search, end)
                    : that.slice(end - search.length, end) === search;
            }
        });


        /***/
    }),
    /* 200 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";
// 21.1.3.7 String.prototype.includes(searchString, position = 0)

        var $export = __webpack_require__(0);
        var context = __webpack_require__(71);
        var INCLUDES = 'includes';

        $export($export.P + $export.F * __webpack_require__(73)(INCLUDES), 'String', {
            includes: function includes(searchString /* , position = 0 */) {
                return !!~context(this, searchString, INCLUDES)
                    .indexOf(searchString, arguments.length > 1 ? arguments[1] : undefined);
            }
        });


        /***/
    }),
    /* 201 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);

        $export($export.P, 'String', {
            // 21.1.3.13 String.prototype.repeat(count)
            repeat: __webpack_require__(93)
        });


        /***/
    }),
    /* 202 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";
// 21.1.3.18 String.prototype.startsWith(searchString [, position ])

        var $export = __webpack_require__(0);
        var toLength = __webpack_require__(8);
        var context = __webpack_require__(71);
        var STARTS_WITH = 'startsWith';
        var $startsWith = ''[STARTS_WITH];

        $export($export.P + $export.F * __webpack_require__(73)(STARTS_WITH), 'String', {
            startsWith: function startsWith(searchString /* , position = 0 */) {
                var that = context(this, searchString, STARTS_WITH);
                var index = toLength(Math.min(arguments.length > 1 ? arguments[1] : undefined, that.length));
                var search = String(searchString);
                return $startsWith
                    ? $startsWith.call(that, search, index)
                    : that.slice(index, index + search.length) === search;
            }
        });


        /***/
    }),
    /* 203 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.2 String.prototype.anchor(name)
        __webpack_require__(9)('anchor', function (createHTML) {
            return function anchor(name) {
                return createHTML(this, 'a', 'name', name);
            };
        });


        /***/
    }),
    /* 204 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.3 String.prototype.big()
        __webpack_require__(9)('big', function (createHTML) {
            return function big() {
                return createHTML(this, 'big', '', '');
            };
        });


        /***/
    }),
    /* 205 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.4 String.prototype.blink()
        __webpack_require__(9)('blink', function (createHTML) {
            return function blink() {
                return createHTML(this, 'blink', '', '');
            };
        });


        /***/
    }),
    /* 206 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.5 String.prototype.bold()
        __webpack_require__(9)('bold', function (createHTML) {
            return function bold() {
                return createHTML(this, 'b', '', '');
            };
        });


        /***/
    }),
    /* 207 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.6 String.prototype.fixed()
        __webpack_require__(9)('fixed', function (createHTML) {
            return function fixed() {
                return createHTML(this, 'tt', '', '');
            };
        });


        /***/
    }),
    /* 208 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.7 String.prototype.fontcolor(color)
        __webpack_require__(9)('fontcolor', function (createHTML) {
            return function fontcolor(color) {
                return createHTML(this, 'font', 'color', color);
            };
        });


        /***/
    }),
    /* 209 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.8 String.prototype.fontsize(size)
        __webpack_require__(9)('fontsize', function (createHTML) {
            return function fontsize(size) {
                return createHTML(this, 'font', 'size', size);
            };
        });


        /***/
    }),
    /* 210 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.9 String.prototype.italics()
        __webpack_require__(9)('italics', function (createHTML) {
            return function italics() {
                return createHTML(this, 'i', '', '');
            };
        });


        /***/
    }),
    /* 211 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.10 String.prototype.link(url)
        __webpack_require__(9)('link', function (createHTML) {
            return function link(url) {
                return createHTML(this, 'a', 'href', url);
            };
        });


        /***/
    }),
    /* 212 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.11 String.prototype.small()
        __webpack_require__(9)('small', function (createHTML) {
            return function small() {
                return createHTML(this, 'small', '', '');
            };
        });


        /***/
    }),
    /* 213 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.12 String.prototype.strike()
        __webpack_require__(9)('strike', function (createHTML) {
            return function strike() {
                return createHTML(this, 'strike', '', '');
            };
        });


        /***/
    }),
    /* 214 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.13 String.prototype.sub()
        __webpack_require__(9)('sub', function (createHTML) {
            return function sub() {
                return createHTML(this, 'sub', '', '');
            };
        });


        /***/
    }),
    /* 215 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// B.2.3.14 String.prototype.sup()
        __webpack_require__(9)('sup', function (createHTML) {
            return function sup() {
                return createHTML(this, 'sup', '', '');
            };
        });


        /***/
    }),
    /* 216 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.3.3.1 / 15.9.4.4 Date.now()
        var $export = __webpack_require__(0);

        $export($export.S, 'Date', {
            now: function () {
                return new Date().getTime();
            }
        });


        /***/
    }),
    /* 217 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var toObject = __webpack_require__(12);
        var toPrimitive = __webpack_require__(26);

        $export($export.P + $export.F * __webpack_require__(1)(function () {
            return new Date(NaN).toJSON() !== null
                || Date.prototype.toJSON.call({
                    toISOString: function () {
                        return 1;
                    }
                }) !== 1;
        }), 'Date', {
            // eslint-disable-next-line no-unused-vars
            toJSON: function toJSON(key) {
                var O = toObject(this);
                var pv = toPrimitive(O);
                return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
            }
        });


        /***/
    }),
    /* 218 */
    /***/ (function (module, exports, __webpack_require__) {

// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
        var $export = __webpack_require__(0);
        var toISOString = __webpack_require__(219);

// PhantomJS / old WebKit has a broken implementations
        $export($export.P + $export.F * (Date.prototype.toISOString !== toISOString), 'Date', {
            toISOString: toISOString
        });


        /***/
    }),
    /* 219 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// 20.3.4.36 / 15.9.5.43 Date.prototype.toISOString()
        var fails = __webpack_require__(1);
        var getTime = Date.prototype.getTime;
        var $toISOString = Date.prototype.toISOString;

        var lz = function (num) {
            return num > 9 ? num : '0' + num;
        };

// PhantomJS / old WebKit has a broken implementations
        module.exports = (fails(function () {
            return $toISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
        }) || !fails(function () {
            $toISOString.call(new Date(NaN));
        })) ? function toISOString() {
            if (!isFinite(getTime.call(this))) throw RangeError('Invalid time value');
            var d = this;
            var y = d.getUTCFullYear();
            var m = d.getUTCMilliseconds();
            var s = y < 0 ? '-' : y > 9999 ? '+' : '';
            return s + ('00000' + Math.abs(y)).slice(s ? -6 : -4) +
                '-' + lz(d.getUTCMonth() + 1) + '-' + lz(d.getUTCDate()) +
                'T' + lz(d.getUTCHours()) + ':' + lz(d.getUTCMinutes()) +
                ':' + lz(d.getUTCSeconds()) + '.' + (m > 99 ? m : '0' + lz(m)) + 'Z';
        } : $toISOString;


        /***/
    }),
    /* 220 */
    /***/ (function (module, exports, __webpack_require__) {

        var DateProto = Date.prototype;
        var INVALID_DATE = 'Invalid Date';
        var TO_STRING = 'toString';
        var $toString = DateProto[TO_STRING];
        var getTime = DateProto.getTime;
        if (new Date(NaN) + '' != INVALID_DATE) {
            __webpack_require__(11)(DateProto, TO_STRING, function toString() {
                var value = getTime.call(this);
                // eslint-disable-next-line no-self-compare
                return value === value ? $toString.call(this) : INVALID_DATE;
            });
        }


        /***/
    }),
    /* 221 */
    /***/ (function (module, exports, __webpack_require__) {

        var TO_PRIMITIVE = __webpack_require__(5)('toPrimitive');
        var proto = Date.prototype;

        if (!(TO_PRIMITIVE in proto)) __webpack_require__(14)(proto, TO_PRIMITIVE, __webpack_require__(222));


        /***/
    }),
    /* 222 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var anObject = __webpack_require__(4);
        var toPrimitive = __webpack_require__(26);
        var NUMBER = 'number';

        module.exports = function (hint) {
            if (hint !== 'string' && hint !== NUMBER && hint !== 'default') throw TypeError('Incorrect hint');
            return toPrimitive(anObject(this), hint != NUMBER);
        };


        /***/
    }),
    /* 223 */
    /***/ (function (module, exports, __webpack_require__) {

// 22.1.2.2 / 15.4.3.2 Array.isArray(arg)
        var $export = __webpack_require__(0);

        $export($export.S, 'Array', {isArray: __webpack_require__(63)});


        /***/
    }),
    /* 224 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var ctx = __webpack_require__(19);
        var $export = __webpack_require__(0);
        var toObject = __webpack_require__(12);
        var call = __webpack_require__(98);
        var isArrayIter = __webpack_require__(74);
        var toLength = __webpack_require__(8);
        var createProperty = __webpack_require__(99);
        var getIterFn = __webpack_require__(75);

        $export($export.S + $export.F * !__webpack_require__(52)(function (iter) {
            Array.from(iter);
        }), 'Array', {
            // 22.1.2.1 Array.from(arrayLike, mapfn = undefined, thisArg = undefined)
            from: function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
                var O = toObject(arrayLike);
                var C = typeof this == 'function' ? this : Array;
                var aLen = arguments.length;
                var mapfn = aLen > 1 ? arguments[1] : undefined;
                var mapping = mapfn !== undefined;
                var index = 0;
                var iterFn = getIterFn(O);
                var length, result, step, iterator;
                if (mapping) mapfn = ctx(mapfn, aLen > 2 ? arguments[2] : undefined, 2);
                // if object isn't iterable or it's array with default iterator - use simple case
                if (iterFn != undefined && !(C == Array && isArrayIter(iterFn))) {
                    for (iterator = iterFn.call(O), result = new C(); !(step = iterator.next()).done; index++) {
                        createProperty(result, index, mapping ? call(iterator, mapfn, [step.value, index], true) : step.value);
                    }
                } else {
                    length = toLength(O.length);
                    for (result = new C(length); length > index; index++) {
                        createProperty(result, index, mapping ? mapfn(O[index], index) : O[index]);
                    }
                }
                result.length = index;
                return result;
            }
        });


        /***/
    }),
    /* 225 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var createProperty = __webpack_require__(99);

// WebKit Array.of isn't generic
        $export($export.S + $export.F * __webpack_require__(1)(function () {
            function F() { /* empty */
            }

            return !(Array.of.call(F) instanceof F);
        }), 'Array', {
            // 22.1.2.3 Array.of( ...items)
            of: function of(/* ...args */) {
                var index = 0;
                var aLen = arguments.length;
                var result = new (typeof this == 'function' ? this : Array)(aLen);
                while (aLen > index) createProperty(result, index, arguments[index++]);
                result.length = aLen;
                return result;
            }
        });


        /***/
    }),
    /* 226 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// 22.1.3.13 Array.prototype.join(separator)
        var $export = __webpack_require__(0);
        var toIObject = __webpack_require__(16);
        var arrayJoin = [].join;

// fallback for not array-like strings
        $export($export.P + $export.F * (__webpack_require__(43) != Object || !__webpack_require__(15)(arrayJoin)), 'Array', {
            join: function join(separator) {
                return arrayJoin.call(toIObject(this), separator === undefined ? ',' : separator);
            }
        });


        /***/
    }),
    /* 227 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var html = __webpack_require__(64);
        var cof = __webpack_require__(21);
        var toAbsoluteIndex = __webpack_require__(32);
        var toLength = __webpack_require__(8);
        var arraySlice = [].slice;

// fallback for not array-like ES3 strings and DOM objects
        $export($export.P + $export.F * __webpack_require__(1)(function () {
            if (html) arraySlice.call(html);
        }), 'Array', {
            slice: function slice(begin, end) {
                var len = toLength(this.length);
                var klass = cof(this);
                end = end === undefined ? len : end;
                if (klass == 'Array') return arraySlice.call(this, begin, end);
                var start = toAbsoluteIndex(begin, len);
                var upTo = toAbsoluteIndex(end, len);
                var size = toLength(upTo - start);
                var cloned = new Array(size);
                var i = 0;
                for (; i < size; i++) cloned[i] = klass == 'String'
                    ? this.charAt(start + i)
                    : this[start + i];
                return cloned;
            }
        });


        /***/
    }),
    /* 228 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var aFunction = __webpack_require__(20);
        var toObject = __webpack_require__(12);
        var fails = __webpack_require__(1);
        var $sort = [].sort;
        var test = [1, 2, 3];

        $export($export.P + $export.F * (fails(function () {
            // IE8-
            test.sort(undefined);
        }) || !fails(function () {
            // V8 bug
            test.sort(null);
            // Old WebKit
        }) || !__webpack_require__(15)($sort)), 'Array', {
            // 22.1.3.25 Array.prototype.sort(comparefn)
            sort: function sort(comparefn) {
                return comparefn === undefined
                    ? $sort.call(toObject(this))
                    : $sort.call(toObject(this), aFunction(comparefn));
            }
        });


        /***/
    }),
    /* 229 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var $forEach = __webpack_require__(18)(0);
        var STRICT = __webpack_require__(15)([].forEach, true);

        $export($export.P + $export.F * !STRICT, 'Array', {
            // 22.1.3.10 / 15.4.4.18 Array.prototype.forEach(callbackfn [, thisArg])
            forEach: function forEach(callbackfn /* , thisArg */) {
                return $forEach(this, callbackfn, arguments[1]);
            }
        });


        /***/
    }),
    /* 230 */
    /***/ (function (module, exports, __webpack_require__) {

// 9.4.2.3 ArraySpeciesCreate(originalArray, length)
        var speciesConstructor = __webpack_require__(231);

        module.exports = function (original, length) {
            return new (speciesConstructor(original))(length);
        };


        /***/
    }),
    /* 231 */
    /***/ (function (module, exports, __webpack_require__) {

        var isObject = __webpack_require__(2);
        var isArray = __webpack_require__(63);
        var SPECIES = __webpack_require__(5)('species');

        module.exports = function (original) {
            var C;
            if (isArray(original)) {
                C = original.constructor;
                // cross-realm fallback
                if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;
                if (isObject(C)) {
                    C = C[SPECIES];
                    if (C === null) C = undefined;
                }
            }
            return C === undefined ? Array : C;
        };


        /***/
    }),
    /* 232 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var $map = __webpack_require__(18)(1);

        $export($export.P + $export.F * !__webpack_require__(15)([].map, true), 'Array', {
            // 22.1.3.15 / 15.4.4.19 Array.prototype.map(callbackfn [, thisArg])
            map: function map(callbackfn /* , thisArg */) {
                return $map(this, callbackfn, arguments[1]);
            }
        });


        /***/
    }),
    /* 233 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var $filter = __webpack_require__(18)(2);

        $export($export.P + $export.F * !__webpack_require__(15)([].filter, true), 'Array', {
            // 22.1.3.7 / 15.4.4.20 Array.prototype.filter(callbackfn [, thisArg])
            filter: function filter(callbackfn /* , thisArg */) {
                return $filter(this, callbackfn, arguments[1]);
            }
        });


        /***/
    }),
    /* 234 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var $some = __webpack_require__(18)(3);

        $export($export.P + $export.F * !__webpack_require__(15)([].some, true), 'Array', {
            // 22.1.3.23 / 15.4.4.17 Array.prototype.some(callbackfn [, thisArg])
            some: function some(callbackfn /* , thisArg */) {
                return $some(this, callbackfn, arguments[1]);
            }
        });


        /***/
    }),
    /* 235 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var $every = __webpack_require__(18)(4);

        $export($export.P + $export.F * !__webpack_require__(15)([].every, true), 'Array', {
            // 22.1.3.5 / 15.4.4.16 Array.prototype.every(callbackfn [, thisArg])
            every: function every(callbackfn /* , thisArg */) {
                return $every(this, callbackfn, arguments[1]);
            }
        });


        /***/
    }),
    /* 236 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var $reduce = __webpack_require__(100);

        $export($export.P + $export.F * !__webpack_require__(15)([].reduce, true), 'Array', {
            // 22.1.3.18 / 15.4.4.21 Array.prototype.reduce(callbackfn [, initialValue])
            reduce: function reduce(callbackfn /* , initialValue */) {
                return $reduce(this, callbackfn, arguments.length, arguments[1], false);
            }
        });


        /***/
    }),
    /* 237 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var $reduce = __webpack_require__(100);

        $export($export.P + $export.F * !__webpack_require__(15)([].reduceRight, true), 'Array', {
            // 22.1.3.19 / 15.4.4.22 Array.prototype.reduceRight(callbackfn [, initialValue])
            reduceRight: function reduceRight(callbackfn /* , initialValue */) {
                return $reduce(this, callbackfn, arguments.length, arguments[1], true);
            }
        });


        /***/
    }),
    /* 238 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var $indexOf = __webpack_require__(60)(false);
        var $native = [].indexOf;
        var NEGATIVE_ZERO = !!$native && 1 / [1].indexOf(1, -0) < 0;

        $export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(15)($native)), 'Array', {
            // 22.1.3.11 / 15.4.4.14 Array.prototype.indexOf(searchElement [, fromIndex])
            indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
                return NEGATIVE_ZERO
                    // convert -0 to +0
                    ? $native.apply(this, arguments) || 0
                    : $indexOf(this, searchElement, arguments[1]);
            }
        });


        /***/
    }),
    /* 239 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var toIObject = __webpack_require__(16);
        var toInteger = __webpack_require__(22);
        var toLength = __webpack_require__(8);
        var $native = [].lastIndexOf;
        var NEGATIVE_ZERO = !!$native && 1 / [1].lastIndexOf(1, -0) < 0;

        $export($export.P + $export.F * (NEGATIVE_ZERO || !__webpack_require__(15)($native)), 'Array', {
            // 22.1.3.14 / 15.4.4.15 Array.prototype.lastIndexOf(searchElement [, fromIndex])
            lastIndexOf: function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
                // convert -0 to +0
                if (NEGATIVE_ZERO) return $native.apply(this, arguments) || 0;
                var O = toIObject(this);
                var length = toLength(O.length);
                var index = length - 1;
                if (arguments.length > 1) index = Math.min(index, toInteger(arguments[1]));
                if (index < 0) index = length + index;
                for (; index >= 0; index--) if (index in O) if (O[index] === searchElement) return index || 0;
                return -1;
            }
        });


        /***/
    }),
    /* 240 */
    /***/ (function (module, exports, __webpack_require__) {

// 22.1.3.3 Array.prototype.copyWithin(target, start, end = this.length)
        var $export = __webpack_require__(0);

        $export($export.P, 'Array', {copyWithin: __webpack_require__(101)});

        __webpack_require__(45)('copyWithin');


        /***/
    }),
    /* 241 */
    /***/ (function (module, exports, __webpack_require__) {

// 22.1.3.6 Array.prototype.fill(value, start = 0, end = this.length)
        var $export = __webpack_require__(0);

        $export($export.P, 'Array', {fill: __webpack_require__(76)});

        __webpack_require__(45)('fill');


        /***/
    }),
    /* 242 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// 22.1.3.8 Array.prototype.find(predicate, thisArg = undefined)
        var $export = __webpack_require__(0);
        var $find = __webpack_require__(18)(5);
        var KEY = 'find';
        var forced = true;
// Shouldn't skip holes
        if (KEY in []) Array(1)[KEY](function () {
            forced = false;
        });
        $export($export.P + $export.F * forced, 'Array', {
            find: function find(callbackfn /* , that = undefined */) {
                return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
            }
        });
        __webpack_require__(45)(KEY);


        /***/
    }),
    /* 243 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// 22.1.3.9 Array.prototype.findIndex(predicate, thisArg = undefined)
        var $export = __webpack_require__(0);
        var $find = __webpack_require__(18)(6);
        var KEY = 'findIndex';
        var forced = true;
// Shouldn't skip holes
        if (KEY in []) Array(1)[KEY](function () {
            forced = false;
        });
        $export($export.P + $export.F * forced, 'Array', {
            findIndex: function findIndex(callbackfn /* , that = undefined */) {
                return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
            }
        });
        __webpack_require__(45)(KEY);


        /***/
    }),
    /* 244 */
    /***/ (function (module, exports, __webpack_require__) {

        __webpack_require__(38)('Array');


        /***/
    }),
    /* 245 */
    /***/ (function (module, exports, __webpack_require__) {

        var global = __webpack_require__(3);
        var inheritIfRequired = __webpack_require__(67);
        var dP = __webpack_require__(6).f;
        var gOPN = __webpack_require__(34).f;
        var isRegExp = __webpack_require__(72);
        var $flags = __webpack_require__(77);
        var $RegExp = global.RegExp;
        var Base = $RegExp;
        var proto = $RegExp.prototype;
        var re1 = /a/g;
        var re2 = /a/g;
// "new" creates a new object, old webkit buggy here
        var CORRECT_NEW = new $RegExp(re1) !== re1;

        if (__webpack_require__(7) && (!CORRECT_NEW || __webpack_require__(1)(function () {
                re2[__webpack_require__(5)('match')] = false;
                // RegExp constructor can alter flags and IsRegExp works correct with @@match
                return $RegExp(re1) != re1 || $RegExp(re2) == re2 || $RegExp(re1, 'i') != '/a/i';
            }))) {
            $RegExp = function RegExp(p, f) {
                var tiRE = this instanceof $RegExp;
                var piRE = isRegExp(p);
                var fiU = f === undefined;
                return !tiRE && piRE && p.constructor === $RegExp && fiU ? p
                    : inheritIfRequired(CORRECT_NEW
                        ? new Base(piRE && !fiU ? p.source : p, f)
                        : Base((piRE = p instanceof $RegExp) ? p.source : p, piRE && fiU ? $flags.call(p) : f)
                        , tiRE ? this : proto, $RegExp);
            };
            var proxy = function (key) {
                key in $RegExp || dP($RegExp, key, {
                    configurable: true,
                    get: function () {
                        return Base[key];
                    },
                    set: function (it) {
                        Base[key] = it;
                    }
                });
            };
            for (var keys = gOPN(Base), i = 0; keys.length > i;) proxy(keys[i++]);
            proto.constructor = $RegExp;
            $RegExp.prototype = proto;
            __webpack_require__(11)(global, 'RegExp', $RegExp);
        }

        __webpack_require__(38)('RegExp');


        /***/
    }),
    /* 246 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        __webpack_require__(104);
        var anObject = __webpack_require__(4);
        var $flags = __webpack_require__(77);
        var DESCRIPTORS = __webpack_require__(7);
        var TO_STRING = 'toString';
        var $toString = /./[TO_STRING];

        var define = function (fn) {
            __webpack_require__(11)(RegExp.prototype, TO_STRING, fn, true);
        };

// 21.2.5.14 RegExp.prototype.toString()
        if (__webpack_require__(1)(function () {
                return $toString.call({source: 'a', flags: 'b'}) != '/a/b';
            })) {
            define(function toString() {
                var R = anObject(this);
                return '/'.concat(R.source, '/',
                    'flags' in R ? R.flags : !DESCRIPTORS && R instanceof RegExp ? $flags.call(R) : undefined);
            });
// FF44- RegExp#toString has a wrong name
        } else if ($toString.name != TO_STRING) {
            define(function toString() {
                return $toString.call(this);
            });
        }


        /***/
    }),
    /* 247 */
    /***/ (function (module, exports, __webpack_require__) {

// @@match logic
        __webpack_require__(53)('match', 1, function (defined, MATCH, $match) {
            // 21.1.3.11 String.prototype.match(regexp)
            return [function match(regexp) {
                'use strict';
                var O = defined(this);
                var fn = regexp == undefined ? undefined : regexp[MATCH];
                return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[MATCH](String(O));
            }, $match];
        });


        /***/
    }),
    /* 248 */
    /***/ (function (module, exports, __webpack_require__) {

// @@replace logic
        __webpack_require__(53)('replace', 2, function (defined, REPLACE, $replace) {
            // 21.1.3.14 String.prototype.replace(searchValue, replaceValue)
            return [function replace(searchValue, replaceValue) {
                'use strict';
                var O = defined(this);
                var fn = searchValue == undefined ? undefined : searchValue[REPLACE];
                return fn !== undefined
                    ? fn.call(searchValue, O, replaceValue)
                    : $replace.call(String(O), searchValue, replaceValue);
            }, $replace];
        });


        /***/
    }),
    /* 249 */
    /***/ (function (module, exports, __webpack_require__) {

// @@search logic
        __webpack_require__(53)('search', 1, function (defined, SEARCH, $search) {
            // 21.1.3.15 String.prototype.search(regexp)
            return [function search(regexp) {
                'use strict';
                var O = defined(this);
                var fn = regexp == undefined ? undefined : regexp[SEARCH];
                return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));
            }, $search];
        });


        /***/
    }),
    /* 250 */
    /***/ (function (module, exports, __webpack_require__) {

// @@split logic
        __webpack_require__(53)('split', 2, function (defined, SPLIT, $split) {
            'use strict';
            var isRegExp = __webpack_require__(72);
            var _split = $split;
            var $push = [].push;
            var $SPLIT = 'split';
            var LENGTH = 'length';
            var LAST_INDEX = 'lastIndex';
            if (
                'abbc'[$SPLIT](/(b)*/)[1] == 'c' ||
                'test'[$SPLIT](/(?:)/, -1)[LENGTH] != 4 ||
                'ab'[$SPLIT](/(?:ab)*/)[LENGTH] != 2 ||
                '.'[$SPLIT](/(.?)(.?)/)[LENGTH] != 4 ||
                '.'[$SPLIT](/()()/)[LENGTH] > 1 ||
                ''[$SPLIT](/.?/)[LENGTH]
            ) {
                var NPCG = /()??/.exec('')[1] === undefined; // nonparticipating capturing group
                // based on es5-shim implementation, need to rework it
                $split = function (separator, limit) {
                    var string = String(this);
                    if (separator === undefined && limit === 0) return [];
                    // If `separator` is not a regex, use native split
                    if (!isRegExp(separator)) return _split.call(string, separator, limit);
                    var output = [];
                    var flags = (separator.ignoreCase ? 'i' : '') +
                        (separator.multiline ? 'm' : '') +
                        (separator.unicode ? 'u' : '') +
                        (separator.sticky ? 'y' : '');
                    var lastLastIndex = 0;
                    var splitLimit = limit === undefined ? 4294967295 : limit >>> 0;
                    // Make `global` and avoid `lastIndex` issues by working with a copy
                    var separatorCopy = new RegExp(separator.source, flags + 'g');
                    var separator2, match, lastIndex, lastLength, i;
                    // Doesn't need flags gy, but they don't hurt
                    if (!NPCG) separator2 = new RegExp('^' + separatorCopy.source + '$(?!\\s)', flags);
                    while (match = separatorCopy.exec(string)) {
                        // `separatorCopy.lastIndex` is not reliable cross-browser
                        lastIndex = match.index + match[0][LENGTH];
                        if (lastIndex > lastLastIndex) {
                            output.push(string.slice(lastLastIndex, match.index));
                            // Fix browsers whose `exec` methods don't consistently return `undefined` for NPCG
                            // eslint-disable-next-line no-loop-func
                            if (!NPCG && match[LENGTH] > 1) match[0].replace(separator2, function () {
                                for (i = 1; i < arguments[LENGTH] - 2; i++) if (arguments[i] === undefined) match[i] = undefined;
                            });
                            if (match[LENGTH] > 1 && match.index < string[LENGTH]) $push.apply(output, match.slice(1));
                            lastLength = match[0][LENGTH];
                            lastLastIndex = lastIndex;
                            if (output[LENGTH] >= splitLimit) break;
                        }
                        if (separatorCopy[LAST_INDEX] === match.index) separatorCopy[LAST_INDEX]++; // Avoid an infinite loop
                    }
                    if (lastLastIndex === string[LENGTH]) {
                        if (lastLength || !separatorCopy.test('')) output.push('');
                    } else output.push(string.slice(lastLastIndex));
                    return output[LENGTH] > splitLimit ? output.slice(0, splitLimit) : output;
                };
                // Chakra, V8
            } else if ('0'[$SPLIT](undefined, 0)[LENGTH]) {
                $split = function (separator, limit) {
                    return separator === undefined && limit === 0 ? [] : _split.call(this, separator, limit);
                };
            }
            // 21.1.3.17 String.prototype.split(separator, limit)
            return [function split(separator, limit) {
                var O = defined(this);
                var fn = separator == undefined ? undefined : separator[SPLIT];
                return fn !== undefined ? fn.call(separator, O, limit) : $split.call(String(O), separator, limit);
            }, $split];
        });


        /***/
    }),
    /* 251 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var LIBRARY = __webpack_require__(31);
        var global = __webpack_require__(3);
        var ctx = __webpack_require__(19);
        var classof = __webpack_require__(50);
        var $export = __webpack_require__(0);
        var isObject = __webpack_require__(2);
        var aFunction = __webpack_require__(20);
        var anInstance = __webpack_require__(39);
        var forOf = __webpack_require__(54);
        var speciesConstructor = __webpack_require__(78);
        var task = __webpack_require__(105).set;
        var microtask = __webpack_require__(252)();
        var newPromiseCapabilityModule = __webpack_require__(106);
        var perform = __webpack_require__(253);
        var userAgent = __webpack_require__(254);
        var promiseResolve = __webpack_require__(255);
        var PROMISE = 'Promise';
        var TypeError = global.TypeError;
        var process = global.process;
        var versions = process && process.versions;
        var v8 = versions && versions.v8 || '';
        var $Promise = global[PROMISE];
        var isNode = classof(process) == 'process';
        var empty = function () { /* empty */
        };
        var Internal, newGenericPromiseCapability, OwnPromiseCapability, Wrapper;
        var newPromiseCapability = newGenericPromiseCapability = newPromiseCapabilityModule.f;

        var USE_NATIVE = !!function () {
            try {
                // correct subclassing with @@species support
                var promise = $Promise.resolve(1);
                var FakePromise = (promise.constructor = {})[__webpack_require__(5)('species')] = function (exec) {
                    exec(empty, empty);
                };
                // unhandled rejections tracking support, NodeJS Promise without it fails @@species test
                return (isNode || typeof PromiseRejectionEvent == 'function')
                    && promise.then(empty) instanceof FakePromise
                    // v8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
                    // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
                    // we can't detect it synchronously, so just check versions
                    && v8.indexOf('6.6') !== 0
                    && userAgent.indexOf('Chrome/66') === -1;
            } catch (e) { /* empty */
            }
        }();

// helpers
        var isThenable = function (it) {
            var then;
            return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
        };
        var notify = function (promise, isReject) {
            if (promise._n) return;
            promise._n = true;
            var chain = promise._c;
            microtask(function () {
                var value = promise._v;
                var ok = promise._s == 1;
                var i = 0;
                var run = function (reaction) {
                    var handler = ok ? reaction.ok : reaction.fail;
                    var resolve = reaction.resolve;
                    var reject = reaction.reject;
                    var domain = reaction.domain;
                    var result, then, exited;
                    try {
                        if (handler) {
                            if (!ok) {
                                if (promise._h == 2) onHandleUnhandled(promise);
                                promise._h = 1;
                            }
                            if (handler === true) result = value;
                            else {
                                if (domain) domain.enter();
                                result = handler(value); // may throw
                                if (domain) {
                                    domain.exit();
                                    exited = true;
                                }
                            }
                            if (result === reaction.promise) {
                                reject(TypeError('Promise-chain cycle'));
                            } else if (then = isThenable(result)) {
                                then.call(result, resolve, reject);
                            } else resolve(result);
                        } else reject(value);
                    } catch (e) {
                        if (domain && !exited) domain.exit();
                        reject(e);
                    }
                };
                while (chain.length > i) run(chain[i++]); // variable length - can't use forEach
                promise._c = [];
                promise._n = false;
                if (isReject && !promise._h) onUnhandled(promise);
            });
        };
        var onUnhandled = function (promise) {
            task.call(global, function () {
                var value = promise._v;
                var unhandled = isUnhandled(promise);
                var result, handler, console;
                if (unhandled) {
                    result = perform(function () {
                        if (isNode) {
                            process.emit('unhandledRejection', value, promise);
                        } else if (handler = global.onunhandledrejection) {
                            handler({promise: promise, reason: value});
                        } else if ((console = global.console) && console.error) {
                            console.error('Unhandled promise rejection', value);
                        }
                    });
                    // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
                    promise._h = isNode || isUnhandled(promise) ? 2 : 1;
                }
                promise._a = undefined;
                if (unhandled && result.e) throw result.v;
            });
        };
        var isUnhandled = function (promise) {
            return promise._h !== 1 && (promise._a || promise._c).length === 0;
        };
        var onHandleUnhandled = function (promise) {
            task.call(global, function () {
                var handler;
                if (isNode) {
                    process.emit('rejectionHandled', promise);
                } else if (handler = global.onrejectionhandled) {
                    handler({promise: promise, reason: promise._v});
                }
            });
        };
        var $reject = function (value) {
            var promise = this;
            if (promise._d) return;
            promise._d = true;
            promise = promise._w || promise; // unwrap
            promise._v = value;
            promise._s = 2;
            if (!promise._a) promise._a = promise._c.slice();
            notify(promise, true);
        };
        var $resolve = function (value) {
            var promise = this;
            var then;
            if (promise._d) return;
            promise._d = true;
            promise = promise._w || promise; // unwrap
            try {
                if (promise === value) throw TypeError("Promise can't be resolved itself");
                if (then = isThenable(value)) {
                    microtask(function () {
                        var wrapper = {_w: promise, _d: false}; // wrap
                        try {
                            then.call(value, ctx($resolve, wrapper, 1), ctx($reject, wrapper, 1));
                        } catch (e) {
                            $reject.call(wrapper, e);
                        }
                    });
                } else {
                    promise._v = value;
                    promise._s = 1;
                    notify(promise, false);
                }
            } catch (e) {
                $reject.call({_w: promise, _d: false}, e); // wrap
            }
        };

// constructor polyfill
        if (!USE_NATIVE) {
            // 25.4.3.1 Promise(executor)
            $Promise = function Promise(executor) {
                anInstance(this, $Promise, PROMISE, '_h');
                aFunction(executor);
                Internal.call(this);
                try {
                    executor(ctx($resolve, this, 1), ctx($reject, this, 1));
                } catch (err) {
                    $reject.call(this, err);
                }
            };
            // eslint-disable-next-line no-unused-vars
            Internal = function Promise(executor) {
                this._c = [];             // <- awaiting reactions
                this._a = undefined;      // <- checked in isUnhandled reactions
                this._s = 0;              // <- state
                this._d = false;          // <- done
                this._v = undefined;      // <- value
                this._h = 0;              // <- rejection state, 0 - default, 1 - handled, 2 - unhandled
                this._n = false;          // <- notify
            };
            Internal.prototype = __webpack_require__(40)($Promise.prototype, {
                // 25.4.5.3 Promise.prototype.then(onFulfilled, onRejected)
                then: function then(onFulfilled, onRejected) {
                    var reaction = newPromiseCapability(speciesConstructor(this, $Promise));
                    reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
                    reaction.fail = typeof onRejected == 'function' && onRejected;
                    reaction.domain = isNode ? process.domain : undefined;
                    this._c.push(reaction);
                    if (this._a) this._a.push(reaction);
                    if (this._s) notify(this, false);
                    return reaction.promise;
                },
                // 25.4.5.1 Promise.prototype.catch(onRejected)
                'catch': function (onRejected) {
                    return this.then(undefined, onRejected);
                }
            });
            OwnPromiseCapability = function () {
                var promise = new Internal();
                this.promise = promise;
                this.resolve = ctx($resolve, promise, 1);
                this.reject = ctx($reject, promise, 1);
            };
            newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
                return C === $Promise || C === Wrapper
                    ? new OwnPromiseCapability(C)
                    : newGenericPromiseCapability(C);
            };
        }

        $export($export.G + $export.W + $export.F * !USE_NATIVE, {Promise: $Promise});
        __webpack_require__(37)($Promise, PROMISE);
        __webpack_require__(38)(PROMISE);
        Wrapper = __webpack_require__(25)[PROMISE];

// statics
        $export($export.S + $export.F * !USE_NATIVE, PROMISE, {
            // 25.4.4.5 Promise.reject(r)
            reject: function reject(r) {
                var capability = newPromiseCapability(this);
                var $$reject = capability.reject;
                $$reject(r);
                return capability.promise;
            }
        });
        $export($export.S + $export.F * (LIBRARY || !USE_NATIVE), PROMISE, {
            // 25.4.4.6 Promise.resolve(x)
            resolve: function resolve(x) {
                return promiseResolve(LIBRARY && this === Wrapper ? $Promise : this, x);
            }
        });
        $export($export.S + $export.F * !(USE_NATIVE && __webpack_require__(52)(function (iter) {
            $Promise.all(iter)['catch'](empty);
        })), PROMISE, {
            // 25.4.4.1 Promise.all(iterable)
            all: function all(iterable) {
                var C = this;
                var capability = newPromiseCapability(C);
                var resolve = capability.resolve;
                var reject = capability.reject;
                var result = perform(function () {
                    var values = [];
                    var index = 0;
                    var remaining = 1;
                    forOf(iterable, false, function (promise) {
                        var $index = index++;
                        var alreadyCalled = false;
                        values.push(undefined);
                        remaining++;
                        C.resolve(promise).then(function (value) {
                            if (alreadyCalled) return;
                            alreadyCalled = true;
                            values[$index] = value;
                            --remaining || resolve(values);
                        }, reject);
                    });
                    --remaining || resolve(values);
                });
                if (result.e) reject(result.v);
                return capability.promise;
            },
            // 25.4.4.4 Promise.race(iterable)
            race: function race(iterable) {
                var C = this;
                var capability = newPromiseCapability(C);
                var reject = capability.reject;
                var result = perform(function () {
                    forOf(iterable, false, function (promise) {
                        C.resolve(promise).then(capability.resolve, reject);
                    });
                });
                if (result.e) reject(result.v);
                return capability.promise;
            }
        });


        /***/
    }),
    /* 252 */
    /***/ (function (module, exports, __webpack_require__) {

        var global = __webpack_require__(3);
        var macrotask = __webpack_require__(105).set;
        var Observer = global.MutationObserver || global.WebKitMutationObserver;
        var process = global.process;
        var Promise = global.Promise;
        var isNode = __webpack_require__(21)(process) == 'process';

        module.exports = function () {
            var head, last, notify;

            var flush = function () {
                var parent, fn;
                if (isNode && (parent = process.domain)) parent.exit();
                while (head) {
                    fn = head.fn;
                    head = head.next;
                    try {
                        fn();
                    } catch (e) {
                        if (head) notify();
                        else last = undefined;
                        throw e;
                    }
                }
                last = undefined;
                if (parent) parent.enter();
            };

            // Node.js
            if (isNode) {
                notify = function () {
                    process.nextTick(flush);
                };
                // browsers with MutationObserver, except iOS Safari - https://github.com/zloirock/core-js/issues/339
            } else if (Observer && !(global.navigator && global.navigator.standalone)) {
                var toggle = true;
                var node = document.createTextNode('');
                new Observer(flush).observe(node, {characterData: true}); // eslint-disable-line no-new
                notify = function () {
                    node.data = toggle = !toggle;
                };
                // environments with maybe non-completely correct, but existent Promise
            } else if (Promise && Promise.resolve) {
                // Promise.resolve without an argument throws an error in LG WebOS 2
                var promise = Promise.resolve(undefined);
                notify = function () {
                    promise.then(flush);
                };
                // for other environments - macrotask based on:
                // - setImmediate
                // - MessageChannel
                // - window.postMessag
                // - onreadystatechange
                // - setTimeout
            } else {
                notify = function () {
                    // strange IE + webpack dev server bug - use .call(global)
                    macrotask.call(global, flush);
                };
            }

            return function (fn) {
                var task = {fn: fn, next: undefined};
                if (last) last.next = task;
                if (!head) {
                    head = task;
                    notify();
                }
                last = task;
            };
        };


        /***/
    }),
    /* 253 */
    /***/ (function (module, exports) {

        module.exports = function (exec) {
            try {
                return {e: false, v: exec()};
            } catch (e) {
                return {e: true, v: e};
            }
        };


        /***/
    }),
    /* 254 */
    /***/ (function (module, exports, __webpack_require__) {

        var global = __webpack_require__(3);
        var navigator = global.navigator;

        module.exports = navigator && navigator.userAgent || '';


        /***/
    }),
    /* 255 */
    /***/ (function (module, exports, __webpack_require__) {

        var anObject = __webpack_require__(4);
        var isObject = __webpack_require__(2);
        var newPromiseCapability = __webpack_require__(106);

        module.exports = function (C, x) {
            anObject(C);
            if (isObject(x) && x.constructor === C) return x;
            var promiseCapability = newPromiseCapability.f(C);
            var resolve = promiseCapability.resolve;
            resolve(x);
            return promiseCapability.promise;
        };


        /***/
    }),
    /* 256 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var strong = __webpack_require__(107);
        var validate = __webpack_require__(41);
        var MAP = 'Map';

// 23.1 Map Objects
        module.exports = __webpack_require__(55)(MAP, function (get) {
            return function Map() {
                return get(this, arguments.length > 0 ? arguments[0] : undefined);
            };
        }, {
            // 23.1.3.6 Map.prototype.get(key)
            get: function get(key) {
                var entry = strong.getEntry(validate(this, MAP), key);
                return entry && entry.v;
            },
            // 23.1.3.9 Map.prototype.set(key, value)
            set: function set(key, value) {
                return strong.def(validate(this, MAP), key === 0 ? 0 : key, value);
            }
        }, strong, true);


        /***/
    }),
    /* 257 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var strong = __webpack_require__(107);
        var validate = __webpack_require__(41);
        var SET = 'Set';

// 23.2 Set Objects
        module.exports = __webpack_require__(55)(SET, function (get) {
            return function Set() {
                return get(this, arguments.length > 0 ? arguments[0] : undefined);
            };
        }, {
            // 23.2.3.1 Set.prototype.add(value)
            add: function add(value) {
                return strong.def(validate(this, SET), value = value === 0 ? 0 : value, value);
            }
        }, strong);


        /***/
    }),
    /* 258 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var each = __webpack_require__(18)(0);
        var redefine = __webpack_require__(11);
        var meta = __webpack_require__(27);
        var assign = __webpack_require__(87);
        var weak = __webpack_require__(108);
        var isObject = __webpack_require__(2);
        var fails = __webpack_require__(1);
        var validate = __webpack_require__(41);
        var WEAK_MAP = 'WeakMap';
        var getWeak = meta.getWeak;
        var isExtensible = Object.isExtensible;
        var uncaughtFrozenStore = weak.ufstore;
        var tmp = {};
        var InternalMap;

        var wrapper = function (get) {
            return function WeakMap() {
                return get(this, arguments.length > 0 ? arguments[0] : undefined);
            };
        };

        var methods = {
            // 23.3.3.3 WeakMap.prototype.get(key)
            get: function get(key) {
                if (isObject(key)) {
                    var data = getWeak(key);
                    if (data === true) return uncaughtFrozenStore(validate(this, WEAK_MAP)).get(key);
                    return data ? data[this._i] : undefined;
                }
            },
            // 23.3.3.5 WeakMap.prototype.set(key, value)
            set: function set(key, value) {
                return weak.def(validate(this, WEAK_MAP), key, value);
            }
        };

// 23.3 WeakMap Objects
        var $WeakMap = module.exports = __webpack_require__(55)(WEAK_MAP, wrapper, methods, weak, true, true);

// IE11 WeakMap frozen keys fix
        if (fails(function () {
                return new $WeakMap().set((Object.freeze || Object)(tmp), 7).get(tmp) != 7;
            })) {
            InternalMap = weak.getConstructor(wrapper, WEAK_MAP);
            assign(InternalMap.prototype, methods);
            meta.NEED = true;
            each(['delete', 'has', 'get', 'set'], function (key) {
                var proto = $WeakMap.prototype;
                var method = proto[key];
                redefine(proto, key, function (a, b) {
                    // store frozen objects on internal weakmap shim
                    if (isObject(a) && !isExtensible(a)) {
                        if (!this._f) this._f = new InternalMap();
                        var result = this._f[key](a, b);
                        return key == 'set' ? this : result;
                        // store all the rest on native weakmap
                    }
                    return method.call(this, a, b);
                });
            });
        }


        /***/
    }),
    /* 259 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var weak = __webpack_require__(108);
        var validate = __webpack_require__(41);
        var WEAK_SET = 'WeakSet';

// 23.4 WeakSet Objects
        __webpack_require__(55)(WEAK_SET, function (get) {
            return function WeakSet() {
                return get(this, arguments.length > 0 ? arguments[0] : undefined);
            };
        }, {
            // 23.4.3.1 WeakSet.prototype.add(value)
            add: function add(value) {
                return weak.def(validate(this, WEAK_SET), value, true);
            }
        }, weak, false, true);


        /***/
    }),
    /* 260 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

        var $export = __webpack_require__(0);
        var $typed = __webpack_require__(56);
        var buffer = __webpack_require__(79);
        var anObject = __webpack_require__(4);
        var toAbsoluteIndex = __webpack_require__(32);
        var toLength = __webpack_require__(8);
        var isObject = __webpack_require__(2);
        var ArrayBuffer = __webpack_require__(3).ArrayBuffer;
        var speciesConstructor = __webpack_require__(78);
        var $ArrayBuffer = buffer.ArrayBuffer;
        var $DataView = buffer.DataView;
        var $isView = $typed.ABV && ArrayBuffer.isView;
        var $slice = $ArrayBuffer.prototype.slice;
        var VIEW = $typed.VIEW;
        var ARRAY_BUFFER = 'ArrayBuffer';

        $export($export.G + $export.W + $export.F * (ArrayBuffer !== $ArrayBuffer), {ArrayBuffer: $ArrayBuffer});

        $export($export.S + $export.F * !$typed.CONSTR, ARRAY_BUFFER, {
            // 24.1.3.1 ArrayBuffer.isView(arg)
            isView: function isView(it) {
                return $isView && $isView(it) || isObject(it) && VIEW in it;
            }
        });

        $export($export.P + $export.U + $export.F * __webpack_require__(1)(function () {
            return !new $ArrayBuffer(2).slice(1, undefined).byteLength;
        }), ARRAY_BUFFER, {
            // 24.1.4.3 ArrayBuffer.prototype.slice(start, end)
            slice: function slice(start, end) {
                if ($slice !== undefined && end === undefined) return $slice.call(anObject(this), start); // FF fix
                var len = anObject(this).byteLength;
                var first = toAbsoluteIndex(start, len);
                var fin = toAbsoluteIndex(end === undefined ? len : end, len);
                var result = new (speciesConstructor(this, $ArrayBuffer))(toLength(fin - first));
                var viewS = new $DataView(this);
                var viewT = new $DataView(result);
                var index = 0;
                while (first < fin) {
                    viewT.setUint8(index++, viewS.getUint8(first++));
                }
                return result;
            }
        });

        __webpack_require__(38)(ARRAY_BUFFER);


        /***/
    }),
    /* 261 */
    /***/ (function (module, exports, __webpack_require__) {

        var $export = __webpack_require__(0);
        $export($export.G + $export.W + $export.F * !__webpack_require__(56).ABV, {
            DataView: __webpack_require__(79).DataView
        });


        /***/
    }),
    /* 262 */
    /***/ (function (module, exports, __webpack_require__) {

        __webpack_require__(24)('Int8', 1, function (init) {
            return function Int8Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/
    }),
    /* 263 */
    /***/ (function (module, exports, __webpack_require__) {

        __webpack_require__(24)('Uint8', 1, function (init) {
            return function Uint8Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/
    }),
    /* 264 */
    /***/ (function (module, exports, __webpack_require__) {

        __webpack_require__(24)('Uint8', 1, function (init) {
            return function Uint8ClampedArray(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        }, true);


        /***/
    }),
    /* 265 */
    /***/ (function (module, exports, __webpack_require__) {

        __webpack_require__(24)('Int16', 2, function (init) {
            return function Int16Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/
    }),
    /* 266 */
    /***/ (function (module, exports, __webpack_require__) {

        __webpack_require__(24)('Uint16', 2, function (init) {
            return function Uint16Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/
    }),
    /* 267 */
    /***/ (function (module, exports, __webpack_require__) {

        __webpack_require__(24)('Int32', 4, function (init) {
            return function Int32Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/
    }),
    /* 268 */
    /***/ (function (module, exports, __webpack_require__) {

        __webpack_require__(24)('Uint32', 4, function (init) {
            return function Uint32Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/
    }),
    /* 269 */
    /***/ (function (module, exports, __webpack_require__) {

        __webpack_require__(24)('Float32', 4, function (init) {
            return function Float32Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/
    }),
    /* 270 */
    /***/ (function (module, exports, __webpack_require__) {

        __webpack_require__(24)('Float64', 8, function (init) {
            return function Float64Array(data, byteOffset, length) {
                return init(this, data, byteOffset, length);
            };
        });


        /***/
    }),
    /* 271 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.1 Reflect.apply(target, thisArgument, argumentsList)
        var $export = __webpack_require__(0);
        var aFunction = __webpack_require__(20);
        var anObject = __webpack_require__(4);
        var rApply = (__webpack_require__(3).Reflect || {}).apply;
        var fApply = Function.apply;
// MS Edge argumentsList argument is optional
        $export($export.S + $export.F * !__webpack_require__(1)(function () {
            rApply(function () { /* empty */
            });
        }), 'Reflect', {
            apply: function apply(target, thisArgument, argumentsList) {
                var T = aFunction(target);
                var L = anObject(argumentsList);
                return rApply ? rApply(T, thisArgument, L) : fApply.call(T, thisArgument, L);
            }
        });


        /***/
    }),
    /* 272 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.2 Reflect.construct(target, argumentsList [, newTarget])
        var $export = __webpack_require__(0);
        var create = __webpack_require__(33);
        var aFunction = __webpack_require__(20);
        var anObject = __webpack_require__(4);
        var isObject = __webpack_require__(2);
        var fails = __webpack_require__(1);
        var bind = __webpack_require__(88);
        var rConstruct = (__webpack_require__(3).Reflect || {}).construct;

// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
        var NEW_TARGET_BUG = fails(function () {
            function F() { /* empty */
            }

            return !(rConstruct(function () { /* empty */
            }, [], F) instanceof F);
        });
        var ARGS_BUG = !fails(function () {
            rConstruct(function () { /* empty */
            });
        });

        $export($export.S + $export.F * (NEW_TARGET_BUG || ARGS_BUG), 'Reflect', {
            construct: function construct(Target, args /* , newTarget */) {
                aFunction(Target);
                anObject(args);
                var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
                if (ARGS_BUG && !NEW_TARGET_BUG) return rConstruct(Target, args, newTarget);
                if (Target == newTarget) {
                    // w/o altered newTarget, optimization for 0-4 arguments
                    switch (args.length) {
                        case 0:
                            return new Target();
                        case 1:
                            return new Target(args[0]);
                        case 2:
                            return new Target(args[0], args[1]);
                        case 3:
                            return new Target(args[0], args[1], args[2]);
                        case 4:
                            return new Target(args[0], args[1], args[2], args[3]);
                    }
                    // w/o altered newTarget, lot of arguments case
                    var $args = [null];
                    $args.push.apply($args, args);
                    return new (bind.apply(Target, $args))();
                }
                // with altered newTarget, not support built-in constructors
                var proto = newTarget.prototype;
                var instance = create(isObject(proto) ? proto : Object.prototype);
                var result = Function.apply.call(Target, instance, args);
                return isObject(result) ? result : instance;
            }
        });


        /***/
    }),
    /* 273 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.3 Reflect.defineProperty(target, propertyKey, attributes)
        var dP = __webpack_require__(6);
        var $export = __webpack_require__(0);
        var anObject = __webpack_require__(4);
        var toPrimitive = __webpack_require__(26);

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
        $export($export.S + $export.F * __webpack_require__(1)(function () {
            // eslint-disable-next-line no-undef
            Reflect.defineProperty(dP.f({}, 1, {value: 1}), 1, {value: 2});
        }), 'Reflect', {
            defineProperty: function defineProperty(target, propertyKey, attributes) {
                anObject(target);
                propertyKey = toPrimitive(propertyKey, true);
                anObject(attributes);
                try {
                    dP.f(target, propertyKey, attributes);
                    return true;
                } catch (e) {
                    return false;
                }
            }
        });


        /***/
    }),
    /* 274 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.4 Reflect.deleteProperty(target, propertyKey)
        var $export = __webpack_require__(0);
        var gOPD = __webpack_require__(23).f;
        var anObject = __webpack_require__(4);

        $export($export.S, 'Reflect', {
            deleteProperty: function deleteProperty(target, propertyKey) {
                var desc = gOPD(anObject(target), propertyKey);
                return desc && !desc.configurable ? false : delete target[propertyKey];
            }
        });


        /***/
    }),
    /* 275 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";

// 26.1.5 Reflect.enumerate(target)
        var $export = __webpack_require__(0);
        var anObject = __webpack_require__(4);
        var Enumerate = function (iterated) {
            this._t = anObject(iterated); // target
            this._i = 0;                  // next index
            var keys = this._k = [];      // keys
            var key;
            for (key in iterated) keys.push(key);
        };
        __webpack_require__(97)(Enumerate, 'Object', function () {
            var that = this;
            var keys = that._k;
            var key;
            do {
                if (that._i >= keys.length) return {value: undefined, done: true};
            } while (!((key = keys[that._i++]) in that._t));
            return {value: key, done: false};
        });

        $export($export.S, 'Reflect', {
            enumerate: function enumerate(target) {
                return new Enumerate(target);
            }
        });


        /***/
    }),
    /* 276 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.6 Reflect.get(target, propertyKey [, receiver])
        var gOPD = __webpack_require__(23);
        var getPrototypeOf = __webpack_require__(35);
        var has = __webpack_require__(10);
        var $export = __webpack_require__(0);
        var isObject = __webpack_require__(2);
        var anObject = __webpack_require__(4);

        function get(target, propertyKey /* , receiver */) {
            var receiver = arguments.length < 3 ? target : arguments[2];
            var desc, proto;
            if (anObject(target) === receiver) return target[propertyKey];
            if (desc = gOPD.f(target, propertyKey)) return has(desc, 'value')
                ? desc.value
                : desc.get !== undefined
                    ? desc.get.call(receiver)
                    : undefined;
            if (isObject(proto = getPrototypeOf(target))) return get(proto, propertyKey, receiver);
        }

        $export($export.S, 'Reflect', {get: get});


        /***/
    }),
    /* 277 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.7 Reflect.getOwnPropertyDescriptor(target, propertyKey)
        var gOPD = __webpack_require__(23);
        var $export = __webpack_require__(0);
        var anObject = __webpack_require__(4);

        $export($export.S, 'Reflect', {
            getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
                return gOPD.f(anObject(target), propertyKey);
            }
        });


        /***/
    }),
    /* 278 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.8 Reflect.getPrototypeOf(target)
        var $export = __webpack_require__(0);
        var getProto = __webpack_require__(35);
        var anObject = __webpack_require__(4);

        $export($export.S, 'Reflect', {
            getPrototypeOf: function getPrototypeOf(target) {
                return getProto(anObject(target));
            }
        });


        /***/
    }),
    /* 279 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.9 Reflect.has(target, propertyKey)
        var $export = __webpack_require__(0);

        $export($export.S, 'Reflect', {
            has: function has(target, propertyKey) {
                return propertyKey in target;
            }
        });


        /***/
    }),
    /* 280 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.10 Reflect.isExtensible(target)
        var $export = __webpack_require__(0);
        var anObject = __webpack_require__(4);
        var $isExtensible = Object.isExtensible;

        $export($export.S, 'Reflect', {
            isExtensible: function isExtensible(target) {
                anObject(target);
                return $isExtensible ? $isExtensible(target) : true;
            }
        });


        /***/
    }),
    /* 281 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.11 Reflect.ownKeys(target)
        var $export = __webpack_require__(0);

        $export($export.S, 'Reflect', {ownKeys: __webpack_require__(282)});


        /***/
    }),
    /* 282 */
    /***/ (function (module, exports, __webpack_require__) {

// all object keys, includes non-enumerable and symbols
        var gOPN = __webpack_require__(34);
        var gOPS = __webpack_require__(48);
        var anObject = __webpack_require__(4);
        var Reflect = __webpack_require__(3).Reflect;
        module.exports = Reflect && Reflect.ownKeys || function ownKeys(it) {
            var keys = gOPN.f(anObject(it));
            var getSymbols = gOPS.f;
            return getSymbols ? keys.concat(getSymbols(it)) : keys;
        };


        /***/
    }),
    /* 283 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.12 Reflect.preventExtensions(target)
        var $export = __webpack_require__(0);
        var anObject = __webpack_require__(4);
        var $preventExtensions = Object.preventExtensions;

        $export($export.S, 'Reflect', {
            preventExtensions: function preventExtensions(target) {
                anObject(target);
                try {
                    if ($preventExtensions) $preventExtensions(target);
                    return true;
                } catch (e) {
                    return false;
                }
            }
        });


        /***/
    }),
    /* 284 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.13 Reflect.set(target, propertyKey, V [, receiver])
        var dP = __webpack_require__(6);
        var gOPD = __webpack_require__(23);
        var getPrototypeOf = __webpack_require__(35);
        var has = __webpack_require__(10);
        var $export = __webpack_require__(0);
        var createDesc = __webpack_require__(29);
        var anObject = __webpack_require__(4);
        var isObject = __webpack_require__(2);

        function set(target, propertyKey, V /* , receiver */) {
            var receiver = arguments.length < 4 ? target : arguments[3];
            var ownDesc = gOPD.f(anObject(target), propertyKey);
            var existingDescriptor, proto;
            if (!ownDesc) {
                if (isObject(proto = getPrototypeOf(target))) {
                    return set(proto, propertyKey, V, receiver);
                }
                ownDesc = createDesc(0);
            }
            if (has(ownDesc, 'value')) {
                if (ownDesc.writable === false || !isObject(receiver)) return false;
                if (existingDescriptor = gOPD.f(receiver, propertyKey)) {
                    if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
                    existingDescriptor.value = V;
                    dP.f(receiver, propertyKey, existingDescriptor);
                } else dP.f(receiver, propertyKey, createDesc(0, V));
                return true;
            }
            return ownDesc.set === undefined ? false : (ownDesc.set.call(receiver, V), true);
        }

        $export($export.S, 'Reflect', {set: set});


        /***/
    }),
    /* 285 */
    /***/ (function (module, exports, __webpack_require__) {

// 26.1.14 Reflect.setPrototypeOf(target, proto)
        var $export = __webpack_require__(0);
        var setProto = __webpack_require__(65);

        if (setProto) $export($export.S, 'Reflect', {
            setPrototypeOf: function setPrototypeOf(target, proto) {
                setProto.check(target, proto);
                try {
                    setProto.set(target, proto);
                    return true;
                } catch (e) {
                    return false;
                }
            }
        });


        /***/
    }),
    /* 286 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {
            'use strict';

            window.tools = {
                init: function init(params) {

                    this.client();

                    if (params == undefined) return;

                    var i = 0;
                    var paramsLen = params.length;

                    for (i; i < paramsLen; i++) {
                        tools[params[i]]();
                    }
                },
                client: function (_client) {
                    function client() {
                        return _client.apply(this, arguments);
                    }

                    client.toString = function () {
                        return _client.toString();
                    };

                    return client;
                }(function () {

                    window.client = {
                        get: function get() {
                            this.$document = $(document);
                            this.$window = $(window);
                            this.windowW = this.$window.width();
                            this.windowH = this.$window.height();
                            this.isMobile = this.windowW <= 1200;
                            this.scrollW = this.getScrollWidth();
                            this.isRetina = this.checkRetina();

                            // if ( this.isMobile ) {
                            // 	document.body.style.cursor = 'pointer';
                            // } else {
                            // 	document.body.style.cursor = 'default';
                            // }
                        },
                        getScrollWidth: function getScrollWidth() {
                            var outer = document.createElement("div");
                            outer.style.visibility = "hidden";
                            outer.style.width = "100px";
                            outer.style.msOverflowStyle = "scrollbar";
                            document.body.appendChild(outer);
                            var widthNoScroll = outer.offsetWidth;
                            outer.style.overflow = "scroll";
                            var inner = document.createElement("div");
                            inner.style.width = "100%";
                            outer.appendChild(inner);
                            var widthWithScroll = inner.offsetWidth;
                            outer.parentNode.removeChild(outer);
                            return widthNoScroll - widthWithScroll;
                        },
                        checkRetina: function checkRetina() {
                            if (window.matchMedia) {
                                var mq = window.matchMedia("only screen and (min--moz-device-pixel-ratio: 1.3), only screen and (-o-min-device-pixel-ratio: 2.6/2), only screen and (-webkit-min-device-pixel-ratio: 1.3), only screen  and (min-device-pixel-ratio: 1.3), only screen and (min-resolution: 1.3dppx)");
                                return mq && mq.matches || window.devicePixelRatio > 1;
                            }
                        }
                    };

                    client.get();

                    client.$window.on('resize', function () {
                        client.get();
                    });
                }),
                backgrounds: function backgrounds() {

                    var backgrounds = document.querySelectorAll('[data-bg-src]');
                    var backgroundsLen = backgrounds.length;
                    var i = 0;

                    for (i; i < backgroundsLen; i++) {
                        var block = backgrounds[i];

                        var src = block.getAttribute("data-bg-src") || "";
                        var size = block.getAttribute("data-bg-size") || "auto";
                        var pos = block.getAttribute("data-bg-pos") || "auto";
                        var repeat = "no-repeat";

                        block.style.background = "url(" + src + ") " + pos + " / " + size + " " + repeat;
                    }
                },
                tabs: function (_tabs) {
                    function tabs() {
                        return _tabs.apply(this, arguments);
                    }

                    tabs.toString = function () {
                        return _tabs.toString();
                    };

                    return tabs;
                }(function () {

                    window.tabs = {
                        init: function init() {
                            var ctrl = this;

                            var elements = document.querySelectorAll("[data-tabs]");
                            var classInitialized = "tabs_initialized";

                            ctrl.classTabActive = "tabs__tab_active";
                            ctrl.classBtnActive = "tabs__btn_active";
                            ctrl.tagTab = "[data-tab]";
                            ctrl.tagBtn = "[data-open-tab]";

                            var i = 0;
                            var elementsLen = elements.length;

                            for (i; i < elementsLen; i++) {
                                var block = elements[i];

                                var firstTabId = block.querySelector("[data-tab]").getAttribute("data-tab");
                                ctrl.open(block, firstTabId);
                                block.classList.add(classInitialized);
                            }

                            ctrl.events();
                        },
                        open: function open(block, id) {
                            var ctrl = this;

                            var elements = block.querySelectorAll(ctrl.tagTab);
                            var i = 0;
                            var elementsLen = elements.length;

                            for (i; i < elementsLen; i++) {
                                var currentTab = elements[i];
                                currentTab.classList.remove(ctrl.classTabActive);
                            }

                            block.querySelector("[data-tab='" + id + "']").classList.add(ctrl.classTabActive);

                            var btns = block.querySelectorAll(ctrl.tagBtn);
                            var t = 0;
                            var btnsLen = btns.length;

                            for (t; t < btnsLen; t++) {
                                var currentBtn = btns[t];
                                currentBtn.classList.remove(ctrl.classBtnActive);
                            }

                            block.querySelector("[data-open-tab='" + id + "']").classList.add(ctrl.classBtnActive);
                        },
                        events: function events() {
                            var ctrl = this;

                            client.$document.on('click', '[data-open-tab]', function () {
                                var btn = $(this);
                                var block = btn.closest('.tabs');
                                var id = btn.data('open-tab');

                                ctrl.open(block[0], id);
                            });
                        }
                    };

                    tabs.init();
                }),
                modals: function (_modals) {
                    function modals() {
                        return _modals.apply(this, arguments);
                    }

                    modals.toString = function () {
                        return _modals.toString();
                    };

                    return modals;
                }(function () {

                    window.modals = {
                        init: function init() {
                            var ctrl = this;

                            ctrl.container = document.querySelector("[data-modals]");

                            ctrl.tagBtnClose = "[data-modal-close]";
                            ctrl.tagBtnOpen = "[data-modal-open]";
                            ctrl.classModalActive = "modal_active";

                            ctrl.countOpened = 0;

                            ctrl.events();
                        },
                        open: function open(id, callback) {
                            var ctrl = modals;

                            //ctrl.hideOverflow();

                            var currentModal = document.querySelector("[data-modal='" + id + "']");
                            currentModal.classList.add(ctrl.classModalActive);

                            ctrl.countOpened++;

                            if (callback) callback(currentModal);
                        },
                        close: function close(id, callback) {
                            var ctrl = this;

                            var currentModal = document.querySelector("[data-modal='" + id + "']");
                            currentModal.classList.remove(ctrl.classModalActive);

                            ctrl.countOpened--;

                            if (!ctrl.countOpened) {
                                //ctrl.showOverflow();
                            }

                            if (callback) callback(currentModal);
                        },
                        closeAll: function closeAll(callback) {
                            var ctrl = this;

                            var elements = ctrl.container.querySelectorAll("[data-modal]");
                            var i = 0;
                            var elementsLen = elements.length;

                            for (i; i < elementsLen; i++) {
                                var el = elements[i];
                                el.classList.remove(ctrl.classModalActive);
                            }

                            ctrl.countOpened = 0;

                            //ctrl.showOverflow();

                            if (callback) callback();
                        },
                        hideOverflow: function hideOverflow() {
                            var ctrl = this;

                            document.body.style.overflowY = "hidden";
                            document.body.style.paddingRight = client.scrollW + "px";
                        },
                        showOverflow: function showOverflow() {
                            var ctrl = this;

                            document.body.style.overflowY = "auto";
                            document.body.style.paddingRight = "0";
                        },
                        events: function events() {
                            var ctrl = this;

                            client.$document.on('click', ctrl.tagBtnClose, function (e) {
                                e.preventDefault();

                                var id = $(this).closest('.modal').data('modal');

                                ctrl.close(id);
                            });

                            client.$document.on('click', ctrl.tagBtnOpen, function (e) {
                                e.preventDefault();

                                var id = $(this).data('modal-open');
                                // console.log("id", id);

                                ctrl.open(id);
                            });
                        }
                    };

                    modals.init();
                }),
                forms: function (_forms) {
                    function forms() {
                        return _forms.apply(this, arguments);
                    }

                    forms.toString = function () {
                        return _forms.toString();
                    };

                    return forms;
                }(function () {

                    var validations = {
                        email: function email(val) {
                            var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                            return re.test(val);
                        }
                    };

                    window.forms = {
                        init: function init() {
                        },
                        isValid: function isValid(type, val) {

                            try {
                                return validations[type](val);
                            } catch (err) {
                                //console.error('Type "' + type + '" is not defined in validation tool.');
                                return null;
                            }
                        }
                    };

                    forms.init();
                }),
                preloader: function (_preloader) {
                    function preloader() {
                        return _preloader.apply(this, arguments);
                    }

                    preloader.toString = function () {
                        return _preloader.toString();
                    };

                    return preloader;
                }(function () {

                    window.preloader = {
                        init: function init() {
                            var ctrl = this;

                            ctrl.urls = ctrl.getUrls();

                            ctrl.loadImages(ctrl.urls);
                        },
                        getUrls: function getUrls() {
                            var ctrl = this;

                            var urls = [];

                            var images = document.getElementsByTagName('img');
                            var imagesLen = images.length;
                            var i = 0;

                            var backgrounds = document.querySelectorAll('[data-bg-src]');
                            var backgroundsLen = backgrounds.length;
                            var k = 0;

                            for (i; i < imagesLen; i++) {
                                var url = images[i].getAttribute('src');
                                urls.push(url);
                            }

                            for (k; k < backgroundsLen; k++) {
                                var url = backgrounds[k].getAttribute('data-bg-src');
                                urls.push(url);
                            }

                            ctrl.total = imagesLen + backgroundsLen;
                            ctrl.loaded = 0;

                            return urls;
                        },
                        loadImages: function loadImages(arr) {
                            var ctrl = this;

                            var i = 0;
                            var arrLen = arr.length;

                            for (i; i < arrLen; i++) {
                                var url = arr[i];

                                var img = new Image();
                                img.src = url;

                                img.addEventListener('load', function () {
                                    ctrl.loaded++;
                                    ctrl.check();
                                });

                                img.addEventListener('error', function () {
                                    ctrl.loaded++;
                                    ctrl.check();
                                });
                            }
                        },
                        getProgress: function getProgress() {
                            var ctrl = this;

                            return ctrl.total ? (ctrl.loaded / ctrl.total).toFixed(2) : '1.00';
                        },
                        check: function check() {
                            var ctrl = this;

                            if (ctrl.loaded === ctrl.total) ctrl.done();
                        },
                        done: function done() {
                            /*var event = new CustomEvent("preloaderDone");
     document.dispatchEvent(event);*/

                            var event; // The custom event that will be created

                            if (document.createEvent) {
                                event = document.createEvent("HTMLEvents");
                                event.initEvent("preloaderDone", true, true);
                            } else {
                                event = document.createEventObject();
                                event.eventType = "preloaderDone";
                            }

                            event.eventName = "preloaderDone";

                            if (document.createEvent) {
                                document.dispatchEvent(event);
                            } else {
                                document.fireEvent("on" + event.eventType, event);
                            }
                        }
                    };

                    preloader.init();
                }),
                templates: function templates() {

                    // USAGE

                    //document.getElementById("result").innerHTML = tmpl("tmpl-demo", data);


                    /*var data = {};
   	window.templates = {
   	init: function() {
   			var templates = this;
   			var elements = document.querySelectorAll("[data-template]");
   		var elementsLen = elements.length;
   		var i = 0;
   			for (i; i < elementsLen; i++) {
   			var temp = elements[i];
   			var name = temp.getAttribute("data-template");
   			var tempContents = temp.innerHTML;
   				var html = document.createElement('script');
   			html.setAttribute("type", "text/x-tmpl");
   			html.innerHTML = tempContents;
   			templates.set(name, html);
   				temp.innerHTML = "";
   		}
   			},
   	get: function(name) {
   		return data[name];
   	},
   	set: function(name, html) {
   		data[name] = html;
   	}
   };
   	templates.init();*/

                }

            };
        })();

        /***/
    }),
    /* 287 */,
    /* 288 */,
    /* 289 */
    /***/ (function (module, exports) {

        /*! WOW - v1.1.3 - 2016-05-06
* Copyright (c) 2016 Matthieu Aussaguel;*/
        (function () {
            var a, b, c, d, e, f = function (a, b) {
                return function () {
                    return a.apply(b, arguments)
                }
            }, g = [].indexOf || function (a) {
                for (var b = 0, c = this.length; c > b; b++) if (b in this && this[b] === a) return b;
                return -1
            };
            b = function () {
                function a() {
                }

                return a.prototype.extend = function (a, b) {
                    var c, d;
                    for (c in b) d = b[c], null == a[c] && (a[c] = d);
                    return a
                }, a.prototype.isMobile = function (a) {
                    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(a)
                }, a.prototype.createEvent = function (a, b, c, d) {
                    var e;
                    return null == b && (b = !1), null == c && (c = !1), null == d && (d = null), null != document.createEvent ? (e = document.createEvent("CustomEvent"), e.initCustomEvent(a, b, c, d)) : null != document.createEventObject ? (e = document.createEventObject(), e.eventType = a) : e.eventName = a, e
                }, a.prototype.emitEvent = function (a, b) {
                    return null != a.dispatchEvent ? a.dispatchEvent(b) : b in (null != a) ? a[b]() : "on" + b in (null != a) ? a["on" + b]() : void 0
                }, a.prototype.addEvent = function (a, b, c) {
                    return null != a.addEventListener ? a.addEventListener(b, c, !1) : null != a.attachEvent ? a.attachEvent("on" + b, c) : a[b] = c
                }, a.prototype.removeEvent = function (a, b, c) {
                    return null != a.removeEventListener ? a.removeEventListener(b, c, !1) : null != a.detachEvent ? a.detachEvent("on" + b, c) : delete a[b]
                }, a.prototype.innerHeight = function () {
                    return "innerHeight" in window ? window.innerHeight : document.documentElement.clientHeight
                }, a
            }(), c = this.WeakMap || this.MozWeakMap || (c = function () {
                function a() {
                    this.keys = [], this.values = []
                }

                return a.prototype.get = function (a) {
                    var b, c, d, e, f;
                    for (f = this.keys, b = d = 0, e = f.length; e > d; b = ++d) if (c = f[b], c === a) return this.values[b]
                }, a.prototype.set = function (a, b) {
                    var c, d, e, f, g;
                    for (g = this.keys, c = e = 0, f = g.length; f > e; c = ++e) if (d = g[c], d === a) return void (this.values[c] = b);
                    return this.keys.push(a), this.values.push(b)
                }, a
            }()), a = this.MutationObserver || this.WebkitMutationObserver || this.MozMutationObserver || (a = function () {
                function a() {
                    "undefined" != typeof console && null !== console && console.warn("MutationObserver is not supported by your browser."), "undefined" != typeof console && null !== console && console.warn("WOW.js cannot detect dom mutations, please call .sync() after loading new content.")
                }

                return a.notSupported = !0, a.prototype.observe = function () {
                }, a
            }()), d = this.getComputedStyle || function (a, b) {
                return this.getPropertyValue = function (b) {
                    var c;
                    return "float" === b && (b = "styleFloat"), e.test(b) && b.replace(e, function (a, b) {
                        return b.toUpperCase()
                    }), (null != (c = a.currentStyle) ? c[b] : void 0) || null
                }, this
            }, e = /(\-([a-z]){1})/g, this.WOW = function () {
                function e(a) {
                    null == a && (a = {}), this.scrollCallback = f(this.scrollCallback, this), this.scrollHandler = f(this.scrollHandler, this), this.resetAnimation = f(this.resetAnimation, this), this.start = f(this.start, this), this.scrolled = !0, this.config = this.util().extend(a, this.defaults), null != a.scrollContainer && (this.config.scrollContainer = document.querySelector(a.scrollContainer)), this.animationNameCache = new c, this.wowEvent = this.util().createEvent(this.config.boxClass)
                }

                return e.prototype.defaults = {
                    boxClass: "wow",
                    animateClass: "animated",
                    offset: 0,
                    mobile: !0,
                    live: !0,
                    callback: null,
                    scrollContainer: null
                }, e.prototype.init = function () {
                    var a;
                    return this.element = window.document.documentElement, "interactive" === (a = document.readyState) || "complete" === a ? this.start() : this.util().addEvent(document, "DOMContentLoaded", this.start), this.finished = []
                }, e.prototype.start = function () {
                    var b, c, d, e;
                    if (this.stopped = !1, this.boxes = function () {
                            var a, c, d, e;
                            for (d = this.element.querySelectorAll("." + this.config.boxClass), e = [], a = 0, c = d.length; c > a; a++) b = d[a], e.push(b);
                            return e
                        }.call(this), this.all = function () {
                            var a, c, d, e;
                            for (d = this.boxes, e = [], a = 0, c = d.length; c > a; a++) b = d[a], e.push(b);
                            return e
                        }.call(this), this.boxes.length) if (this.disabled()) this.resetStyle(); else for (e = this.boxes, c = 0, d = e.length; d > c; c++) b = e[c], this.applyStyle(b, !0);
                    return this.disabled() || (this.util().addEvent(this.config.scrollContainer || window, "scroll", this.scrollHandler), this.util().addEvent(window, "resize", this.scrollHandler), this.interval = setInterval(this.scrollCallback, 50)), this.config.live ? new a(function (a) {
                        return function (b) {
                            var c, d, e, f, g;
                            for (g = [], c = 0, d = b.length; d > c; c++) f = b[c], g.push(function () {
                                var a, b, c, d;
                                for (c = f.addedNodes || [], d = [], a = 0, b = c.length; b > a; a++) e = c[a], d.push(this.doSync(e));
                                return d
                            }.call(a));
                            return g
                        }
                    }(this)).observe(document.body, {childList: !0, subtree: !0}) : void 0
                }, e.prototype.stop = function () {
                    return this.stopped = !0, this.util().removeEvent(this.config.scrollContainer || window, "scroll", this.scrollHandler), this.util().removeEvent(window, "resize", this.scrollHandler), null != this.interval ? clearInterval(this.interval) : void 0
                }, e.prototype.sync = function (b) {
                    return a.notSupported ? this.doSync(this.element) : void 0
                }, e.prototype.doSync = function (a) {
                    var b, c, d, e, f;
                    if (null == a && (a = this.element), 1 === a.nodeType) {
                        for (a = a.parentNode || a, e = a.querySelectorAll("." + this.config.boxClass), f = [], c = 0, d = e.length; d > c; c++) b = e[c], g.call(this.all, b) < 0 ? (this.boxes.push(b), this.all.push(b), this.stopped || this.disabled() ? this.resetStyle() : this.applyStyle(b, !0), f.push(this.scrolled = !0)) : f.push(void 0);
                        return f
                    }
                }, e.prototype.show = function (a) {
                    return this.applyStyle(a), a.className = a.className + " " + this.config.animateClass, null != this.config.callback && this.config.callback(a), this.util().emitEvent(a, this.wowEvent), this.util().addEvent(a, "animationend", this.resetAnimation), this.util().addEvent(a, "oanimationend", this.resetAnimation), this.util().addEvent(a, "webkitAnimationEnd", this.resetAnimation), this.util().addEvent(a, "MSAnimationEnd", this.resetAnimation), a
                }, e.prototype.applyStyle = function (a, b) {
                    var c, d, e;
                    return d = a.getAttribute("data-wow-duration"), c = a.getAttribute("data-wow-delay"), e = a.getAttribute("data-wow-iteration"), this.animate(function (f) {
                        return function () {
                            return f.customStyle(a, b, d, c, e)
                        }
                    }(this))
                }, e.prototype.animate = function () {
                    return "requestAnimationFrame" in window ? function (a) {
                        return window.requestAnimationFrame(a)
                    } : function (a) {
                        return a()
                    }
                }(), e.prototype.resetStyle = function () {
                    var a, b, c, d, e;
                    for (d = this.boxes, e = [], b = 0, c = d.length; c > b; b++) a = d[b], e.push(a.style.visibility = "visible");
                    return e
                }, e.prototype.resetAnimation = function (a) {
                    var b;
                    return a.type.toLowerCase().indexOf("animationend") >= 0 ? (b = a.target || a.srcElement, b.className = b.className.replace(this.config.animateClass, "").trim()) : void 0
                }, e.prototype.customStyle = function (a, b, c, d, e) {
                    return b && this.cacheAnimationName(a), a.style.visibility = b ? "hidden" : "visible", c && this.vendorSet(a.style, {animationDuration: c}), d && this.vendorSet(a.style, {animationDelay: d}), e && this.vendorSet(a.style, {animationIterationCount: e}), this.vendorSet(a.style, {animationName: b ? "none" : this.cachedAnimationName(a)}), a
                }, e.prototype.vendors = ["moz", "webkit"], e.prototype.vendorSet = function (a, b) {
                    var c, d, e, f;
                    d = [];
                    for (c in b) e = b[c], a["" + c] = e, d.push(function () {
                        var b, d, g, h;
                        for (g = this.vendors, h = [], b = 0, d = g.length; d > b; b++) f = g[b], h.push(a["" + f + c.charAt(0).toUpperCase() + c.substr(1)] = e);
                        return h
                    }.call(this));
                    return d
                }, e.prototype.vendorCSS = function (a, b) {
                    var c, e, f, g, h, i;
                    for (h = d(a), g = h.getPropertyCSSValue(b), f = this.vendors, c = 0, e = f.length; e > c; c++) i = f[c], g = g || h.getPropertyCSSValue("-" + i + "-" + b);
                    return g
                }, e.prototype.animationName = function (a) {
                    var b;
                    try {
                        b = this.vendorCSS(a, "animation-name").cssText
                    } catch (c) {
                        b = d(a).getPropertyValue("animation-name")
                    }
                    return "none" === b ? "" : b
                }, e.prototype.cacheAnimationName = function (a) {
                    return this.animationNameCache.set(a, this.animationName(a))
                }, e.prototype.cachedAnimationName = function (a) {
                    return this.animationNameCache.get(a)
                }, e.prototype.scrollHandler = function () {
                    return this.scrolled = !0
                }, e.prototype.scrollCallback = function () {
                    var a;
                    return !this.scrolled || (this.scrolled = !1, this.boxes = function () {
                        var b, c, d, e;
                        for (d = this.boxes, e = [], b = 0, c = d.length; c > b; b++) a = d[b], a && (this.isVisible(a) ? this.show(a) : e.push(a));
                        return e
                    }.call(this), this.boxes.length || this.config.live) ? void 0 : this.stop()
                }, e.prototype.offsetTop = function (a) {
                    for (var b; void 0 === a.offsetTop;) a = a.parentNode;
                    for (b = a.offsetTop; a = a.offsetParent;) b += a.offsetTop;
                    return b
                }, e.prototype.isVisible = function (a) {
                    var b, c, d, e, f;
                    return c = a.getAttribute("data-wow-offset") || this.config.offset, f = this.config.scrollContainer && this.config.scrollContainer.scrollTop || window.pageYOffset, e = f + Math.min(this.element.clientHeight, this.util().innerHeight()) - c, d = this.offsetTop(a), b = d + a.clientHeight, e >= d && b >= f
                }, e.prototype.util = function () {
                    return null != this._util ? this._util : this._util = new b
                }, e.prototype.disabled = function () {
                    return !this.config.mobile && this.util().isMobile(navigator.userAgent)
                }, e
            }()
        }).call(window);


        /***/
    }),
    /* 290 */
    /***/ (function (module, exports) {

        /*
 Sticky-kit v1.1.2 | WTFPL | Leaf Corcoran 2015 | http://leafo.net
*/
        (function () {
            var c, f;
            c = this.jQuery || window.jQuery;
            f = c(window);
            c.fn.stick_in_parent = function (b) {
                var A, w, B, n, p, J, k, E, t, K, q, L;
                null == b && (b = {});
                t = b.sticky_class;
                B = b.inner_scrolling;
                E = b.recalc_every;
                k = b.parent;
                p = b.offset_top;
                n = b.spacer;
                w = b.bottoming;
                null == p && (p = 0);
                null == k && (k = void 0);
                null == B && (B = !0);
                null == t && (t = "is_stuck");
                A = c(document);
                null == w && (w = !0);
                J = function (a) {
                    var b;
                    return window.getComputedStyle ? (a = window.getComputedStyle(a[0]), b = parseFloat(a.getPropertyValue("width")) + parseFloat(a.getPropertyValue("margin-left")) +
                        parseFloat(a.getPropertyValue("margin-right")), "border-box" !== a.getPropertyValue("box-sizing") && (b += parseFloat(a.getPropertyValue("border-left-width")) + parseFloat(a.getPropertyValue("border-right-width")) + parseFloat(a.getPropertyValue("padding-left")) + parseFloat(a.getPropertyValue("padding-right"))), b) : a.outerWidth(!0)
                };
                K = function (a, b, q, C, F, u, r, G) {
                    var v, H, m, D, I, d, g, x, y, z, h, l;
                    if (!a.data("sticky_kit")) {
                        a.data("sticky_kit", !0);
                        I = A.height();
                        g = a.parent();
                        null != k && (g = g.closest(k));
                        if (!g.length) throw"failed to find stick parent";
                        v = m = !1;
                        (h = null != n ? n && a.closest(n) : c("<div />")) && h.css("position", a.css("position"));
                        x = function () {
                            var d, f, e;
                            if (!G && (I = A.height(), d = parseInt(g.css("border-top-width"), 10), f = parseInt(g.css("padding-top"), 10), b = parseInt(g.css("padding-bottom"), 10), q = g.offset().top + d + f, C = g.height(), m && (v = m = !1, null == n && (a.insertAfter(h), h.detach()), a.css({
                                    position: "",
                                    top: "",
                                    width: "",
                                    bottom: ""
                                }).removeClass(t), e = !0), F = a.offset().top - (parseInt(a.css("margin-top"), 10) || 0) - p, u = a.outerHeight(!0), r = a.css("float"), h && h.css({
                                    width: J(a),
                                    height: u,
                                    display: a.css("display"),
                                    "vertical-align": a.css("vertical-align"),
                                    "float": r
                                }), e)) return l()
                        };
                        x();
                        if (u !== C) return D = void 0, d = p, z = E, l = function () {
                            var c, l, e, k;
                            if (!G && (e = !1, null != z && (--z, 0 >= z && (z = E, x(), e = !0)), e || A.height() === I || x(), e = f.scrollTop(), null != D && (l = e - D), D = e, m ? (w && (k = e + u + d > C + q, v && !k && (v = !1, a.css({
                                    position: "fixed",
                                    bottom: "",
                                    top: d
                                }).trigger("sticky_kit:unbottom"))), e < F && (m = !1, d = p, null == n && ("left" !== r && "right" !== r || a.insertAfter(h), h.detach()), c = {
                                    position: "",
                                    width: "",
                                    top: ""
                                }, a.css(c).removeClass(t).trigger("sticky_kit:unstick")),
                                B && (c = f.height(), u + p > c && !v && (d -= l, d = Math.max(c - u, d), d = Math.min(p, d), m && a.css({top: d + "px"})))) : e > F && (m = !0, c = {
                                    position: "fixed",
                                    top: d
                                }, c.width = "border-box" === a.css("box-sizing") ? a.outerWidth() + "px" : a.width() + "px", a.css(c).addClass(t), null == n && (a.after(h), "left" !== r && "right" !== r || h.append(a)), a.trigger("sticky_kit:stick")), m && w && (null == k && (k = e + u + d > C + q), !v && k))) return v = !0, "static" === g.css("position") && g.css({position: "relative"}), a.css({
                                position: "absolute",
                                bottom: b,
                                top: "auto"
                            }).trigger("sticky_kit:bottom")
                        },
                            y = function () {
                                x();
                                return l()
                            }, H = function () {
                            G = !0;
                            f.off("touchmove", l);
                            f.off("scroll", l);
                            f.off("resize", y);
                            c(document.body).off("sticky_kit:recalc", y);
                            a.off("sticky_kit:detach", H);
                            a.removeData("sticky_kit");
                            a.css({position: "", bottom: "", top: "", width: ""});
                            g.position("position", "");
                            if (m) return null == n && ("left" !== r && "right" !== r || a.insertAfter(h), h.remove()), a.removeClass(t)
                        }, f.on("touchmove", l), f.on("scroll", l), f.on("resize", y), c(document.body).on("sticky_kit:recalc", y), a.on("sticky_kit:detach", H), setTimeout(l,
                            0)
                    }
                };
                q = 0;
                for (L = this.length; q < L; q++) b = this[q], K(c(b));
                return this
            }
        }).call(this);


        /***/
    }),
    /* 291 */
    /***/ (function (module, exports, __webpack_require__) {

        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*
* jquery-match-height 0.7.2 by @liabru
* http://brm.io/jquery-match-height/
* License MIT
*/
        !function (t) {
            "use strict";
            true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),
                __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
                    (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : "undefined" != typeof module && module.exports ? module.exports = t(require("jquery")) : t(jQuery)
        }(function (t) {
            var e = -1, o = -1, n = function (t) {
                return parseFloat(t) || 0
            }, a = function (e) {
                var o = 1, a = t(e), i = null, r = [];
                return a.each(function () {
                    var e = t(this), a = e.offset().top - n(e.css("margin-top")),
                        s = r.length > 0 ? r[r.length - 1] : null;
                    null === s ? r.push(e) : Math.floor(Math.abs(i - a)) <= o ? r[r.length - 1] = s.add(e) : r.push(e), i = a
                }), r
            }, i = function (e) {
                var o = {
                    byRow: !0, property: "height", target: null, remove: !1
                };
                return "object" == typeof e ? t.extend(o, e) : ("boolean" == typeof e ? o.byRow = e : "remove" === e && (o.remove = !0), o)
            }, r = t.fn.matchHeight = function (e) {
                var o = i(e);
                if (o.remove) {
                    var n = this;
                    return this.css(o.property, ""), t.each(r._groups, function (t, e) {
                        e.elements = e.elements.not(n)
                    }), this
                }
                return this.length <= 1 && !o.target ? this : (r._groups.push({
                    elements: this,
                    options: o
                }), r._apply(this, o), this)
            };
            r.version = "0.7.2", r._groups = [], r._throttle = 80, r._maintainScroll = !1, r._beforeUpdate = null,
                r._afterUpdate = null, r._rows = a, r._parse = n, r._parseOptions = i, r._apply = function (e, o) {
                var s = i(o), h = t(e), l = [h], c = t(window).scrollTop(), p = t("html").outerHeight(!0),
                    u = h.parents().filter(":hidden");
                return u.each(function () {
                    var e = t(this);
                    e.data("style-cache", e.attr("style"))
                }), u.css("display", "block"), s.byRow && !s.target && (h.each(function () {
                    var e = t(this), o = e.css("display");
                    "inline-block" !== o && "flex" !== o && "inline-flex" !== o && (o = "block"), e.data("style-cache", e.attr("style")), e.css({
                        display: o,
                        "padding-top": "0",
                        "padding-bottom": "0",
                        "margin-top": "0",
                        "margin-bottom": "0",
                        "border-top-width": "0",
                        "border-bottom-width": "0",
                        height: "100px",
                        overflow: "hidden"
                    })
                }), l = a(h), h.each(function () {
                    var e = t(this);
                    e.attr("style", e.data("style-cache") || "")
                })), t.each(l, function (e, o) {
                    var a = t(o), i = 0;
                    if (s.target) i = s.target.outerHeight(!1); else {
                        if (s.byRow && a.length <= 1) return void a.css(s.property, "");
                        a.each(function () {
                            var e = t(this), o = e.attr("style"), n = e.css("display");
                            "inline-block" !== n && "flex" !== n && "inline-flex" !== n && (n = "block");
                            var a = {
                                display: n
                            };
                            a[s.property] = "", e.css(a), e.outerHeight(!1) > i && (i = e.outerHeight(!1)), o ? e.attr("style", o) : e.css("display", "")
                        })
                    }
                    a.each(function () {
                        var e = t(this), o = 0;
                        s.target && e.is(s.target) || ("border-box" !== e.css("box-sizing") && (o += n(e.css("border-top-width")) + n(e.css("border-bottom-width")), o += n(e.css("padding-top")) + n(e.css("padding-bottom"))), e.css(s.property, i - o + "px"))
                    })
                }), u.each(function () {
                    var e = t(this);
                    e.attr("style", e.data("style-cache") || null)
                }), r._maintainScroll && t(window).scrollTop(c / p * t("html").outerHeight(!0)),
                    this
            }, r._applyDataApi = function () {
                var e = {};
                t("[data-match-height], [data-mh]").each(function () {
                    var o = t(this), n = o.attr("data-mh") || o.attr("data-match-height");
                    n in e ? e[n] = e[n].add(o) : e[n] = o
                }), t.each(e, function () {
                    this.matchHeight(!0)
                })
            };
            var s = function (e) {
                r._beforeUpdate && r._beforeUpdate(e, r._groups), t.each(r._groups, function () {
                    r._apply(this.elements, this.options)
                }), r._afterUpdate && r._afterUpdate(e, r._groups)
            };
            r._update = function (n, a) {
                if (a && "resize" === a.type) {
                    var i = t(window).width();
                    if (i === e) return;
                    e = i;
                }
                n ? o === -1 && (o = setTimeout(function () {
                    s(a), o = -1
                }, r._throttle)) : s(a)
            }, t(r._applyDataApi);
            var h = t.fn.on ? "on" : "bind";
            t(window)[h]("load", function (t) {
                r._update(!1, t)
            }), t(window)[h]("resize orientationchange", function (t) {
                r._update(!0, t)
            })
        });

        /***/
    }),
    /* 292 */
    /***/ (function (module, exports, __webpack_require__) {

        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery Smart Banner
 * Copyright (c) 2012 Arnold Daniels <arnold@jasny.net>
 * Based on 'jQuery Smart Web App Banner' by Kurt Zenisek @ kzeni.com
 */
        (function (root, factory) {
            if (true) {
                !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(57)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
                    __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
                        (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
                __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
            } else {
                factory(root.jQuery);
            }
        })(this, function ($) {
            var UA = navigator.userAgent;
            var isEdge = /Edge/i.test(UA);

            var SmartBanner = function (options) {
                // Get the original margin-top of the HTML element so we can take that into account.
                this.origHtmlMargin = parseFloat($('html').css('margin-top'));
                this.options = $.extend({}, $.smartbanner.defaults, options);

                // Check if it's already a standalone web app or running within a webui view of an app (not mobile safari).
                var standalone = navigator.standalone;

                // Detect banner type (iOS or Android).
                if (this.options.force) {
                    this.type = this.options.force;
                } else if (UA.match(/Windows Phone/i) !== null && UA.match(/Edge|Touch/i) !== null) {
                    this.type = 'windows';
                } else if (UA.match(/iPhone|iPod/i) !== null || (UA.match(/iPad/) && this.options.iOSUniversalApp)) {
                    if (UA.match(/Safari/i) !== null &&
                        (UA.match(/CriOS/i) !== null ||
                            UA.match(/FxiOS/i) != null ||
                            window.Number(UA.substr(UA.indexOf('OS ') + 3, 3).replace('_', '.')) < 6)) {
                        // Check webview and native smart banner support (iOS 6+).
                        this.type = 'ios';
                    }
                } else if (UA.match(/\bSilk\/(.*\bMobile Safari\b)?/) || UA.match(/\bKF\w/) || UA.match('Kindle Fire')) {
                    this.type = 'kindle';
                } else if (UA.match(/Android/i) !== null) {
                    this.type = 'android';
                }
                // Don't show banner if device isn't iOS or Android, website is loaded in app or user dismissed banner.
                if (!this.type || standalone || this.getCookie('sb-closed') || this.getCookie('sb-installed')) {
                    return;
                }
                // Calculate scale.
                this.scale = this.options.scale == 'auto' ? $(window).width() / window.screen.width : this.options.scale;
                if (this.scale < 1) {
                    this.scale = 1;
                }
                // Get info from meta data.
                var meta = $(
                    this.type == 'android'
                        ? 'meta[name="google-play-app"]'
                        : (this.type == 'ios'
                            ? 'meta[name="apple-itunes-app"]'
                            : (this.type == 'kindle'
                                    ? 'meta[name="kindle-fire-app"]'
                                    : 'meta[name="msApplication-ID"]'
                            )
                        )
                );

                if (!meta.length) {
                    return;
                }
                // For Windows Store apps, get the PackageFamilyName for protocol launch.
                if (this.type == 'windows') {
                    if (isEdge) {
                        this.appId = $('meta[name="msApplication-PackageEdgeName"]').attr('content');
                    }
                    if (!this.appId) {
                        this.appId = $('meta[name="msApplication-PackageFamilyName"]').attr('content');
                    }
                } else {
                    // Try to pull the appId out of the meta tag and store the result.
                    var parsedMetaContent = /app-id=([^\s,]+)/.exec(meta.attr('content'));
                    if (parsedMetaContent) {
                        this.appId = parsedMetaContent[1];
                    } else {
                        return;
                    }
                }
                this.title = this.options.title
                    ? this.options.title
                    : (meta.data('title') || $('title').text().replace(/\s*[|\-·].*$/, ''));

                this.author = this.options.author
                    ? this.options.author
                    : (meta.data('author') || ($('meta[name="author"]').length ? $('meta[name="author"]').attr('content') : window.location.hostname));

                this.iconUrl = meta.data('icon-url');
                this.price = meta.data('price');

                // Set default onInstall callback if not set in options.
                if (typeof this.options.onInstall == 'function') {
                    this.options.onInstall = this.options.onInstall;
                } else {
                    this.options.onInstall = function () {
                    };
                }
                // Set default onClose callback if not set in options.
                if (typeof this.options.onClose == 'function') {
                    this.options.onClose = this.options.onClose;
                } else {
                    this.options.onClose = function () {
                    };
                }
                // Create banner.
                this.create();
                this.show();
                this.listen();
            };

            SmartBanner.prototype = {

                constructor: SmartBanner,

                create: function () {
                    var iconURL;
                    var price = this.price || this.options.price;

                    var link = this.options.url || (function () {
                        switch (this.type) {
                            case 'android':
                                return 'market://details?id=';
                            case 'kindle':
                                return 'amzn://apps/android?asin=';
                            case 'windows':
                                return isEdge
                                    ? 'ms-windows-store://pdp/?productid='
                                    : 'ms-windows-store:navigate?appid=';
                        }
                        return 'https://itunes.apple.com/' + this.options.appStoreLanguage + '/app/id';
                    }.call(this) + this.appId);

                    var inStore = !price ? '' : (function () {
                      //  var result = price + ' - ';
                        var result = price + ' ';
                        switch (this.type) {
                            case 'android':
                                return result + this.options.inGooglePlay;
                            case 'kindle':
                                return result + this.options.inAmazonAppStore;
                            case 'windows':
                                return result + this.options.inWindowsStore;
                        }
                        return result + this.options.inAppStore
                    }.call(this));

                    var gloss = this.options.iconGloss == null
                        ? (this.type == 'ios')
                        : this.options.iconGloss;

                    if (this.type == 'android' && this.options.GooglePlayParams) {
                        link += '&referrer=' + this.options.GooglePlayParams;
                    }
                    var banner = (
                        '<div id="smartbanner" class="' + this.type + '">' +
                        '<div class="sb-container">' +
                        '<a href="#" class="sb-close">&times;</a>' +
                        '<span class="sb-icon"></span>' +
                        '<div class="sb-info">' +
                        '<strong>' + this.title + '</strong>' +
                        '<span>' + this.author + '</span>' +
                        '<strong><span>' + inStore + '</span></strong>' +
                        '</div>' +
                        '<a href="' + link + '" class="sb-button">' +
                        '<span>' + this.options.button + '</span>' +
                        '</a>' +
                        '</div>' +
                        '</div>'
                    );
                    if (this.options.layer) {
                        $(this.options.appendToSelector).append(banner);
                    } else {
                        $(this.options.appendToSelector).prepend(banner);
                    }
                    if (this.options.icon) {
                        iconURL = this.options.icon;
                    } else if (this.iconUrl) {
                        iconURL = this.iconUrl;
                    } else if ($('link[rel="apple-touch-icon-precomposed"]').length > 0) {
                        iconURL = $('link[rel="apple-touch-icon-precomposed"]').attr('href');
                        if (this.options.iconGloss == null) {
                            gloss = false;
                        }
                    } else if ($('link[rel="apple-touch-icon"]').length > 0) {
                        iconURL = $('link[rel="apple-touch-icon"]').attr('href');
                    } else if ($('meta[name="msApplication-TileImage"]').length > 0) {
                        iconURL = $('meta[name="msApplication-TileImage"]').attr('content');
                    } else if ($('meta[name="msapplication-TileImage"]').length > 0) {
                        // Redundant because ms docs show two case usages.
                        iconURL = $('meta[name="msapplication-TileImage"]').attr('content');
                    }
                    if (iconURL) {
                        $('#smartbanner .sb-icon').css('background-image', 'url(' + iconURL + ')');
                        if (gloss) {
                          /*  $('#smartbanner .sb-icon').addClass('gloss');*/
                        }
                    } else {
                        $('#smartbanner').addClass('no-icon');
                    }
                    this.bannerHeight = $('#smartbanner').outerHeight() + 2;

                    if (this.scale > 1) {
                        $('#smartbanner')
                            .css('top', parseFloat($('#smartbanner').css('top')) * this.scale)
                            .css('height', parseFloat($('#smartbanner').css('height')) * this.scale)
                            .hide();
                        $('#smartbanner .sb-container')
                            .css('-webkit-transform', 'scale(' + this.scale + ')')
                            .css('-msie-transform', 'scale(' + this.scale + ')')
                            .css('-moz-transform', 'scale(' + this.scale + ')')
                            .css('width', $(window).width() / this.scale);
                    }
                    $('#smartbanner')
                        .css('position', this.options.layer ? 'absolute' : 'static');
                },

                listen: function () {
                    $('#smartbanner .sb-close').on('click', $.proxy(this.close, this));
                    $('#smartbanner .sb-button').on('click', $.proxy(this.install, this));
                },

                show: function (callback) {
                    var banner = $('#smartbanner');
                    banner.stop();

                    if (this.options.layer) {
                        banner
                            .animate({top: 0, display: 'block'}, this.options.speedIn)
                            .addClass('shown')
                            .show();
                        $(this.pushSelector)
                            .animate({
                                paddingTop: this.origHtmlMargin + (this.bannerHeight * this.scale)
                            }, this.options.speedIn, 'swing', callback);
                    } else {
                        if ($.support.transition) {
                            banner.animate({top: 0}, this.options.speedIn).addClass('shown');
                            var transitionCallback = function () {
                                $('html').removeClass('sb-animation');
                                if (callback) {
                                    callback();
                                }
                            };
                            $(this.pushSelector)
                                .addClass('sb-animation')
                                .one($.support.transition.end, transitionCallback)
                                .emulateTransitionEnd(this.options.speedIn)
                                .css('margin-top', this.origHtmlMargin + (this.bannerHeight * this.scale));
                        } else {
                            banner
                                .slideDown(this.options.speedIn)
                                .addClass('shown');
                        }
                    }
                },

                hide: function (callback) {
                    var banner = $('#smartbanner');
                    banner.stop();

                    if (this.options.layer) {
                        banner.animate({
                            top: -1 * this.bannerHeight * this.scale,
                            display: 'block'
                        }, this.options.speedIn)
                            .removeClass('shown');

                        $(this.pushSelector)
                            .animate({
                                paddingTop: this.origHtmlMargin
                            }, this.options.speedIn, 'swing', callback);
                    } else {
                        if ($.support.transition) {
                            if (this.type !== 'android') {
                                banner
                                    .css('top', -1 * this.bannerHeight * this.scale)
                                    .removeClass('shown');
                            } else {
                                banner
                                    .css({display: 'none'})
                                    .removeClass('shown');
                            }
                            var transitionCallback = function () {
                                $('html').removeClass('sb-animation');
                                if (callback) {
                                    callback();
                                }
                            };
                            $(this.pushSelector)
                                .addClass('sb-animation')
                                .one($.support.transition.end, transitionCallback)
                                .emulateTransitionEnd(this.options.speedOut)
                                .css('margin-top', this.origHtmlMargin);
                        } else {
                            banner.slideUp(this.options.speedOut).removeClass('shown');
                        }
                    }
                },

                close: function (e) {
                    e.preventDefault();
                    this.hide();
                    this.setCookie('sb-closed', 'true', this.options.daysHidden);
                    this.options.onClose(e);
                },

                install: function (e) {
                    if (this.options.hideOnInstall) {
                        this.hide();
                    }
                    this.setCookie('sb-installed', 'true', this.options.daysReminder);
                    this.options.onInstall(e);
                },

                setCookie: function (name, value, exdays) {
                    var exdate = new Date();
                    exdate.setDate(exdate.getDate() + exdays);
                    value = encodeURI(value) + ((exdays == null) ? '' : '; expires=' + exdate.toUTCString());
                    document.cookie = name + '=' + value + '; path=/;';
                },

                getCookie: function (name) {
                    var i, x, y, ARRcookies = document.cookie.split(';');
                    for (i = 0; i < ARRcookies.length; i++) {
                        x = ARRcookies[i].substr(0, ARRcookies[i].indexOf('='));
                        y = ARRcookies[i].substr(ARRcookies[i].indexOf('=') + 1);
                        x = x.replace(/^\s+|\s+$/g, '');
                        if (x == name) {
                            return decodeURI(y);
                        }
                    }
                    return null;
                },

                // Demo only.
                switchType: function () {
                    var that = this;

                    this.hide(function () {
                        that.type = that.type == 'android' ? 'ios' : 'android';
                        var meta = $(that.type == 'android' ? 'meta[name="google-play-app"]' : 'meta[name="apple-itunes-app"]').attr('content');
                        that.appId = /app-id=([^\s,]+)/.exec(meta)[1];

                        $('#smartbanner').detach();
                        that.create();
                        that.show();
                    });
                }
            };

            $.smartbanner = function (option) {
                var $window = $(window);
                var data = $window.data('smartbanner');
                var options = typeof option == 'object' && option;
                if (!data) {
                    $window.data('smartbanner', (data = new SmartBanner(options)));
                }
                if (typeof option == 'string') {
                    data[option]();
                }
            };

            // override these globally if you like (they are all optional)
            $.smartbanner.defaults = {
                title: null, // What the title of the app should be in the banner (defaults to <title>)
                author: null, // What the author of the app should be in the banner (defaults to <meta name="author"> or hostname)
                price: 'Download', // Price of the app
                appStoreLanguage: 'us', // Language code for App Store
                inAppStore: 'On the App Store', // Text of price for iOS
                inGooglePlay: 'In Google Play', // Text of price for Android
                inAmazonAppStore: 'In the Amazon Appstore',
                inWindowsStore: 'In the Windows Store', //Text of price for Windows
                GooglePlayParams: null, // Aditional parameters for the market
                icon: null, // The URL of the icon (defaults to <meta name="apple-touch-icon">)
                iconGloss: null, // Force gloss effect for iOS even for precomposed
                button: 'VIEW', // Text for the install button
                url: null, // The URL for the button. Keep null if you want the button to link to the app store.
                scale: 'auto', // Scale based on viewport size (set to 1 to disable)
                speedIn: 300, // Show animation speed of the banner
                speedOut: 400, // Close animation speed of the banner
                daysHidden: 15, // Duration to hide the banner after being closed (0 = always show banner)
                daysReminder: 90, // Duration to hide the banner after "VIEW" is clicked *separate from when the close button is clicked* (0 = always show banner)
                force: null, // Choose 'ios', 'android' or 'windows'. Don't do a browser check, just always show this banner
                hideOnInstall: true, // Hide the banner after "VIEW" is clicked.
                layer: false, // Display as overlay layer or slide down the page
                iOSUniversalApp: true, // If the iOS App is a universal app for both iPad and iPhone, display Smart Banner to iPad users, too.
                appendToSelector: 'body', //Append the banner to a specific selector
                pushSelector: 'html' // What element is going to push the site content down; this is where the banner append animation will start.
            };

            $.smartbanner.Constructor = SmartBanner;

            // ============================================================
            // Bootstrap transition
            // Copyright 2011-2014 Twitter, Inc.
            // Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)

            function transitionEnd() {
                var el = document.createElement('smartbanner');

                var transEndEventNames = {
                    WebkitTransition: 'webkitTransitionEnd',
                    MozTransition: 'transitionend',
                    OTransition: 'oTransitionEnd otransitionend',
                    transition: 'transitionend'
                };

                for (var name in transEndEventNames) {
                    if (el.style[name] !== undefined) {
                        return {end: transEndEventNames[name]};
                    }
                }
                // Explicit for ie8.
                return false;
            }

            if ($.support.transition !== undefined) {
                // Prevent conflict with Twitter Bootstrap.
                return;
            }

            // http://blog.alexmaccaw.com/css-transitions
            $.fn.emulateTransitionEnd = function (duration) {
                var called = false, $el = this;
                $(this).one($.support.transition.end, function () {
                    called = true;
                });
                var callback = function () {
                    if (!called) {
                        $($el).trigger($.support.transition.end);
                    }
                };
                setTimeout(callback, duration);
                return this;
            };

            $(function () {
                $.support.transition = transitionEnd();
            });
            // ============================================================
        });


        /***/
    }),
    /* 293 */
    /***/ (function (module, exports) {

        /*!
 * jQuery Browser Plugin v0.0.6
 * https://github.com/gabceb/jquery-browser-plugin
 *
 * Original jquery-browser code Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors
 * http://jquery.org/license

 * Modifications Copyright 2013 Gabriel Cebrian
 * https://github.com/gabceb
 *
 * Released under the MIT license
 *
 * Date: 2013-07-29T17:23:27-07:00

 https://github.com/gabceb/jquery-browser-plugin/blob/master/dist/jquery.browser.js
 */

        (function (jQuery, window, undefined) {
            "use strict";

            var matched, browser;

            jQuery.uaMatch = function (ua) {
                ua = ua.toLowerCase();

                var match = /(opr)[\/]([\w.]+)/.exec(ua) ||
                    /(chrome)[ \/]([\w.]+)/.exec(ua) ||
                    /(version)[ \/]([\w.]+).*(safari)[ \/]([\w.]+)/.exec(ua) ||
                    /(webkit)[ \/]([\w.]+)/.exec(ua) ||
                    /(opera)(?:.*version|)[ \/]([\w.]+)/.exec(ua) ||
                    /(msie) ([\w.]+)/.exec(ua) ||
                    ua.indexOf("trident") >= 0 && /(rv)(?::| )([\w.]+)/.exec(ua) ||
                    ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec(ua) ||
                    [];

                var platform_match = /(ipad)/.exec(ua) ||
                    /(iphone)/.exec(ua) ||
                    /(android)/.exec(ua) ||
                    /(windows phone)/.exec(ua) ||
                    /(win)/.exec(ua) ||
                    /(mac)/.exec(ua) ||
                    /(linux)/.exec(ua) ||
                    /(cros)/i.exec(ua) ||
                    [];

                return {
                    browser: match[3] || match[1] || "",
                    version: match[2] || "0",
                    platform: platform_match[0] || ""
                };
            };

            matched = jQuery.uaMatch(window.navigator.userAgent);
            browser = {};

            if (matched.browser) {
                browser[matched.browser] = true;
                browser.version = matched.version;
                browser.versionNumber = parseInt(matched.version);
            }

            if (matched.platform) {
                browser[matched.platform] = true;
            }

            // These are all considered mobile platforms, meaning they run a mobile browser
            if (browser.android || browser.ipad || browser.iphone || browser["windows phone"]) {
                browser.mobile = true;
            }

            // These are all considered desktop platforms, meaning they run a desktop browser
            if (browser.cros || browser.mac || browser.linux || browser.win) {
                browser.desktop = true;
            }

            // Chrome, Opera 15+ and Safari are webkit based browsers
            if (browser.chrome || browser.opr || browser.safari) {
                browser.webkit = true;
            }

            // IE11 has a new token so we will assign it msie to avoid breaking changes
            if (browser.rv) {
                var ie = "msie";

                matched.browser = ie;
                browser[ie] = true;
            }

            // Opera 15+ are identified as opr
            if (browser.opr) {
                var opera = "opera";

                matched.browser = opera;
                browser[opera] = true;
            }

            // Stock Android browsers are marked as Safari on Android.
            if (browser.safari && browser.android) {
                var android = "android";

                matched.browser = android;
                browser[android] = true;
            }

            // Assign the name and platform variable
            browser.name = matched.browser;
            browser.platform = matched.platform;


            jQuery.browser = browser;
        })(jQuery, window);

        /*
	Masked Input plugin for jQuery
	Copyright (c) 2007-2011 Josh Bush (digitalbush.com)
	Licensed under the MIT license (http://digitalbush.com/projects/masked-input-plugin/#license)
	Version: 1.3
  https://cloud.github.com/downloads/digitalBush/jquery.maskedinput/jquery.maskedinput-1.3.min.js
*/
        (function (a) {
            var b = (a.browser.msie ? "paste" : "input") + ".mask", c = window.orientation != undefined;
            a.mask = {
                definitions: {9: "[0-9]", a: "[A-Za-z]", "*": "[A-Za-z0-9]"},
                dataName: "rawMaskFn"
            }, a.fn.extend({
                caret: function (a, b) {
                    if (this.length != 0) {
                        if (typeof a == "number") {
                            b = typeof b == "number" ? b : a;
                            return this.each(function () {
                                if (this.setSelectionRange) this.setSelectionRange(a, b); else if (this.createTextRange) {
                                    var c = this.createTextRange();
                                    c.collapse(!0), c.moveEnd("character", b), c.moveStart("character", a), c.select()
                                }
                            })
                        }
                        if (this[0].setSelectionRange) a = this[0].selectionStart, b = this[0].selectionEnd; else if (document.selection && document.selection.createRange) {
                            var c = document.selection.createRange();
                            a = 0 - c.duplicate().moveStart("character", -1e5), b = a + c.text.length
                        }
                        return {begin: a, end: b}
                    }
                }, unmask: function () {
                    return this.trigger("unmask")
                }, mask: function (d, e) {
                    if (!d && this.length > 0) {
                        var f = a(this[0]);
                        return f.data(a.mask.dataName)()
                    }
                    e = a.extend({placeholder: "_", completed: null}, e);
                    var g = a.mask.definitions, h = [], i = d.length, j = null, k = d.length;
                    a.each(d.split(""), function (a, b) {
                        b == "?" ? (k--, i = a) : g[b] ? (h.push(new RegExp(g[b])), j == null && (j = h.length - 1)) : h.push(null)
                    });
                    return this.trigger("unmask").each(function () {
                        function v(a) {
                            var b = f.val(), c = -1;
                            for (var d = 0, g = 0; d < k; d++) if (h[d]) {
                                l[d] = e.placeholder;
                                while (g++ < b.length) {
                                    var m = b.charAt(g - 1);
                                    if (h[d].test(m)) {
                                        l[d] = m, c = d;
                                        break
                                    }
                                }
                                if (g > b.length) break
                            } else l[d] == b.charAt(g) && d != i && (g++, c = d);
                            if (!a && c + 1 < i) f.val(""), t(0, k); else if (a || c + 1 >= i) u(), a || f.val(f.val().substring(0, c + 1));
                            return i ? d : j
                        }

                        function u() {
                            return f.val(l.join("")).val()
                        }

                        function t(a, b) {
                            for (var c = a; c < b && c < k; c++) h[c] && (l[c] = e.placeholder)
                        }

                        function s(a) {
                            var b = a.which, c = f.caret();
                            if (a.ctrlKey || a.altKey || a.metaKey || b < 32) return !0;
                            if (b) {
                                c.end - c.begin != 0 && (t(c.begin, c.end), p(c.begin, c.end - 1));
                                var d = n(c.begin - 1);
                                if (d < k) {
                                    var g = String.fromCharCode(b);
                                    if (h[d].test(g)) {
                                        q(d), l[d] = g, u();
                                        var i = n(d);
                                        f.caret(i), e.completed && i >= k && e.completed.call(f)
                                    }
                                }
                                return !1
                            }
                        }

                        function r(a) {
                            var b = a.which;
                            if (b == 8 || b == 46 || c && b == 127) {
                                var d = f.caret(), e = d.begin, g = d.end;
                                g - e == 0 && (e = b != 46 ? o(e) : g = n(e - 1), g = b == 46 ? n(g) : g), t(e, g), p(e, g - 1);
                                return !1
                            }
                            if (b == 27) {
                                f.val(m), f.caret(0, v());
                                return !1
                            }
                        }

                        function q(a) {
                            for (var b = a, c = e.placeholder; b < k; b++) if (h[b]) {
                                var d = n(b), f = l[b];
                                l[b] = c;
                                if (d < k && h[d].test(f)) c = f; else break
                            }
                        }

                        function p(a, b) {
                            if (!(a < 0)) {
                                for (var c = a, d = n(b); c < k; c++) if (h[c]) {
                                    if (d < k && h[c].test(l[d])) l[c] = l[d], l[d] = e.placeholder; else break;
                                    d = n(d)
                                }
                                u(), f.caret(Math.max(j, a))
                            }
                        }

                        function o(a) {
                            while (--a >= 0 && !h[a]) ;
                            return a
                        }

                        function n(a) {
                            while (++a <= k && !h[a]) ;
                            return a
                        }

                        var f = a(this), l = a.map(d.split(""), function (a, b) {
                            if (a != "?") return g[a] ? e.placeholder : a
                        }), m = f.val();
                        f.data(a.mask.dataName, function () {
                            return a.map(l, function (a, b) {
                                return h[b] && a != e.placeholder ? a : null
                            }).join("")
                        }), f.attr("readonly") || f.one("unmask", function () {
                            f.unbind(".mask").removeData(a.mask.dataName)
                        }).bind("focus.mask", function () {
                            m = f.val();
                            var b = v();
                            u();
                            var c = function () {
                                b == d.length ? f.caret(0, b) : f.caret(b)
                            };
                            (a.browser.msie ? c : function () {
                                setTimeout(c, 0)
                            })()
                        }).bind("blur.mask", function () {
                            v(), f.val() != m && f.change()
                        }).bind("keydown.mask", r).bind("keypress.mask", s).bind(b, function () {
                            setTimeout(function () {
                                f.caret(v(!0))
                            }, 0)
                        }), v()
                    })
                }
            })
        })(jQuery);


        /***/
    }),
    /* 294 */
    /***/ (function (module, exports, __webpack_require__) {

        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*! nouislider - 10.0.0 - 2017-05-28 14:52:49 */

        !function (a) {
            true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (a),
                __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
                    (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
            __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : "object" == typeof exports ? module.exports = a() : window.noUiSlider = a()
        }(function () {
            "use strict";

            function a(a) {
                return "object" == typeof a && "function" == typeof a.to && "function" == typeof a.from
            }

            function b(a) {
                a.parentElement.removeChild(a)
            }

            function c(a) {
                a.preventDefault()
            }

            function d(a) {
                return a.filter(function (a) {
                    return this[a] ? !1 : this[a] = !0
                }, {})
            }

            function e(a, b) {
                return Math.round(a / b) * b
            }

            function f(a, b) {
                var c = a.getBoundingClientRect(), d = a.ownerDocument, e = d.documentElement, f = o(d);
                return /webkit.*Chrome.*Mobile/i.test(navigator.userAgent) && (f.x = 0), b ? c.top + f.y - e.clientTop : c.left + f.x - e.clientLeft
            }

            function g(a) {
                return "number" == typeof a && !isNaN(a) && isFinite(a)
            }

            function h(a, b, c) {
                c > 0 && (l(a, b), setTimeout(function () {
                    m(a, b)
                }, c))
            }

            function i(a) {
                return Math.max(Math.min(a, 100), 0)
            }

            function j(a) {
                return Array.isArray(a) ? a : [a]
            }

            function k(a) {
                a = String(a);
                var b = a.split(".");
                return b.length > 1 ? b[1].length : 0
            }

            function l(a, b) {
                a.classList ? a.classList.add(b) : a.className += " " + b
            }

            function m(a, b) {
                a.classList ? a.classList.remove(b) : a.className = a.className.replace(new RegExp("(^|\\b)" + b.split(" ").join("|") + "(\\b|$)", "gi"), " ")
            }

            function n(a, b) {
                return a.classList ? a.classList.contains(b) : new RegExp("\\b" + b + "\\b").test(a.className)
            }

            function o(a) {
                var b = void 0 !== window.pageXOffset, c = "CSS1Compat" === (a.compatMode || ""),
                    d = b ? window.pageXOffset : c ? a.documentElement.scrollLeft : a.body.scrollLeft,
                    e = b ? window.pageYOffset : c ? a.documentElement.scrollTop : a.body.scrollTop;
                return {x: d, y: e}
            }

            function p() {
                return window.navigator.pointerEnabled ? {
                    start: "pointerdown",
                    move: "pointermove",
                    end: "pointerup"
                } : window.navigator.msPointerEnabled ? {
                    start: "MSPointerDown",
                    move: "MSPointerMove",
                    end: "MSPointerUp"
                } : {start: "mousedown touchstart", move: "mousemove touchmove", end: "mouseup touchend"}
            }

            function q() {
                var a = !1;
                try {
                    var b = Object.defineProperty({}, "passive", {
                        get: function () {
                            a = !0
                        }
                    });
                    window.addEventListener("test", null, b)
                } catch (c) {
                }
                return a
            }

            function r() {
                return window.CSS && CSS.supports && CSS.supports("touch-action", "none")
            }

            function s(a, b) {
                return 100 / (b - a)
            }

            function t(a, b) {
                return 100 * b / (a[1] - a[0])
            }

            function u(a, b) {
                return t(a, a[0] < 0 ? b + Math.abs(a[0]) : b - a[0])
            }

            function v(a, b) {
                return b * (a[1] - a[0]) / 100 + a[0]
            }

            function w(a, b) {
                for (var c = 1; a >= b[c];) c += 1;
                return c
            }

            function x(a, b, c) {
                if (c >= a.slice(-1)[0]) return 100;
                var d, e, f, g, h = w(c, a);
                return d = a[h - 1], e = a[h], f = b[h - 1], g = b[h], f + u([d, e], c) / s(f, g)
            }

            function y(a, b, c) {
                if (c >= 100) return a.slice(-1)[0];
                var d, e, f, g, h = w(c, b);
                return d = a[h - 1], e = a[h], f = b[h - 1], g = b[h], v([d, e], (c - f) * s(f, g))
            }

            function z(a, b, c, d) {
                if (100 === d) return d;
                var f, g, h = w(d, a);
                return c ? (f = a[h - 1], g = a[h], d - f > (g - f) / 2 ? g : f) : b[h - 1] ? a[h - 1] + e(d - a[h - 1], b[h - 1]) : d
            }

            function A(a, b, c) {
                var d;
                if ("number" == typeof b && (b = [b]), "[object Array]" !== Object.prototype.toString.call(b)) throw new Error("noUiSlider (" + $ + "): 'range' contains invalid value.");
                if (d = "min" === a ? 0 : "max" === a ? 100 : parseFloat(a), !g(d) || !g(b[0])) throw new Error("noUiSlider (" + $ + "): 'range' value isn't numeric.");
                c.xPct.push(d), c.xVal.push(b[0]), d ? c.xSteps.push(isNaN(b[1]) ? !1 : b[1]) : isNaN(b[1]) || (c.xSteps[0] = b[1]), c.xHighestCompleteStep.push(0)
            }

            function B(a, b, c) {
                if (!b) return !0;
                c.xSteps[a] = t([c.xVal[a], c.xVal[a + 1]], b) / s(c.xPct[a], c.xPct[a + 1]);
                var d = (c.xVal[a + 1] - c.xVal[a]) / c.xNumSteps[a], e = Math.ceil(Number(d.toFixed(3)) - 1),
                    f = c.xVal[a] + c.xNumSteps[a] * e;
                c.xHighestCompleteStep[a] = f
            }

            function C(a, b, c) {
                this.xPct = [], this.xVal = [], this.xSteps = [c || !1], this.xNumSteps = [!1], this.xHighestCompleteStep = [], this.snap = b;
                var d, e = [];
                for (d in a) a.hasOwnProperty(d) && e.push([a[d], d]);
                for (e.sort(e.length && "object" == typeof e[0][0] ? function (a, b) {
                    return a[0][0] - b[0][0]
                } : function (a, b) {
                    return a[0] - b[0]
                }), d = 0; d < e.length; d++) A(e[d][1], e[d][0], this);
                for (this.xNumSteps = this.xSteps.slice(0), d = 0; d < this.xNumSteps.length; d++) B(d, this.xNumSteps[d], this)
            }

            function D(b) {
                if (a(b)) return !0;
                throw new Error("noUiSlider (" + $ + "): 'format' requires 'to' and 'from' methods.")
            }

            function E(a, b) {
                if (!g(b)) throw new Error("noUiSlider (" + $ + "): 'step' is not numeric.");
                a.singleStep = b
            }

            function F(a, b) {
                if ("object" != typeof b || Array.isArray(b)) throw new Error("noUiSlider (" + $ + "): 'range' is not an object.");
                if (void 0 === b.min || void 0 === b.max) throw new Error("noUiSlider (" + $ + "): Missing 'min' or 'max' in 'range'.");
                if (b.min === b.max) throw new Error("noUiSlider (" + $ + "): 'range' 'min' and 'max' cannot be equal.");
                a.spectrum = new C(b, a.snap, a.singleStep)
            }

            function G(a, b) {
                if (b = j(b), !Array.isArray(b) || !b.length) throw new Error("noUiSlider (" + $ + "): 'start' option is incorrect.");
                a.handles = b.length, a.start = b
            }

            function H(a, b) {
                if (a.snap = b, "boolean" != typeof b) throw new Error("noUiSlider (" + $ + "): 'snap' option must be a boolean.")
            }

            function I(a, b) {
                if (a.animate = b, "boolean" != typeof b) throw new Error("noUiSlider (" + $ + "): 'animate' option must be a boolean.")
            }

            function J(a, b) {
                if (a.animationDuration = b, "number" != typeof b) throw new Error("noUiSlider (" + $ + "): 'animationDuration' option must be a number.")
            }

            function K(a, b) {
                var c, d = [!1];
                if ("lower" === b ? b = [!0, !1] : "upper" === b && (b = [!1, !0]), b === !0 || b === !1) {
                    for (c = 1; c < a.handles; c++) d.push(b);
                    d.push(!1)
                } else {
                    if (!Array.isArray(b) || !b.length || b.length !== a.handles + 1) throw new Error("noUiSlider (" + $ + "): 'connect' option doesn't match handle count.");
                    d = b
                }
                a.connect = d
            }

            function L(a, b) {
                switch (b) {
                    case"horizontal":
                        a.ort = 0;
                        break;
                    case"vertical":
                        a.ort = 1;
                        break;
                    default:
                        throw new Error("noUiSlider (" + $ + "): 'orientation' option is invalid.")
                }
            }

            function M(a, b) {
                if (!g(b)) throw new Error("noUiSlider (" + $ + "): 'margin' option must be numeric.");
                if (0 !== b && (a.margin = a.spectrum.getMargin(b), !a.margin)) throw new Error("noUiSlider (" + $ + "): 'margin' option is only supported on linear sliders.")
            }

            function N(a, b) {
                if (!g(b)) throw new Error("noUiSlider (" + $ + "): 'limit' option must be numeric.");
                if (a.limit = a.spectrum.getMargin(b), !a.limit || a.handles < 2) throw new Error("noUiSlider (" + $ + "): 'limit' option is only supported on linear sliders with 2 or more handles.")
            }

            function O(a, b) {
                if (!g(b)) throw new Error("noUiSlider (" + $ + "): 'padding' option must be numeric.");
                if (0 !== b) {
                    if (a.padding = a.spectrum.getMargin(b), !a.padding) throw new Error("noUiSlider (" + $ + "): 'padding' option is only supported on linear sliders.");
                    if (a.padding < 0) throw new Error("noUiSlider (" + $ + "): 'padding' option must be a positive number.");
                    if (a.padding >= 50) throw new Error("noUiSlider (" + $ + "): 'padding' option must be less than half the range.")
                }
            }

            function P(a, b) {
                switch (b) {
                    case"ltr":
                        a.dir = 0;
                        break;
                    case"rtl":
                        a.dir = 1;
                        break;
                    default:
                        throw new Error("noUiSlider (" + $ + "): 'direction' option was not recognized.")
                }
            }

            function Q(a, b) {
                if ("string" != typeof b) throw new Error("noUiSlider (" + $ + "): 'behaviour' must be a string containing options.");
                var c = b.indexOf("tap") >= 0, d = b.indexOf("drag") >= 0, e = b.indexOf("fixed") >= 0,
                    f = b.indexOf("snap") >= 0, g = b.indexOf("hover") >= 0;
                if (e) {
                    if (2 !== a.handles) throw new Error("noUiSlider (" + $ + "): 'fixed' behaviour must be used with 2 handles");
                    M(a, a.start[1] - a.start[0])
                }
                a.events = {tap: c || f, drag: d, fixed: e, snap: f, hover: g}
            }

            function R(a, b) {
                if (b !== !1) if (b === !0) {
                    a.tooltips = [];
                    for (var c = 0; c < a.handles; c++) a.tooltips.push(!0)
                } else {
                    if (a.tooltips = j(b), a.tooltips.length !== a.handles) throw new Error("noUiSlider (" + $ + "): must pass a formatter for all handles.");
                    a.tooltips.forEach(function (a) {
                        if ("boolean" != typeof a && ("object" != typeof a || "function" != typeof a.to)) throw new Error("noUiSlider (" + $ + "): 'tooltips' must be passed a formatter or 'false'.")
                    })
                }
            }

            function S(a, b) {
                a.ariaFormat = b, D(b)
            }

            function T(a, b) {
                a.format = b, D(b)
            }

            function U(a, b) {
                if (void 0 !== b && "string" != typeof b && b !== !1) throw new Error("noUiSlider (" + $ + "): 'cssPrefix' must be a string or `false`.");
                a.cssPrefix = b
            }

            function V(a, b) {
                if (void 0 !== b && "object" != typeof b) throw new Error("noUiSlider (" + $ + "): 'cssClasses' must be an object.");
                if ("string" == typeof a.cssPrefix) {
                    a.cssClasses = {};
                    for (var c in b) b.hasOwnProperty(c) && (a.cssClasses[c] = a.cssPrefix + b[c])
                } else a.cssClasses = b
            }

            function W(a, b) {
                if (b !== !0 && b !== !1) throw new Error("noUiSlider (" + $ + "): 'useRequestAnimationFrame' option should be true (default) or false.");
                a.useRequestAnimationFrame = b
            }

            function X(a) {
                var b = {
                        margin: 0,
                        limit: 0,
                        padding: 0,
                        animate: !0,
                        animationDuration: 300,
                        ariaFormat: _,
                        format: _
                    },
                    c = {
                        step: {r: !1, t: E},
                        start: {r: !0, t: G},
                        connect: {r: !0, t: K},
                        direction: {r: !0, t: P},
                        snap: {r: !1, t: H},
                        animate: {r: !1, t: I},
                        animationDuration: {r: !1, t: J},
                        range: {r: !0, t: F},
                        orientation: {r: !1, t: L},
                        margin: {r: !1, t: M},
                        limit: {r: !1, t: N},
                        padding: {r: !1, t: O},
                        behaviour: {r: !0, t: Q},
                        ariaFormat: {r: !1, t: S},
                        format: {r: !1, t: T},
                        tooltips: {r: !1, t: R},
                        cssPrefix: {r: !1, t: U},
                        cssClasses: {r: !1, t: V},
                        useRequestAnimationFrame: {r: !1, t: W}
                    }, d = {
                        connect: !1,
                        direction: "ltr",
                        behaviour: "tap",
                        orientation: "horizontal",
                        cssPrefix: "noUi-",
                        cssClasses: {
                            target: "target",
                            base: "base",
                            origin: "origin",
                            handle: "handle",
                            handleLower: "handle-lower",
                            handleUpper: "handle-upper",
                            horizontal: "horizontal",
                            vertical: "vertical",
                            background: "background",
                            connect: "connect",
                            ltr: "ltr",
                            rtl: "rtl",
                            draggable: "draggable",
                            drag: "state-drag",
                            tap: "state-tap",
                            active: "active",
                            tooltip: "tooltip",
                            pips: "pips",
                            pipsHorizontal: "pips-horizontal",
                            pipsVertical: "pips-vertical",
                            marker: "marker",
                            markerHorizontal: "marker-horizontal",
                            markerVertical: "marker-vertical",
                            markerNormal: "marker-normal",
                            markerLarge: "marker-large",
                            markerSub: "marker-sub",
                            value: "value",
                            valueHorizontal: "value-horizontal",
                            valueVertical: "value-vertical",
                            valueNormal: "value-normal",
                            valueLarge: "value-large",
                            valueSub: "value-sub"
                        },
                        useRequestAnimationFrame: !0
                    };
                a.format && !a.ariaFormat && (a.ariaFormat = a.format), Object.keys(c).forEach(function (e) {
                    if (void 0 === a[e] && void 0 === d[e]) {
                        if (c[e].r) throw new Error("noUiSlider (" + $ + "): '" + e + "' is required.");
                        return !0
                    }
                    c[e].t(b, void 0 === a[e] ? d[e] : a[e])
                }), b.pips = a.pips;
                var e = [["left", "top"], ["right", "bottom"]];
                return b.style = e[b.dir][b.ort], b.styleOposite = e[b.dir ? 0 : 1][b.ort], b
            }

            function Y(a, e, g) {
                function k(a, b) {
                    var c = xa.createElement("div");
                    return b && l(c, b), a.appendChild(c), c
                }

                function s(a, b) {
                    var c = k(a, e.cssClasses.origin), d = k(c, e.cssClasses.handle);
                    return d.setAttribute("data-handle", b), d.setAttribute("tabindex", "0"), d.setAttribute("role", "slider"), d.setAttribute("aria-orientation", e.ort ? "vertical" : "horizontal"), 0 === b ? l(d, e.cssClasses.handleLower) : b === e.handles - 1 && l(d, e.cssClasses.handleUpper), c
                }

                function t(a, b) {
                    return b ? k(a, e.cssClasses.connect) : !1
                }

                function u(a, b) {
                    ia = [], ja = [], ja.push(t(b, a[0]));
                    for (var c = 0; c < e.handles; c++) ia.push(s(b, c)), ra[c] = c, ja.push(t(b, a[c + 1]))
                }

                function v(a) {
                    l(a, e.cssClasses.target), 0 === e.dir ? l(a, e.cssClasses.ltr) : l(a, e.cssClasses.rtl), 0 === e.ort ? l(a, e.cssClasses.horizontal) : l(a, e.cssClasses.vertical), ha = k(a, e.cssClasses.base)
                }

                function w(a, b) {
                    return e.tooltips[b] ? k(a.firstChild, e.cssClasses.tooltip) : !1
                }

                function x() {
                    var a = ia.map(w);
                    ea("update", function (b, c, d) {
                        if (a[c]) {
                            var f = b[c];
                            e.tooltips[c] !== !0 && (f = e.tooltips[c].to(d[c])), a[c].innerHTML = f
                        }
                    })
                }

                function y() {
                    ea("update", function (a, b, c, d, f) {
                        ra.forEach(function (a) {
                            var b = ia[a], d = S(qa, a, 0, !0, !0, !0), g = S(qa, a, 100, !0, !0, !0), h = f[a],
                                i = e.ariaFormat.to(c[a]);
                            b.children[0].setAttribute("aria-valuemin", d.toFixed(1)), b.children[0].setAttribute("aria-valuemax", g.toFixed(1)), b.children[0].setAttribute("aria-valuenow", h.toFixed(1)), b.children[0].setAttribute("aria-valuetext", i)
                        })
                    })
                }

                function z(a, b, c) {
                    if ("range" === a || "steps" === a) return ta.xVal;
                    if ("count" === a) {
                        if (!b) throw new Error("noUiSlider (" + $ + "): 'values' required for mode 'count'.");
                        var d, e = 100 / (b - 1), f = 0;
                        for (b = []; (d = f++ * e) <= 100;) b.push(d);
                        a = "positions"
                    }
                    return "positions" === a ? b.map(function (a) {
                        return ta.fromStepping(c ? ta.getStep(a) : a)
                    }) : "values" === a ? c ? b.map(function (a) {
                        return ta.fromStepping(ta.getStep(ta.toStepping(a)))
                    }) : b : void 0
                }

                function A(a, b, c) {
                    function e(a, b) {
                        return (a + b).toFixed(7) / 1
                    }

                    var f = {}, g = ta.xVal[0], h = ta.xVal[ta.xVal.length - 1], i = !1, j = !1, k = 0;
                    return c = d(c.slice().sort(function (a, b) {
                        return a - b
                    })), c[0] !== g && (c.unshift(g), i = !0), c[c.length - 1] !== h && (c.push(h), j = !0), c.forEach(function (d, g) {
                        var h, l, m, n, o, p, q, r, s, t, u = d, v = c[g + 1];
                        if ("steps" === b && (h = ta.xNumSteps[g]), h || (h = v - u), u !== !1 && void 0 !== v) for (h = Math.max(h, 1e-7), l = u; v >= l; l = e(l, h)) {
                            for (n = ta.toStepping(l), o = n - k, r = o / a, s = Math.round(r), t = o / s, m = 1; s >= m; m += 1) p = k + m * t, f[p.toFixed(5)] = ["x", 0];
                            q = c.indexOf(l) > -1 ? 1 : "steps" === b ? 2 : 0, !g && i && (q = 0), l === v && j || (f[n.toFixed(5)] = [l, q]), k = n
                        }
                    }), f
                }

                function B(a, b, c) {
                    function d(a, b) {
                        var c = b === e.cssClasses.value, d = c ? j : m, f = c ? h : i;
                        return b + " " + d[e.ort] + " " + f[a]
                    }

                    function f(a, f) {
                        f[1] = f[1] && b ? b(f[0], f[1]) : f[1];
                        var h = k(g, !1);
                        h.className = d(f[1], e.cssClasses.marker), h.style[e.style] = a + "%", f[1] && (h = k(g, !1), h.className = d(f[1], e.cssClasses.value), h.style[e.style] = a + "%", h.innerText = c.to(f[0]))
                    }

                    var g = xa.createElement("div"),
                        h = [e.cssClasses.valueNormal, e.cssClasses.valueLarge, e.cssClasses.valueSub],
                        i = [e.cssClasses.markerNormal, e.cssClasses.markerLarge, e.cssClasses.markerSub],
                        j = [e.cssClasses.valueHorizontal, e.cssClasses.valueVertical],
                        m = [e.cssClasses.markerHorizontal, e.cssClasses.markerVertical];
                    return l(g, e.cssClasses.pips), l(g, 0 === e.ort ? e.cssClasses.pipsHorizontal : e.cssClasses.pipsVertical), Object.keys(a).forEach(function (b) {
                        f(b, a[b])
                    }), g
                }

                function C() {
                    la && (b(la), la = null)
                }

                function D(a) {
                    C();
                    var b = a.mode, c = a.density || 1, d = a.filter || !1, e = a.values || !1, f = a.stepped || !1,
                        g = z(b, e, f), h = A(c, b, g), i = a.format || {to: Math.round};
                    return la = pa.appendChild(B(h, d, i))
                }

                function E() {
                    var a = ha.getBoundingClientRect(), b = "offset" + ["Width", "Height"][e.ort];
                    return 0 === e.ort ? a.width || ha[b] : a.height || ha[b]
                }

                function F(a, b, c, d) {
                    var f = function (b) {
                        return pa.hasAttribute("disabled") ? !1 : n(pa, e.cssClasses.tap) ? !1 : (b = G(b, d.pageOffset)) ? a === ma.start && void 0 !== b.buttons && b.buttons > 1 ? !1 : d.hover && b.buttons ? !1 : (oa || b.preventDefault(), b.calcPoint = b.points[e.ort], void c(b, d)) : !1
                    }, g = [];
                    return a.split(" ").forEach(function (a) {
                        b.addEventListener(a, f, oa ? {passive: !0} : !1), g.push([a, f])
                    }), g
                }

                function G(a, b) {
                    var c, d, e = 0 === a.type.indexOf("touch"), f = 0 === a.type.indexOf("mouse"),
                        g = 0 === a.type.indexOf("pointer");
                    if (0 === a.type.indexOf("MSPointer") && (g = !0), e) {
                        if (a.touches.length > 1) return !1;
                        c = a.changedTouches[0].pageX, d = a.changedTouches[0].pageY
                    }
                    return b = b || o(xa), (f || g) && (c = a.clientX + b.x, d = a.clientY + b.y), a.pageOffset = b, a.points = [c, d], a.cursor = f || g, a
                }

                function H(a) {
                    var b = a - f(ha, e.ort), c = 100 * b / E();
                    return e.dir ? 100 - c : c
                }

                function I(a) {
                    var b = 100, c = !1;
                    return ia.forEach(function (d, e) {
                        if (!d.hasAttribute("disabled")) {
                            var f = Math.abs(qa[e] - a);
                            b > f && (c = e, b = f)
                        }
                    }), c
                }

                function J(a, b, c, d) {
                    var e = c.slice(), f = [!a, a], g = [a, !a];
                    d = d.slice(), a && d.reverse(), d.length > 1 ? d.forEach(function (a, c) {
                        var d = S(e, a, e[a] + b, f[c], g[c], !1);
                        d === !1 ? b = 0 : (b = d - e[a], e[a] = d)
                    }) : f = g = [!0];
                    var h = !1;
                    d.forEach(function (a, d) {
                        h = W(a, c[a] + b, f[d], g[d]) || h
                    }), h && d.forEach(function (a) {
                        K("update", a), K("slide", a)
                    })
                }

                function K(a, b, c) {
                    Object.keys(va).forEach(function (d) {
                        var f = d.split(".")[0];
                        a === f && va[d].forEach(function (a) {
                            a.call(ka, ua.map(e.format.to), b, ua.slice(), c || !1, qa.slice())
                        })
                    })
                }

                function L(a, b) {
                    "mouseout" === a.type && "HTML" === a.target.nodeName && null === a.relatedTarget && N(a, b)
                }

                function M(a, b) {
                    if (-1 === navigator.appVersion.indexOf("MSIE 9") && 0 === a.buttons && 0 !== b.buttonsProperty) return N(a, b);
                    var c = (e.dir ? -1 : 1) * (a.calcPoint - b.startCalcPoint), d = 100 * c / b.baseSize;
                    J(c > 0, d, b.locations, b.handleNumbers)
                }

                function N(a, b) {
                    sa && (m(sa, e.cssClasses.active), sa = !1), a.cursor && (za.style.cursor = "", za.removeEventListener("selectstart", c)), wa.forEach(function (a) {
                        ya.removeEventListener(a[0], a[1])
                    }), m(pa, e.cssClasses.drag), V(), b.handleNumbers.forEach(function (a) {
                        K("change", a), K("set", a), K("end", a)
                    })
                }

                function O(a, b) {
                    if (1 === b.handleNumbers.length) {
                        var d = ia[b.handleNumbers[0]];
                        if (d.hasAttribute("disabled")) return !1;
                        sa = d.children[0], l(sa, e.cssClasses.active)
                    }
                    a.stopPropagation();
                    var f = F(ma.move, ya, M, {
                            startCalcPoint: a.calcPoint,
                            baseSize: E(),
                            pageOffset: a.pageOffset,
                            handleNumbers: b.handleNumbers,
                            buttonsProperty: a.buttons,
                            locations: qa.slice()
                        }), g = F(ma.end, ya, N, {handleNumbers: b.handleNumbers}),
                        h = F("mouseout", ya, L, {handleNumbers: b.handleNumbers});
                    wa = f.concat(g, h), a.cursor && (za.style.cursor = getComputedStyle(a.target).cursor, ia.length > 1 && l(pa, e.cssClasses.drag), za.addEventListener("selectstart", c, !1)), b.handleNumbers.forEach(function (a) {
                        K("start", a)
                    })
                }

                function P(a) {
                    a.stopPropagation();
                    var b = H(a.calcPoint), c = I(b);
                    return c === !1 ? !1 : (e.events.snap || h(pa, e.cssClasses.tap, e.animationDuration), W(c, b, !0, !0), V(), K("slide", c, !0), K("update", c, !0), K("change", c, !0), K("set", c, !0), void (e.events.snap && O(a, {handleNumbers: [c]})))
                }

                function Q(a) {
                    var b = H(a.calcPoint), c = ta.getStep(b), d = ta.fromStepping(c);
                    Object.keys(va).forEach(function (a) {
                        "hover" === a.split(".")[0] && va[a].forEach(function (a) {
                            a.call(ka, d)
                        })
                    })
                }

                function R(a) {
                    a.fixed || ia.forEach(function (a, b) {
                        F(ma.start, a.children[0], O, {handleNumbers: [b]})
                    }), a.tap && F(ma.start, ha, P, {}), a.hover && F(ma.move, ha, Q, {hover: !0}), a.drag && ja.forEach(function (b, c) {
                        if (b !== !1 && 0 !== c && c !== ja.length - 1) {
                            var d = ia[c - 1], f = ia[c], g = [b];
                            l(b, e.cssClasses.draggable), a.fixed && (g.push(d.children[0]), g.push(f.children[0])), g.forEach(function (a) {
                                F(ma.start, a, O, {handles: [d, f], handleNumbers: [c - 1, c]})
                            })
                        }
                    })
                }

                function S(a, b, c, d, f, g) {
                    return ia.length > 1 && (d && b > 0 && (c = Math.max(c, a[b - 1] + e.margin)), f && b < ia.length - 1 && (c = Math.min(c, a[b + 1] - e.margin))), ia.length > 1 && e.limit && (d && b > 0 && (c = Math.min(c, a[b - 1] + e.limit)), f && b < ia.length - 1 && (c = Math.max(c, a[b + 1] - e.limit))), e.padding && (0 === b && (c = Math.max(c, e.padding)), b === ia.length - 1 && (c = Math.min(c, 100 - e.padding))), c = ta.getStep(c), c = i(c), c !== a[b] || g ? c : !1
                }

                function T(a) {
                    return a + "%"
                }

                function U(a, b) {
                    qa[a] = b, ua[a] = ta.fromStepping(b);
                    var c = function () {
                        ia[a].style[e.style] = T(b), Y(a), Y(a + 1)
                    };
                    window.requestAnimationFrame && e.useRequestAnimationFrame ? window.requestAnimationFrame(c) : c()
                }

                function V() {
                    ra.forEach(function (a) {
                        var b = qa[a] > 50 ? -1 : 1, c = 3 + (ia.length + b * a);
                        ia[a].childNodes[0].style.zIndex = c
                    })
                }

                function W(a, b, c, d) {
                    return b = S(qa, a, b, c, d, !1), b === !1 ? !1 : (U(a, b), !0)
                }

                function Y(a) {
                    if (ja[a]) {
                        var b = 0, c = 100;
                        0 !== a && (b = qa[a - 1]), a !== ja.length - 1 && (c = qa[a]), ja[a].style[e.style] = T(b), ja[a].style[e.styleOposite] = T(100 - c)
                    }
                }

                function Z(a, b) {
                    null !== a && a !== !1 && ("number" == typeof a && (a = String(a)), a = e.format.from(a), a === !1 || isNaN(a) || W(b, ta.toStepping(a), !1, !1))
                }

                function _(a, b) {
                    var c = j(a), d = void 0 === qa[0];
                    b = void 0 === b ? !0 : !!b, c.forEach(Z), e.animate && !d && h(pa, e.cssClasses.tap, e.animationDuration), ra.forEach(function (a) {
                        W(a, qa[a], !0, !1)
                    }), V(), ra.forEach(function (a) {
                        K("update", a), null !== c[a] && b && K("set", a)
                    })
                }

                function aa(a) {
                    _(e.start, a)
                }

                function ba() {
                    var a = ua.map(e.format.to);
                    return 1 === a.length ? a[0] : a
                }

                function ca() {
                    for (var a in e.cssClasses) e.cssClasses.hasOwnProperty(a) && m(pa, e.cssClasses[a]);
                    for (; pa.firstChild;) pa.removeChild(pa.firstChild);
                    delete pa.noUiSlider
                }

                function da() {
                    return qa.map(function (a, b) {
                        var c = ta.getNearbySteps(a), d = ua[b], e = c.thisStep.step, f = null;
                        e !== !1 && d + e > c.stepAfter.startValue && (e = c.stepAfter.startValue - d), f = d > c.thisStep.startValue ? c.thisStep.step : c.stepBefore.step === !1 ? !1 : d - c.stepBefore.highestStep, 100 === a ? e = null : 0 === a && (f = null);
                        var g = ta.countStepDecimals();
                        return null !== e && e !== !1 && (e = Number(e.toFixed(g))), null !== f && f !== !1 && (f = Number(f.toFixed(g))), [f, e]
                    })
                }

                function ea(a, b) {
                    va[a] = va[a] || [], va[a].push(b), "update" === a.split(".")[0] && ia.forEach(function (a, b) {
                        K("update", b)
                    })
                }

                function fa(a) {
                    var b = a && a.split(".")[0], c = b && a.substring(b.length);
                    Object.keys(va).forEach(function (a) {
                        var d = a.split(".")[0], e = a.substring(d.length);
                        b && b !== d || c && c !== e || delete va[a]
                    })
                }

                function ga(a, b) {
                    var c = ba(), d = ["margin", "limit", "padding", "range", "animate", "snap", "step", "format"];
                    d.forEach(function (b) {
                        void 0 !== a[b] && (g[b] = a[b])
                    });
                    var f = X(g);
                    d.forEach(function (b) {
                        void 0 !== a[b] && (e[b] = f[b])
                    }), ta = f.spectrum, e.margin = f.margin, e.limit = f.limit, e.padding = f.padding, e.pips && D(e.pips), qa = [], _(a.start || c, b)
                }

                var ha, ia, ja, ka, la, ma = p(), na = r(), oa = na && q(), pa = a, qa = [], ra = [], sa = !1,
                    ta = e.spectrum,
                    ua = [], va = {}, wa = null, xa = a.ownerDocument, ya = xa.documentElement, za = xa.body;
                if (pa.noUiSlider) throw new Error("noUiSlider (" + $ + "): Slider was already initialized.");
                return v(pa), u(e.connect, ha), ka = {
                    destroy: ca,
                    steps: da,
                    on: ea,
                    off: fa,
                    get: ba,
                    set: _,
                    reset: aa,
                    __moveHandles: function (a, b, c) {
                        J(a, b, qa, c)
                    },
                    options: g,
                    updateOptions: ga,
                    target: pa,
                    removePips: C,
                    pips: D
                }, R(e.events), _(e.start), e.pips && D(e.pips), e.tooltips && x(), y(), ka
            }

            function Z(a, b) {
                if (!a || !a.nodeName) throw new Error("noUiSlider (" + $ + "): create requires a single element, got: " + a);
                var c = X(b, a), d = Y(a, c, b);
                return a.noUiSlider = d, d
            }

            var $ = "10.0.0";
            C.prototype.getMargin = function (a) {
                var b = this.xNumSteps[0];
                if (b && a / b % 1 !== 0) throw new Error("noUiSlider (" + $ + "): 'limit', 'margin' and 'padding' must be divisible by step.");
                return 2 === this.xPct.length ? t(this.xVal, a) : !1
            }, C.prototype.toStepping = function (a) {
                return a = x(this.xVal, this.xPct, a)
            }, C.prototype.fromStepping = function (a) {
                return y(this.xVal, this.xPct, a)
            }, C.prototype.getStep = function (a) {
                return a = z(this.xPct, this.xSteps, this.snap, a)
            }, C.prototype.getNearbySteps = function (a) {
                var b = w(a, this.xPct);
                return {
                    stepBefore: {
                        startValue: this.xVal[b - 2],
                        step: this.xNumSteps[b - 2],
                        highestStep: this.xHighestCompleteStep[b - 2]
                    },
                    thisStep: {
                        startValue: this.xVal[b - 1],
                        step: this.xNumSteps[b - 1],
                        highestStep: this.xHighestCompleteStep[b - 1]
                    },
                    stepAfter: {
                        startValue: this.xVal[b - 0],
                        step: this.xNumSteps[b - 0],
                        highestStep: this.xHighestCompleteStep[b - 0]
                    }
                }
            }, C.prototype.countStepDecimals = function () {
                var a = this.xNumSteps.map(k);
                return Math.max.apply(null, a)
            }, C.prototype.convert = function (a) {
                return this.getStep(this.toStepping(a))
            };
            var _ = {
                to: function (a) {
                    return void 0 !== a && a.toFixed(2)
                }, from: Number
            };
            return {version: $, create: Z}
        });

        /***/
    }),
    /* 295 */
    /***/ (function (module, exports, __webpack_require__) {

        var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;
        (function (factory) {

            if (true) {

                // AMD. Register as an anonymous module.
                !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory),
                    __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?
                        (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),
                __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));

            } else if (typeof exports === 'object') {

                // Node/CommonJS
                module.exports = factory();

            } else {

                // Browser globals
                window.wNumb = factory();
            }

        }(function () {

            'use strict';

            var FormatOptions = [
                'decimals',
                'thousand',
                'mark',
                'prefix',
                'suffix',
                'encoder',
                'decoder',
                'negativeBefore',
                'negative',
                'edit',
                'undo'
            ];

// General

            // Reverse a string
            function strReverse(a) {
                return a.split('').reverse().join('');
            }

            // Check if a string starts with a specified prefix.
            function strStartsWith(input, match) {
                return input.substring(0, match.length) === match;
            }

            // Check is a string ends in a specified suffix.
            function strEndsWith(input, match) {
                return input.slice(-1 * match.length) === match;
            }

            // Throw an error if formatting options are incompatible.
            function throwEqualError(F, a, b) {
                if ((F[a] || F[b]) && (F[a] === F[b])) {
                    throw new Error(a);
                }
            }

            // Check if a number is finite and not NaN
            function isValidNumber(input) {
                return typeof input === 'number' && isFinite(input);
            }

            // Provide rounding-accurate toFixed method.
            // Borrowed: http://stackoverflow.com/a/21323330/775265
            function toFixed(value, exp) {
                value = value.toString().split('e');
                value = Math.round(+(value[0] + 'e' + (value[1] ? (+value[1] + exp) : exp)));
                value = value.toString().split('e');
                return (+(value[0] + 'e' + (value[1] ? (+value[1] - exp) : -exp))).toFixed(exp);
            }


// Formatting

            // Accept a number as input, output formatted string.
            function formatTo(decimals, thousand, mark, prefix, suffix, encoder, decoder, negativeBefore, negative, edit, undo, input) {

                var originalInput = input, inputIsNegative, inputPieces, inputBase, inputDecimals = '', output = '';

                // Apply user encoder to the input.
                // Expected outcome: number.
                if (encoder) {
                    input = encoder(input);
                }

                // Stop if no valid number was provided, the number is infinite or NaN.
                if (!isValidNumber(input)) {
                    return false;
                }

                // Rounding away decimals might cause a value of -0
                // when using very small ranges. Remove those cases.
                if (decimals !== false && parseFloat(input.toFixed(decimals)) === 0) {
                    input = 0;
                }

                // Formatting is done on absolute numbers,
                // decorated by an optional negative symbol.
                if (input < 0) {
                    inputIsNegative = true;
                    input = Math.abs(input);
                }

                // Reduce the number of decimals to the specified option.
                if (decimals !== false) {
                    input = toFixed(input, decimals);
                }

                // Transform the number into a string, so it can be split.
                input = input.toString();

                // Break the number on the decimal separator.
                if (input.indexOf('.') !== -1) {
                    inputPieces = input.split('.');

                    inputBase = inputPieces[0];

                    if (mark) {
                        inputDecimals = mark + inputPieces[1];
                    }

                } else {

                    // If it isn't split, the entire number will do.
                    inputBase = input;
                }

                // Group numbers in sets of three.
                if (thousand) {
                    inputBase = strReverse(inputBase).match(/.{1,3}/g);
                    inputBase = strReverse(inputBase.join(strReverse(thousand)));
                }

                // If the number is negative, prefix with negation symbol.
                if (inputIsNegative && negativeBefore) {
                    output += negativeBefore;
                }

                // Prefix the number
                if (prefix) {
                    output += prefix;
                }

                // Normal negative option comes after the prefix. Defaults to '-'.
                if (inputIsNegative && negative) {
                    output += negative;
                }

                // Append the actual number.
                output += inputBase;
                output += inputDecimals;

                // Apply the suffix.
                if (suffix) {
                    output += suffix;
                }

                // Run the output through a user-specified post-formatter.
                if (edit) {
                    output = edit(output, originalInput);
                }

                // All done.
                return output;
            }

            // Accept a sting as input, output decoded number.
            function formatFrom(decimals, thousand, mark, prefix, suffix, encoder, decoder, negativeBefore, negative, edit, undo, input) {

                var originalInput = input, inputIsNegative, output = '';

                // User defined pre-decoder. Result must be a non empty string.
                if (undo) {
                    input = undo(input);
                }

                // Test the input. Can't be empty.
                if (!input || typeof input !== 'string') {
                    return false;
                }

                // If the string starts with the negativeBefore value: remove it.
                // Remember is was there, the number is negative.
                if (negativeBefore && strStartsWith(input, negativeBefore)) {
                    input = input.replace(negativeBefore, '');
                    inputIsNegative = true;
                }

                // Repeat the same procedure for the prefix.
                if (prefix && strStartsWith(input, prefix)) {
                    input = input.replace(prefix, '');
                }

                // And again for negative.
                if (negative && strStartsWith(input, negative)) {
                    input = input.replace(negative, '');
                    inputIsNegative = true;
                }

                // Remove the suffix.
                // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/slice
                if (suffix && strEndsWith(input, suffix)) {
                    input = input.slice(0, -1 * suffix.length);
                }

                // Remove the thousand grouping.
                if (thousand) {
                    input = input.split(thousand).join('');
                }

                // Set the decimal separator back to period.
                if (mark) {
                    input = input.replace(mark, '.');
                }

                // Prepend the negative symbol.
                if (inputIsNegative) {
                    output += '-';
                }

                // Add the number
                output += input;

                // Trim all non-numeric characters (allow '.' and '-');
                output = output.replace(/[^0-9\.\-.]/g, '');

                // The value contains no parse-able number.
                if (output === '') {
                    return false;
                }

                // Covert to number.
                output = Number(output);

                // Run the user-specified post-decoder.
                if (decoder) {
                    output = decoder(output);
                }

                // Check is the output is valid, otherwise: return false.
                if (!isValidNumber(output)) {
                    return false;
                }

                return output;
            }


// Framework

            // Validate formatting options
            function validate(inputOptions) {

                var i, optionName, optionValue,
                    filteredOptions = {};

                if (inputOptions['suffix'] === undefined) {
                    inputOptions['suffix'] = inputOptions['postfix'];
                }

                for (i = 0; i < FormatOptions.length; i += 1) {

                    optionName = FormatOptions[i];
                    optionValue = inputOptions[optionName];

                    if (optionValue === undefined) {

                        // Only default if negativeBefore isn't set.
                        if (optionName === 'negative' && !filteredOptions.negativeBefore) {
                            filteredOptions[optionName] = '-';
                            // Don't set a default for mark when 'thousand' is set.
                        } else if (optionName === 'mark' && filteredOptions.thousand !== '.') {
                            filteredOptions[optionName] = '.';
                        } else {
                            filteredOptions[optionName] = false;
                        }

                        // Floating points in JS are stable up to 7 decimals.
                    } else if (optionName === 'decimals') {
                        if (optionValue >= 0 && optionValue < 8) {
                            filteredOptions[optionName] = optionValue;
                        } else {
                            throw new Error(optionName);
                        }

                        // These options, when provided, must be functions.
                    } else if (optionName === 'encoder' || optionName === 'decoder' || optionName === 'edit' || optionName === 'undo') {
                        if (typeof optionValue === 'function') {
                            filteredOptions[optionName] = optionValue;
                        } else {
                            throw new Error(optionName);
                        }

                        // Other options are strings.
                    } else {

                        if (typeof optionValue === 'string') {
                            filteredOptions[optionName] = optionValue;
                        } else {
                            throw new Error(optionName);
                        }
                    }
                }

                // Some values can't be extracted from a
                // string if certain combinations are present.
                throwEqualError(filteredOptions, 'mark', 'thousand');
                throwEqualError(filteredOptions, 'prefix', 'negative');
                throwEqualError(filteredOptions, 'prefix', 'negativeBefore');

                return filteredOptions;
            }

            // Pass all options as function arguments
            function passAll(options, method, input) {
                var i, args = [];

                // Add all options in order of FormatOptions
                for (i = 0; i < FormatOptions.length; i += 1) {
                    args.push(options[FormatOptions[i]]);
                }

                // Append the input, then call the method, presenting all
                // options as arguments.
                args.push(input);
                return method.apply('', args);
            }

            function wNumb(options) {

                if (!(this instanceof wNumb)) {
                    return new wNumb(options);
                }

                if (typeof options !== "object") {
                    return;
                }

                options = validate(options);

                // Call 'formatTo' with proper arguments.
                this.to = function (input) {
                    return passAll(options, formatTo, input);
                };

                // Call 'formatFrom' with proper arguments.
                this.from = function (input) {
                    return passAll(options, formatFrom, input);
                };
            }

            return wNumb;

        }));


        /***/
    }),
    /* 296 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";
        /*! npm.im/object-fit-images 3.2.3 */


        var OFI = 'bfred-it:object-fit-images';
        var propRegex = /(object-fit|object-position)\s*:\s*([-\w\s%]+)/g;
        var testImg = typeof Image === 'undefined' ? {style: {'object-position': 1}} : new Image();
        var supportsObjectFit = 'object-fit' in testImg.style;
        var supportsObjectPosition = 'object-position' in testImg.style;
        var supportsOFI = 'background-size' in testImg.style;
        var supportsCurrentSrc = typeof testImg.currentSrc === 'string';
        var nativeGetAttribute = testImg.getAttribute;
        var nativeSetAttribute = testImg.setAttribute;
        var autoModeEnabled = false;

        function createPlaceholder(w, h) {
            return ("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='" + w + "' height='" + h + "'%3E%3C/svg%3E");
        }

        function polyfillCurrentSrc(el) {
            if (el.srcset && !supportsCurrentSrc && window.picturefill) {
                var pf = window.picturefill._;
                // parse srcset with picturefill where currentSrc isn't available
                if (!el[pf.ns] || !el[pf.ns].evaled) {
                    // force synchronous srcset parsing
                    pf.fillImg(el, {reselect: true});
                }

                if (!el[pf.ns].curSrc) {
                    // force picturefill to parse srcset
                    el[pf.ns].supported = false;
                    pf.fillImg(el, {reselect: true});
                }

                // retrieve parsed currentSrc, if any
                el.currentSrc = el[pf.ns].curSrc || el.src;
            }
        }

        function getStyle(el) {
            var style = getComputedStyle(el).fontFamily;
            var parsed;
            var props = {};
            while ((parsed = propRegex.exec(style)) !== null) {
                props[parsed[1]] = parsed[2];
            }
            return props;
        }

        function setPlaceholder(img, width, height) {
            // Default: fill width, no height
            var placeholder = createPlaceholder(width || 1, height || 0);

            // Only set placeholder if it's different
            if (nativeGetAttribute.call(img, 'src') !== placeholder) {
                nativeSetAttribute.call(img, 'src', placeholder);
            }
        }

        function onImageReady(img, callback) {
            // naturalWidth is only available when the image headers are loaded,
            // this loop will poll it every 100ms.
            if (img.naturalWidth) {
                callback(img);
            } else {
                setTimeout(onImageReady, 100, img, callback);
            }
        }

        function fixOne(el) {
            var style = getStyle(el);
            var ofi = el[OFI];
            style['object-fit'] = style['object-fit'] || 'fill'; // default value

            // Avoid running where unnecessary, unless OFI had already done its deed
            if (!ofi.img) {
                // fill is the default behavior so no action is necessary
                if (style['object-fit'] === 'fill') {
                    return;
                }

                // Where object-fit is supported and object-position isn't (Safari < 10)
                if (
                    !ofi.skipTest && // unless user wants to apply regardless of browser support
                    supportsObjectFit && // if browser already supports object-fit
                    !style['object-position'] // unless object-position is used
                ) {
                    return;
                }
            }

            // keep a clone in memory while resetting the original to a blank
            if (!ofi.img) {
                ofi.img = new Image(el.width, el.height);
                ofi.img.srcset = nativeGetAttribute.call(el, "data-ofi-srcset") || el.srcset;
                ofi.img.src = nativeGetAttribute.call(el, "data-ofi-src") || el.src;

                // preserve for any future cloneNode calls
                // https://github.com/bfred-it/object-fit-images/issues/53
                nativeSetAttribute.call(el, "data-ofi-src", el.src);
                if (el.srcset) {
                    nativeSetAttribute.call(el, "data-ofi-srcset", el.srcset);
                }

                setPlaceholder(el, el.naturalWidth || el.width, el.naturalHeight || el.height);

                // remove srcset because it overrides src
                if (el.srcset) {
                    el.srcset = '';
                }
                try {
                    keepSrcUsable(el);
                } catch (err) {
                    if (window.console) {
                        console.warn('https://bit.ly/ofi-old-browser');
                    }
                }
            }

            polyfillCurrentSrc(ofi.img);

            el.style.backgroundImage = "url(\"" + ((ofi.img.currentSrc || ofi.img.src).replace(/"/g, '\\"')) + "\")";
            el.style.backgroundPosition = style['object-position'] || 'center';
            el.style.backgroundRepeat = 'no-repeat';
            el.style.backgroundOrigin = 'content-box';

            if (/scale-down/.test(style['object-fit'])) {
                onImageReady(ofi.img, function () {
                    if (ofi.img.naturalWidth > el.width || ofi.img.naturalHeight > el.height) {
                        el.style.backgroundSize = 'contain';
                    } else {
                        el.style.backgroundSize = 'auto';
                    }
                });
            } else {
                el.style.backgroundSize = style['object-fit'].replace('none', 'auto').replace('fill', '100% 100%');
            }

            onImageReady(ofi.img, function (img) {
                setPlaceholder(el, img.naturalWidth, img.naturalHeight);
            });
        }

        function keepSrcUsable(el) {
            var descriptors = {
                get: function get(prop) {
                    return el[OFI].img[prop ? prop : 'src'];
                },
                set: function set(value, prop) {
                    el[OFI].img[prop ? prop : 'src'] = value;
                    nativeSetAttribute.call(el, ("data-ofi-" + prop), value); // preserve for any future cloneNode
                    fixOne(el);
                    return value;
                }
            };
            Object.defineProperty(el, 'src', descriptors);
            Object.defineProperty(el, 'currentSrc', {
                get: function () {
                    return descriptors.get('currentSrc');
                }
            });
            Object.defineProperty(el, 'srcset', {
                get: function () {
                    return descriptors.get('srcset');
                },
                set: function (ss) {
                    return descriptors.set(ss, 'srcset');
                }
            });
        }

        function hijackAttributes() {
            function getOfiImageMaybe(el, name) {
                return el[OFI] && el[OFI].img && (name === 'src' || name === 'srcset') ? el[OFI].img : el;
            }

            if (!supportsObjectPosition) {
                HTMLImageElement.prototype.getAttribute = function (name) {
                    return nativeGetAttribute.call(getOfiImageMaybe(this, name), name);
                };

                HTMLImageElement.prototype.setAttribute = function (name, value) {
                    return nativeSetAttribute.call(getOfiImageMaybe(this, name), name, String(value));
                };
            }
        }

        function fix(imgs, opts) {
            var startAutoMode = !autoModeEnabled && !imgs;
            opts = opts || {};
            imgs = imgs || 'img';

            if ((supportsObjectPosition && !opts.skipTest) || !supportsOFI) {
                return false;
            }

            // use imgs as a selector or just select all images
            if (imgs === 'img') {
                imgs = document.getElementsByTagName('img');
            } else if (typeof imgs === 'string') {
                imgs = document.querySelectorAll(imgs);
            } else if (!('length' in imgs)) {
                imgs = [imgs];
            }

            // apply fix to all
            for (var i = 0; i < imgs.length; i++) {
                imgs[i][OFI] = imgs[i][OFI] || {
                    skipTest: opts.skipTest
                };
                fixOne(imgs[i]);
            }

            if (startAutoMode) {
                document.body.addEventListener('load', function (e) {
                    if (e.target.tagName === 'IMG') {
                        fix(e.target, {
                            skipTest: opts.skipTest
                        });
                    }
                }, true);
                autoModeEnabled = true;
                imgs = 'img'; // reset to a generic selector for watchMQ
            }

            // if requested, watch media queries for object-fit change
            if (opts.watchMQ) {
                window.addEventListener('resize', fix.bind(null, imgs, {
                    skipTest: opts.skipTest
                }));
            }
        }

        fix.supportsObjectFit = supportsObjectFit;
        fix.supportsObjectPosition = supportsObjectPosition;

        hijackAttributes();

        module.exports = fix;


        /***/
    }),
    /* 297 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {

            window.talanPreloader = {
                init: function init() {

                    var _this = talanPreloader;

                    _this.classes = {
                        preloaderDone: 'preloader_done',
                        preloaderAjax: 'preloader_ajax'
                    };

                    _this.html = {
                        preloader: document.getElementById('preloader'),
                        preloaderLogo: document.querySelector('.preloader__logo')
                    };

                    _this.data = {
                        progress: 0,
                        hideTime: 1500
                    };

                    _this.timer = null;

                    //menuCtrl.hideOverflow();

                    _this.start();

                    _this.events();
                },
                start: function start() {

                    var _this = talanPreloader;

                    _this.timer = setInterval(_this.check, 100);
                },
                check: function check() {

                    var _this = talanPreloader;

                    var progress = preloader.getProgress();
                    _this.data.progress = progress;

                    _this.html.preloaderLogo.style.opacity = progress;
                },
                onDone: function onDone() {

                    var _this = talanPreloader;

                    clearInterval(_this.timer);
                    _this.html.preloaderLogo.style.opacity = 1;
                    _this.hide();

                    //menuCtrl.showOverflow();
                },
                showAjax: function showAjax() {

                    var _this = talanPreloader;

                    _this.html.preloader.classList.remove(_this.classes.preloaderDone);
                    _this.html.preloader.classList.add(_this.classes.preloaderAjax);
                },
                hide: function hide() {

                    var _this = talanPreloader;

                    _this.html.preloader.classList.add(_this.classes.preloaderDone);

                    // check for showAjax class
                    if (_this.html.preloader.classList.contains(_this.classes.preloaderAjax)) {
                        setTimeout(function () {
                            _this.html.preloader.classList.remove(_this.classes.preloaderAjax);
                        }, _this.data.hideTime);
                    }
                },
                events: function events() {

                    var _this = talanPreloader;

                    document.addEventListener('preloaderDone', _this.onDone);
                }
            };
        })();

        /***/
    }),
    /* 298 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {
            window.headerCtrl = {
                init: function init() {

                    var _this = headerCtrl;

                    _this.classes = {
                        fixed: "header_fixed"
                    };

                    _this.html = {
                        header: document.getElementById("header-black")
                    };

                    _this.data = {
                        isFixed: 0,
                        offset: $(".poster").height()
                    };

                    _this.check();

                    _this.events();
                },
                fix: function fix() {

                    var _this = headerCtrl;

                    _this.html.header.classList.add(_this.classes.fixed);
                    _this.data.isFixed = 1;
                },
                unfix: function unfix() {

                    var _this = headerCtrl;

                    _this.html.header.classList.remove(_this.classes.fixed);
                    _this.data.isFixed = 0;
                },
                check: function check() {
                    var _this = headerCtrl;

                    var s = window.pageYOffset || document.documentElement.scrollTop;

                    if (s >= _this.data.offset && !_this.data.isFixed) {
                        _this.fix();
                    }

                    if (s < _this.data.offset && _this.data.isFixed) {
                        _this.unfix();
                    }
                },
                events: function events() {

                    var _this = headerCtrl;

                    window.addEventListener('scroll', _this.check);

                    window.addEventListener('resize', function () {
                        _this.data.offset = $(".poster").height();
                    });
                }
            };

            window.popupCityCtrl = {

                init: function init() {

                    var _this = popupCityCtrl;
                    _this.popupCity = $('[data-popup-city]');
                    _this.popupClose = $('[data-popup-city-close]');
                    _this.popupBtnMore = $('[data-popup-city-more]');

                    _this.events();
                },

                hidePopup: function hidePopup() {

                    var _this = popupCityCtrl;

                    _this.popupCity.fadeOut();
                },

                events: function events() {

                    var _this = popupCityCtrl;

                    _this.popupBtnMore.on('click', function () {

                        $('[data-dropdown-cities-btn = header-top]').addClass('select__btn_show');
                        $('[data-dropdown-cities=header-top]').slideDown(500);
                        _this.hidePopup();
                    });

                    $(document).on('click', function (e) {

                        var $target = $(e.target);

                        // if (client.windowW > 768) {

                        if (!$target.closest("[data-popup-city]").length || $target.is($('[data-popup-city-close]'))) {
                            _this.hidePopup();
                        }
                        ;

                        // } else {

                        //   if ($target.is($('[data-popup-city-overlay]')) || $target.is($('[data-popup-city-close]'))) {
                        // 		_this.hidePopup();
                        //   };

                        // }
                    });
                }
            };
        })();

        /***/
    }),
    /* 299 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {
            window.menuCtrl = {
                init: function init() {

                    var _this = menuCtrl;

                    _this.classes = {
                        opened: "panel-menu_opened"
                    };

                    _this.html = {
                        $btnOpen: $("[data-open-menu]"),
                        $btnClose: $("[data-close-menu]"),
                        $panel: $("[data-panel-menu]")
                    };

                    _this.data = {
                        isOpened: 0
                    };

                    _this.events();
                },
                open: function open() {

                    var _this = menuCtrl;

                    _this.html.$panel.addClass(_this.classes.opened);
                    _this.data.isOpened = 1;

                    //console.log('open');

                    //_this.hideOverflow();

                },
                close: function close() {

                    var _this = menuCtrl;

                    _this.html.$panel.removeClass(_this.classes.opened);
                    _this.data.isOpened = 0;

                    //console.log('close');

                    //_this.showOverflow();
                },
                hideOverflow: function hideOverflow() {
                    var ctrl = this;

                    document.body.style.overflowY = "hidden";
                    document.body.style.paddingRight = client.scrollW + "px";
                },
                showOverflow: function showOverflow() {
                    var ctrl = this;

                    document.body.style.overflowY = "auto";
                    document.body.style.paddingRight = "0";
                },
                events: function events() {

                    var _this = menuCtrl;

                    _this.html.$btnOpen.on('click', function () {
                        _this.open();
                    });

                    _this.html.$btnClose.on('click', function () {
                        _this.close();
                    });
                }
            };

            window.menuDropdownCity = {

                init: function init() {

                    var ctrl = menuDropdownCity;
                    ctrl.dropdownBtn = $('[data-dropdown-cities-btn]');
                    ctrl.dropdown = $('[data-dropdown-cities]');

                    //console.log(ctrl.dropdownBtn);

                    ctrl.events();
                },

                showOptions: function showOptions($target, $dropdown) {

                    var ctrl = menuDropdownCity;

                    $dropdown.slideDown(500);
                    $target.addClass('select__btn_show');
                },

                hideOptions: function hideOptions(e) {

                    var ctrl = menuDropdownCity;

                    ctrl.dropdown.slideUp(500);
                    ctrl.dropdownBtn.removeClass('select__btn_show');
                },

                events: function events() {

                    var ctrl = menuDropdownCity;

                    ctrl.dropdownBtn.on('click', function (e) {
                        //console.log('click');

                        var $target = $(e.target);
                        var place = $target.data('dropdown-cities-btn');
                        var $dropdown = $('[data-dropdown-cities= ' + place + ']');

                        if (!$target.hasClass('select__btn_show')) {
                            ctrl.showOptions($target, $dropdown);
                        } else {
                            ctrl.hideOptions();
                        }
                    });

                    $(document).on('click', function (e) {
                        if (!$(e.target).closest(".select").length && !$(e.target).is("[data-popup-city-more]")) {
                            ctrl.hideOptions();
                        }
                        ;
                    });
                }
            };
        })();

        /***/
    }),
    /* 300 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {

            window.scrollDownCtrl = {

                init: function init() {

                    var _this = scrollDownCtrl;
                    _this.poster = $(".poster");
                    _this.offset = _this.poster.height() + 1;
                    _this.lastScrollTop = 0;
                    _this.dir = null;
                    _this.isTop = $(window).scrollTop() < _this.offset;
                    _this.busy = 0;

                    _this.html = {
                        $btn: $("[data-scroll-down]")
                    };

                    _this.events();
                    _this.posterHeightCtrl();
                },

                posterHeightCtrl: function posterHeightCtrl() {

                    var _this = scrollDownCtrl;

                    if (_this.offset > client.windowH) {

                        _this.poster.height(_this.offset);
                    }
                    ;
                },

                scrollDown: function scrollDown() {

                    var _this = scrollDownCtrl;

                    /*$("html, body").animate({
   	scrollTop: _this.offset
   }, 300, function() {
   	_this.busy = 0;
   	_this.isTop = 0;
   });*/

                    $("html, body").animate({
                        scrollTop: _this.offset
                    }, 300, function () {
                        _this.busy = 0;
                        _this.isTop = 0;
                    });

                    if (!client.isMobile) {
                        //$.fn.fullpage.moveSectionDown();
                    } else {
                        // $("html, body").animate({
                        // 	scrollTop: _this.offset
                        // }, 300, function() {
                        // 	_this.busy = 0;
                        // 	_this.isTop = 0;
                        // });
                    }
                },

                events: function events() {

                    var _this = scrollDownCtrl;

                    _this.html.$btn.on('click', _this.scrollDown);

                    /*$(document).on('scroll', function() {
   	var presentScroll = $(this).scrollTop();

   		_this.dir = presentScroll > _this.lastScrollTop ? 1 : -1;
   	_this.lastScrollTop = presentScroll;

   	if (presentScroll < _this.offset && _this.dir > 0 && _this.isTop && !_this.busy) {
   		_this.busy = 1;
   		_this.scrollDown();
   	}
   		if (presentScroll < _this.offset && _this.dir < 0 && !_this.isTop && !_this.busy) {
   		_this.busy = 1;
   		$("html, body").animate({
   			scrollTop: 0
   		}, 300, function() {
   			_this.busy = 0;
   			_this.isTop = 1;
   		});
   	}
   	});*/

                    $(window).on('resize', function () {
                        setTimeout(function () {
                            _this.offset = $(".poster").height();
                        }, 100);
                    });
                }
            };

            window.posterVideoCtrl = {

                init: function init() {

                    var ctrl = posterVideoCtrl;
                    ctrl.posterVideo = $('[data-poster-video]');

                    ctrl.initVideo();
                },

                initVideo: function initVideo() {

                    var ctrl = posterVideoCtrl;

                    if (!client.isMobile) {

                        var src = ctrl.posterVideo.data('video-src');
                        ctrl.posterVideo.attr("src", src);
                    }
                    ;
                }
            };
        })();

        /***/
    }),
    /* 301 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {

            window.customScroll = {
                init: function init() {

                    var th = customScroll;

                    th.data = {
                        isMove: 1,
                        offset: $('.poster').height() + 5,
                        lastScrollTop: 0
                    };

                    if (!client.isMobile && $(window).scrollTop() < th.data.offset) {
                    }

                    th.events();
                },
                bring: function bring(dir) {

                    var th = customScroll;

                    var offset = 0;
                    if (dir) {
                        offset = th.data.offset;
                    }

                    $('html, body').animate({
                        scrollTop: offset
                    }, 500, function () {
                        th.data.isMove = 1;
                        if (dir) {
                            setTimeout(function () {
                                th.data.isMove = 1;
                            }, 800);
                        } else {
                            th.data.isMove = 1;
                        }
                    });
                },

                events: function events() {

                    var th = customScroll;

                    var func = function func(e) {
                        var s = $(this).scrollTop();

                        if (client.isMobile) return;

                        if ($(window).scrollTop() < th.data.offset) {
                            e.preventDefault();
                        }

                        if (!th.data.isMove) {
                            e.preventDefault();
                            return;
                        }

                        var delta = e.deltaY || e.detail || e.wheelDelta || e.originalEvent.deltaY || e.originalEvent.wheelDelta * -1;

                        if (s < th.data.offset && th.data.isMove && delta > 0) {
                            e.preventDefault();
                            th.data.isMove = 0;
                            th.bring(1);
                        }

                        //console.log(s, th.data.offset, delta);
                        if (s < th.data.offset && th.data.isMove && delta < 0) {
                            e.preventDefault();
                            th.data.isMove = 0;
                            th.bring(0);
                        }
                    };

                    if ('onwheel' in document) {
                        $(window).on("wheel", func);
                    } else if ('onmousewheel' in document) {
                        $(window).on("mousewheel", func);
                    } else {
                        $(window).on("MozMousePixelScroll", func);
                    }

                    /*$(window).on('scroll', function(e) {
   	var s = $(this).scrollTop();
   	if (s < th.data.offset) {
   		e.preventDefault();
   	}
   });*/

                    $(window).on('resize', function () {
                        th.data.offset = $('.poster').height();
                    });

                    /*$(window).on('mousemove', function(e) {
   	if (th.data.isMove && !th.data.isBusy) {
   		e.preventDefault();
   		th.data.isBusy = 1;
   		th.bring();
   	}
   });*/
                }
            };
        })();

        /***/
    }),
    /* 302 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {

            window.popupCtrl = {
                init: function init() {

                    var _this = popupCtrl;
                    _this.btnOpenCall = $('[data-modal-open= call-back ]');
                    _this.btnOpenThanks = $('[data-modal-open= thanks ]');
                    _this.btnOpenExcursion = $('[data-modal-open= excursion ]');

                    _this.btnSubmitCall = $('[data-modal="call-back"] .popup__form [type="submit"]');

                    _this.events();
                },

                events: function events() {

                    var _this = popupCtrl;

                    _this.btnOpenThanks.on('click', function (e) {
                        e.preventDefault();
                    });
                    _this.btnOpenExcursion.on('click', function (e) {
                        e.preventDefault();
                    });

                    _this.btnSubmitCall.on('click', function (e) {
                        $(e.target).closest('.form').addClass('form_validating');
                    });
                }
            };
        })();

        /***/
    }),
    /* 303 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {
            window.scaleCtrl = {
                init: function init() {

                    this.scaleFilling();
                },
                scaleFilling: function scaleFilling() {

                    $('[data-progress]').each(function () {

                        var $scale = $(this);
                        var value = $scale.data('progress');

                        $scale.css("width", "" + value + "%");
                    });
                }
            };
        })();

        /***/
    }),
    /* 304 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {

            window.testimonialsCtrl = {
                init: function init() {

                    var _this = testimonialsCtrl;

                    _this.html = {
                        $slider: $("[data-testimonials-slider]"),
                        $statusCurrent: $("[data-testimonials-status-current]"),
                        $statusTotal: $("[data-testimonials-status-total]")
                    };

                    _this.setStatus();
                    _this.events();
                },
                setStatus: function setStatus() {

                    var _this = testimonialsCtrl;

                    var current = _this.html.$slider.slick('slickCurrentSlide') + 1;
                    var total = _this.html.$slider.slick('getSlick').slideCount;

                    current = current < 10 ? '0' + current : current;
                    total = total < 10 ? '0' + total : total;

                    _this.html.$statusCurrent.text(current);
                    _this.html.$statusTotal.text(total);
                },
                events: function events() {

                    var _this = testimonialsCtrl;

                    _this.html.$slider.on('afterChange', function () {
                        _this.setStatus();
                    });
                }
            };

            window.videoCtrl = {
                init: function init() {

                    var _this = videoCtrl;

                    videoCtrl.events();
                },
                events: function events() {

                    $(document).on('click', '[data-youtube]', function () {

                        var $block = $(this);

                        var id = $block.data('youtube');

                        //console.log(id);

                        var $iframe = $block.find("iframe");
                        var src = "https://www.youtube.com/embed/" + id + "?rel=0&amp;showinfo=0&amp;autoplay=1";
                        $iframe.attr('src', src).fadeIn();
                    });
                }
            };
        })();

        /***/
    }),
    /* 305 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {

            window.sharesSliderInit = {

                init: function init() {

                    var ctrl = sharesSliderInit;
                    ctrl.$slider = $("[data-shares-slider]");

                    ctrl.checkScreen();
                    ctrl.events();
                },

                checkScreen: function checkScreen() {

                    var ctrl = sharesSliderInit;
                    var options = ctrl.$slider.data('shares-slider');
                    var ctrl = sharesSliderInit;

                    if ($(window).width() < 768 && !ctrl.$slider.hasClass('slick-initialized')) {
                        ctrl.$slider.slick(options);
                        sharesCtrl.init();
                    }
                    if ($(window).width() >= 768 && ctrl.$slider.hasClass('slick-initialized')) {
                        ctrl.$slider.slick('unslick');
                    }
                },

                events: function events() {

                    var ctrl = sharesSliderInit;

                    $(window).resize(ctrl.checkScreen);
                }
            };

            window.sharesCtrl = {
                init: function init() {

                    var _this = sharesCtrl;

                    _this.html = {
                        $slider: $("[data-shares-slider]"),
                        $statusCurrent: $("[data-shares-status-current]"),
                        $statusTotal: $("[data-shares-status-total]")
                    };

                    _this.setStatus();

                    _this.events();
                },
                setStatus: function setStatus() {

                    var _this = sharesCtrl;

                    var current = _this.html.$slider.slick('slickCurrentSlide') + 1;
                    var total = _this.html.$slider.slick('getSlick').slideCount;

                    current = current < 10 ? '0' + current : current;
                    total = total < 10 ? '0' + total : total;

                    _this.html.$statusCurrent.text(current);
                    _this.html.$statusTotal.text(total);
                },
                events: function events() {

                    var _this = sharesCtrl;

                    _this.html.$slider.on('afterChange', function () {
                        _this.setStatus();
                    });
                }
            };
        })();

        /***/
    }),
    /* 306 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {
            window.forms = {
                init: function init() {

                    var th = forms;

                    th.events();
                },
                events: function events() {

                    var th = forms;

                    $(document).on('blur', 'input', function () {
                        var $inp = $(this);
                        var $field = $inp.closest(".form__field");
                        if ($inp.val().length) {
                            $field.addClass("form__field_has_content");
                        } else {
                            $field.removeClass("form__field_has_content");
                        }
                    });

                    $(document).on('focusout', 'textarea', function () {
                        var $inp = $(this);
                        var $field = $inp.closest(".form__field");
                        if ($inp.val().length) {
                            $field.addClass("form__field_has_content");
                        } else {
                            $field.removeClass("form__field_has_content");
                        }
                    });
                }
            };
        })();

        /***/
    }),
    /* 307 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {

            var ajax = function ajax(url, method, data, _success, _error) {
                $.ajax({
                    url: url,
                    data: data,
                    processData: false,
                    contentType: false,
                    type: method.toUpperCase(),
                    success: function success(data) {
                        _success(data);
                    },
                    error: function error(data) {
                        _error(data);
                    }
                });
            };

            window.formHandler = {
                init: function init() {

                    var th = this;

                    th.classes = {
                        fieldError: "has-error"
                    };

                    th.elements = {
                        $forms: $("[data-form]")
                    };

                    th.events();
                },
                onSubmit: function onSubmit($form) {

                    var th = this;

                    //var data = new FormData($form[0]);
                    var data = $form.serializeArray();

                    var isValid = th.isDataValid($form, data);

                    if (isValid) {
                        // send
                        th.send($form, data);
                    }
                },
                send: function send($form, data) {

                    var th = formHandler;

                    var url = $form.attr('action');
                    var method = $form.attr('method');

                    var success = function success(resp) {
                        th.onSuccess($form);
                    };

                    var error = function error(resp) {
                        th.onError($form);
                    };

                    ajax(url, method, data, success, error);
                },
                onSuccess: function onSuccess($form) {

                    $form.closest('[data-form-outer]').find(".form-content").addClass('form-content_hidden');
                    $form.closest('[data-form-outer]').find(".form-success").removeClass('form-success_hidden');
                },
                onError: function onError($form) {
                },
                resetForm: function resetForm($formOuter) {

                    var th = formHandler;

                    var $form = $formOuter.find("[data-form]");
                    $form[0].reset();
                    $form.find(".form__field").removeClass('form__field_has_content has-error');

                    $formOuter.find(".form-content").removeClass('form-content_hidden');
                    $formOuter.find(".form-success").addClass('form-success_hidden');
                },
                isDataValid: function isDataValid($form, data) {

                    //console.log(data);

                    var th = formHandler;

                    var isValid = 1;

                    var names = ['name', 'email', 'question'];

                    var validate = {
                        name: function name(val) {
                            return val.length > 1;
                        },
                        email: function email(val) {
                            var re = /^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;
                            return re.test(val.toLowerCase());
                        },
                        question: function question(val) {
                            return val.length > 5;
                        }
                    };

                    $form.find("input[data-validation-name='agree']").closest('.field').addClass(th.classes.fieldError);

                    var isAgree = 0;
                    var i = 0,
                        len = data.length;
                    for (i; i < len; i++) {
                        //var name = names[i];
                        var nameOrig = data[i].name;
                        var name = $form.find("input[name=" + nameOrig + "]").data('validation-name');
                        var value = data[i].value;

                        if (name === 'agree') {
                            isAgree = 1;
                            $form.find("input[data-validation-name='agree']").closest('.field').removeClass(th.classes.fieldError);
                        }

                        if (validate.hasOwnProperty(name)) {
                            if (!validate[name](value)) {
                                isValid = 0;
                                $form.find("input[data-validation-name=" + name + "]").closest('.field').addClass(th.classes.fieldError);
                            } else {
                                $form.find("input[data-validation-name=" + name + "]").closest('.field').removeClass(th.classes.fieldError);
                            }
                        }
                    }

                    return isValid === 1 && isAgree === 1;
                },
                events: function events() {

                    var th = this;

                    th.elements.$forms.on('submit', function (e) {
                        e.preventDefault();
                        var $form = $(this);
                        th.onSubmit($form);
                    });

                    $(document).on('click', '[data-form-reset-btn]', function () {
                        var $formOuter = $(this).closest('[data-form-outer]');
                        th.resetForm($formOuter);
                    });
                }
            };

            $(document).ready(function () {
                //formHandler.init();
            });

            // $(document).ready(function () {
            //     $('.input_phone').usPhoneFormat({
            //         format: 'xxx-xxx-xxx',
            //     });
            // });


            /*     My Javascript      */

            $(function () {

                $(".input_phone").mask("+7(999) 999-99-99");

                $("#phone").on("blur", function () {
                    var last = $(this).val().substr($(this).val().indexOf("-") + 1);

                    if (last.length == 5) {
                        var move = $(this).val().substr($(this).val().indexOf("-") + 1, 1);

                        var lastfour = last.substr(1, 4);

                        var first = $(this).val().substr(0, 9);

                        $(this).val(first + move + '-' + lastfour);
                    }
                });
            });
        })();

        /***/
    }),
    /* 308 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {
            window.customSelect = {
                init: function init() {

                    var _this = this;

                    _this.classes = {};

                    _this.html = {
                        $elements: $("[data-custom-select]")
                    };

                    _this.render();

                    _this.events();
                },
                render: function render() {

                    var _this = this;
                    var $selects = $("[data-custom-select]");

                    $selects.each(function (index) {
                        //console.log(index);
                        var $el = $(this);
                        if ($el.hasClass('initialized')) {
                            return;
                        }
                        var $select = $el.find("select");
                        var options = [];

                        $select.find("option").each(function () {
                            var $option = $(this);
                            var val = $option.val();
                            var text = $option.text();
                            var data = $option.data();
                            var isActive = !$option.attr('disabled');
                            var isSelected = $option.prop("selected");

                            options.push({
                                value: val,
                                text: text,
                                data: data,
                                isActive: isActive,
                                isSelected: isSelected
                            });
                        });

                        var html = _this.build(options);

                        // z-index to prevent bottom dropdowns overlap top ones
                        $el.append(html).css('z-index', $selects.length - index + 1);
                        $el.addClass('initialized');
                    });
                },
                build: function build(options) {

                    var currentText = '';

                    var itemsList = '';

                    var i = 0,
                        len = options.length;
                    for (i; i < len; i++) {
                        var val = options[i].value;
                        var text = options[i].text;
                        var isSelected = options[i].isSelected;
                        var customSelectSettings = $("[data-custom-select]").data('custom-select');
                        var data = '';
                        if (!$.isEmptyObject(options[i].data)) {
                            for (var name in options[i].data) {
                                data += "data-" + name + "=\"" + options[i].data[name] + "\" ";
                            }
                        }

                        if (val.length) {

                            if (customSelectSettings.tabs) {
                                var item = '<button class="custom-select__item" data-select-item-value="' + val + '" data-select-item-text="' + text + '" data-open-tab="' + val + '" ' + data + '>' + text + '</button>';
                                itemsList += options[i].isActive ? item : '';
                            } else {
                                var item = '<button class="custom-select__item" data-select-item-value="' + val + '" data-select-item-text="' + text + '" ' + data + '>' + text + '</button>';
                                itemsList += options[i].isActive ? item : '';
                            }
                        }

                        if (isSelected) {
                            currentText = text;
                        }
                    }

                    var totalHtml = '<div class="custom-select__outer">' + '<button type="button" class="custom-select__head">' + '<div class="custom-select__value">' + currentText + '</div>' + '</button>' + '<div class="custom-select__body">' + '<div class="custom-select__list">' + itemsList + '</div>' + '</div>' + '</div>';

                    return totalHtml;
                },
                setActiveItem: function setActiveItem($customSelect, $select, val, text) {

                    var _this = this;

                    $customSelect.find(".custom-select__value").text(text);
                    $select.val(val);
                    $select.trigger('changed');
                    _this.close($customSelect);
                },
                open: function open($customSelect) {

                    $customSelect.find(".custom-select__body").slideDown(300);
                    $customSelect.addClass('custom-select_opened');
                },
                close: function close($customSelect) {

                    $customSelect.find(".custom-select__body").slideUp(300);
                    $customSelect.removeClass('custom-select_opened');
                },
                closeAll: function closeAll() {

                    var _this = this;

                    _this.html.$elements.each(function () {
                        var $el = $(this);

                        $el.find(".custom-select__body").slideUp(300);
                        $el.removeClass('custom-select_opened');
                    });
                },
                reinit: function reinit() {

                    var _this = customSelect;

                    _this.render();
                },
                events: function events() {

                    if ($('html').hasClass('custom-select_initialized')) return;

                    var _this = this;

                    client.$document.on('click', '.custom-select__head', function (e) {
                        e.preventDefault();

                        var $customSelect = $(this).closest('[data-custom-select]');
                        if ($customSelect.hasClass('custom-select_opened')) {
                            // close
                            _this.close($customSelect);
                        } else {
                            // open
                            // var $otherSelects = $("[data-custom-select].custom-select_opened");
                            // _this.close($otherSelects);
                            _this.closeAll();
                            _this.open($customSelect);
                        }
                    });

                    client.$document.on('click', '[data-select-item-value]', function (e) {
                        e.preventDefault();

                        var $option = $(this);
                        var $customSelect = $option.closest("[data-custom-select]");
                        var $select = $customSelect.find("select");

                        var val = $option.data('select-item-value');
                        var text = $option.data('select-item-text');

                        _this.setActiveItem($customSelect, $select, val, text);
                    });

                    client.$document.on('click', function (e) {
                        if (!$(e.target).hasClass('custom-select') && !$(e.target).closest('.custom-select').length) {
                            _this.closeAll();
                        }
                    });

                    client.$document.on('reinit', function () {

                        _this.reinit();
                    });

                    $('html').addClass('custom-select_initialized');
                }
            };

            window.searchFilters = {
                init: function init() {

                    var th = searchFilters;

                    //var $filters = $("[data-no-ui-slider]");

                    th.render();

                    th.events();
                },
                render: function render() {

                    var th = searchFilters;

                    $("[data-no-ui-slider]").each(function () {

                        var $currentFilter = $(this);
                        if ($currentFilter.hasClass('initialized')) {
                            return;
                        }
                        var $slider = $currentFilter.find(".nouislider__slider");

                        var $inpMin = $slider.siblings('.ranges').find("[data-no-ui-input-min]");
                        var $inpMax = $slider.siblings('.ranges').find("[data-no-ui-input-max]");
                        var $inp = $slider.siblings('.ranges').find("[data-no-ui-input]");

                        var options = $currentFilter.data('no-ui-slider');
                        options.range = {
                            min: +$currentFilter.data('range-min'),
                            max: +$currentFilter.data('range-max')
                        };

                        if ($inpMax.length && $inpMin.length) {
                            options.start = [$inpMin.val(), $inpMax.val()];
                        } else if ($inp.length) {
                            options.connect = [true, false];
                            options.start = $inp.val();
                        } else {
                            return th.destroy($currentFilter);
                        }

                        // check no items to filter
                        if (options.range.min === options.range.max) return th.destroy($currentFilter);

                        var wNumbOptions = $currentFilter.data('wnumb');
                        if (wNumbOptions) {
                            options.format = wNumb(wNumbOptions);
                        } else {
                            options.format = wNumb({
                                decimals: 0
                            });
                        }

                        noUiSlider.create($slider[0], options);

                        $slider[0].noUiSlider.on('update', function (values, handle) {
                            $inpMin.val(values[0]);
                            $inpMax.val(values[1]);
                            $inp.val(values[0]);
                            //console.log(values, handle);
                            var value = values[handle];

                            // save numaric value in input`s data
                            if (wNumbOptions) {
                                $inpMin.data('value', options.format.from(values[0]));
                                $inpMax.data('value', options.format.from(values[1]));
                                $inp.data('value', options.format.from(values[0]));
                            }

                            var raw = wNumbOptions ? options.format.from(value) : value;

                            var type = $currentFilter.data('nouislider-type');
                            $(document).trigger('nouisliderChange', [type, handle, value, raw]);
                        });

                        $inpMin.on('blur change', function () {
                            var val = +$(this).val();
                            $slider[0].noUiSlider.set([val, null]);
                        });

                        $inpMax.on('blur change', function () {
                            var val = +$(this).val();
                            $slider[0].noUiSlider.set([null, val]);
                        });

                        $inp.on('blur change', function (e) {
                            var val = +$(this).val();
                            $slider[0].noUiSlider.set(val);
                        });

                        // convert input values
                        if (wNumbOptions) {
                            $inpMin.on('focus', function () {
                                $(this).val($(this).data('value'));
                            });

                            $inpMax.on('focus', function () {
                                $(this).val($(this).data('value'));
                            });

                            $inp.on('focus', function () {
                                $(this).val($(this).data('value'));
                            });
                        }

                        $currentFilter.addClass('initialized');
                    });
                },
                reinit: function reinit() {

                    var th = searchFilters;
                    th.render();
                },
                events: function events() {

                    var th = searchFilters;

                    client.$document.on('reinit', function () {

                        th.reinit();
                    });
                },
                destroy: function destroy($filter) {

                    $filter.closest('.filters__section').remove();
                }
                /*reinit: function() {
       var th = searchFilters;
       var $filters = $(".filters");
       // reinit Selects
      var reinitSelects = function() {
         var $selects = $filters.find("[data-custom-select]");
        $selects.each(function() {
          var $select = $(this);
          var $selectDefault = $select.find("select");
          var val = $selectDefault.val();
          console.log($selectDefault, val);
          customSelect.setActiveItem($select, $selectDefault, val, val);
        });
       };
       // reinit noui sliders
      var reinitSliders = function() {
         var $sliders = $filters.find(".nouislider");
        $sliders.each(function() {
          var $slider = $(this);
          var $inpMin = $slider.find("[data-no-ui-input-min]");
          var $inpMax = $slider.find("[data-no-ui-input-max]");
          var min = $inpMin.val();
          var max = $inpMax.val();
           var rangeMin = +$slider.data('range-min');
          var rangeMax = +$slider.data('range-max');
           console.log(rangeMin);
           //$slider.find(".nouislider__slider")[0].noUiSlider.set([min, max]);
          $slider.find(".nouislider__slider")[0].noUiSlider.updateOptions({
            start: [min, max],
            range: {
              'min': rangeMin,
              'max': rangeMax
            }
          });
          });
       };
       reinitSelects();
      reinitSliders();
     }*/
            };

            // $(document).ready(function() {
            //   $(document).on('nouisliderChange', function(e, type, handle, value) {
            //     console.log(type, handle, value);
            //   });
            // });
        })();

        /***/
    }),
    /* 309 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {

            window.readinessCtrl = {
                init: function init() {

                    var _this = readinessCtrl;

                    _this.html = {
                        $slider: $("[data-readiness-slider]"),
                        $statusCurrent: $("[data-readiness-status-current]"),
                        $statusTotal: $("[data-readiness-status-total]")
                    };

                    _this.setStatus();

                    _this.events();
                },
                setStatus: function setStatus() {

                    var _this = readinessCtrl;

                    var current = _this.html.$slider.slick('slickCurrentSlide') + 1;
                    var total = _this.html.$slider.slick('getSlick').slideCount;

                    current = current < 10 ? '0' + current : current;
                    total = total < 10 ? '0' + total : total;

                    _this.html.$statusCurrent.text(current);
                    _this.html.$statusTotal.text(total);
                },
                events: function events() {

                    var _this = readinessCtrl;

                    _this.html.$slider.on('afterChange', function () {
                        _this.setStatus();
                    });
                }
            };
        })();

        /***/
    }),
    /* 310 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {
            'use strict';

            window.architectMoreCtrl = {

                init: function init() {

                    var ctrl = architectMoreCtrl;
                    ctrl.$architectBlur = $('[data-blur-architect]');
                    ctrl.$architectBtn = $('[data-btn-architect]');
                    ctrl.$architectContent = $('[data-architect-content]');

                    ctrl.addBtn();
                    ctrl.events();
                },

                addBtn: function addBtn() {

                    var ctrl = architectMoreCtrl;
                    var basicHeight = ctrl.$architectContent.height();
                    ctrl.$architectContent.css({'height': 'auto'});
                    var fullHeight = ctrl.$architectContent.height();
                    ctrl.$architectContent.height(basicHeight);

                    if (fullHeight > 470 && client.windowW > 1200) {
                        ctrl.$architectBlur.addClass('card__blur_show');
                        ctrl.$architectContent.height(470);
                    }

                    if (fullHeight > 349 && client.windowW >= 768 && client.windowW <= 1200) {
                        ctrl.$architectBlur.addClass('card__blur_show');
                        ctrl.$architectContent.addClass('card__content_margin');
                        ctrl.$architectContent.height(349);
                    }

                    if (fullHeight > 462 && client.windowW < 768) {
                        ctrl.$architectBlur.addClass('card__blur_show');
                        ctrl.$architectContent.height(462);
                    }
                },

                showText: function showText() {

                    var ctrl = architectMoreCtrl;
                    var basicHeight = ctrl.$architectContent.height();
                    ctrl.$architectContent.css({'height': 'auto'});
                    var fullHeight = ctrl.$architectContent.height();
                    //console.log("fullHeight-3", fullHeight);
                    ctrl.$architectContent.height(basicHeight);
                    ctrl.$architectContent.animate({
                        height: fullHeight
                    }, 500);
                    console.log(fullHeight, basicHeight);
                    ctrl.$architectContent.data('basic-height', basicHeight);
                    ctrl.$architectBtn.addClass('card__btn_show').text('Свернуть');
                },

                hideText: function hideText() {

                    var ctrl = architectMoreCtrl;
                    var basicHeight = ctrl.$architectContent.data('basic-height');
                    ctrl.$architectBtn.removeClass('card__btn_show').text('Развернуть');
                    ctrl.$architectContent.animate({
                        height: basicHeight
                    }, 500);
                },

                events: function events() {

                    var ctrl = architectMoreCtrl;

                    $(window).on('resize', function () {
                        ctrl.$architectContent.attr('style', '');
                        ctrl.$architectBtn.removeClass('card__btn_show').text('Развернуть');
                        ctrl.$architectContent.data('basic-height', '0');
                        ctrl.addBtn();
                    });

                    ctrl.$architectBtn.on('click', function () {
                        if (!ctrl.$architectBtn.hasClass('card__btn_show')) {
                            ctrl.showText();
                        } else {
                            ctrl.hideText();
                        }
                        ;
                    });
                }
            };
        })();

        /***/
    }),
    /* 311 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        $(document).ready(function () {
            if (window.matchMedia('(min-width: 768px)').matches) {
                $(".buffer").stick_in_parent();
            }
        });

        $('.tour__body-overlay').click(function () {
            var wrapp = $('.tour__body-overlay');
            console.log(wrapp);
            wrapp.fadeOut(500);
        });

        /***/
    }),
    /* 312 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {

            window.circleProgress = {
                init: function init() {

                    $('[data-circle-progress]').each(function () {
                        var $block = $(this);

                        var val = +$block.data('circle-progress');

                        if (val <= 14) {
                            val = '10';
                            $block.find(".circle-progress__progress_" + val).addClass('circle-progress__progress_active');
                            return;
                        }

                        if (val <= 24) {
                            val = '20';
                            $block.find(".circle-progress__progress_" + val).addClass('circle-progress__progress_active');
                            return;
                        }

                        if (val <= 34) {
                            val = '30';
                            $block.find(".circle-progress__progress_" + val).addClass('circle-progress__progress_active');
                            return;
                        }

                        if (val <= 44) {
                            val = '40';
                            $block.find(".circle-progress__progress_" + val).addClass('circle-progress__progress_active');
                            return;
                        }

                        if (val <= 54) {
                            val = '50';
                            $block.find(".circle-progress__progress_" + val).addClass('circle-progress__progress_active');
                            return;
                        }

                        if (val <= 64) {
                            val = '60';
                            $block.find(".circle-progress__progress_" + val).addClass('circle-progress__progress_active');
                            return;
                        }

                        if (val <= 74) {
                            val = '70';
                            $block.find(".circle-progress__progress_" + val).addClass('circle-progress__progress_active');
                            return;
                        }

                        if (val <= 84) {
                            val = '80';
                            $block.find(".circle-progress__progress_" + val).addClass('circle-progress__progress_active');
                            return;
                        }

                        if (val <= 99) {
                            val = '90';
                            $block.find(".circle-progress__progress_" + val).addClass('circle-progress__progress_active');
                            return;
                        }

                        if (val === 100) {
                            val = '100';
                            $block.find(".circle-progress__progress_" + val).addClass('circle-progress__progress_active');
                            return;
                        }
                    });
                }
            };
        })();

        /***/
    }),
    /* 313 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        (function () {
            var $scrlBtn = $('[data-scroll-subscribe]');
            if (!$scrlBtn.length) return;

            var $el = $($scrlBtn.attr('href'));
            if (!$el.length) return;

            var offset = $('#header-black').height() || 0;

            $scrlBtn.click(function (e) {
                e.preventDefault();
                $('html, body').animate({
                    scrollTop: $el.offset().top - offset
                }, 700);
            });
        })();

        /***/
    }),
    /* 314 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var _fancybox = __webpack_require__(112);

        $(document).ready(function () {
            // set dom elems to var
            var $zoomBtn = $('.gallery__zoom, .slider-main__zoom'),
                $header = $('.header'),
                $window = $(window);

            // remove header bouncing/ add custom nav elems
            $("[data-fancybox='gallery']").fancybox({
                beforeShow: function beforeShow() {
                    $window.width() > 1200 ? $header.css({'padding-right': '17px'}) : '';
                },
                afterClose: function afterClose() {
                    $window.width() > 1200 ? $header.css({'padding-right': '0'}) : '';
                },
                idleTime: Infinity,
                buttons: ['close'],
                tpl: {
                    closeBtn: '<a title="Close" class="fancybox-item fancybox-close myClose" href="javascript:;"></a>'
                }
            });

            // init zoom btn click
            $zoomBtn.on('click', function (e) {
                e.preventDefault();
                $zoomBtn.parent().find('.slick-active').trigger('click');
            });
        });

        /***/
    }),
    /* 315 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        $(document).on('keydown keyup', '.calculator_input__bid', function (e) {
            // get max value
            var maxValue = $('.calculator_input__price span').text() * 1,
                $years = $('.calculator_input__years span'),
                $profit = $('.calculator_input__profit span'),
                yearsValue = void 0,
                profitValue = void 0;

            // only numbers fix for FF
            if (e.which >= 48 && e.which <= 57 || e.which >= 96 && e.which <= 105 || e.which == 8) {
                var $this = $(this)[0];
                // compare input value to maxValue
                if (e.which != 8) {
                    if ($this.value > maxValue) {
                        $($this).val(parseFloat(maxValue));
                        $this.blur();
                    }
                }
            } else {
                return false;
            }

            // calc invest values
            yearsValue = maxValue / $this.value * 1 / 12;
            profitValue = $this.value * 12;
            // set values to dom
            $years.text(parseFloat(yearsValue).toFixed(1));
            $profit.text(parseInt(profitValue));
        });

        /***/
    }),
    /* 316 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        $(document).ready(function () {
            var checkBoxes = $('.filter_commercial .checkbox__checkbox');
            checkBoxes.on('change', function (e) {
                if (!$(this).parent('label').siblings('label').find('input').is(":checked")) {
                    $(this).prop('checked', 'checked');
                }
            });
        });

        /***/
    }),
    /* 317 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        !function () {
            window.paymentCalc = {

                $result: $('.calc__month-payment--price'),
                $result2: $('.calc__month-payment--price2'),

                $banks: $('.bank-section__item'),

                $bankField: $('.bank-name'),

                monthBid: $('.bank-section__item').data('monthbid'),
                bankName: $('.bank-section__item').data('bankname'),

                filters: {
                    price: 0,
                    first_value: 0,
                    term: 0
                },

                filtersHypo: {
                    priceHypo: 0,
                    first_valueHypo: 0,
                    termHypo: 0
                },

                formFields: {
                    price: $('.js-popup-price'),
                    first_value: $('.js-popup-first_value'),
                    term: $('.js-popup-term'),
                    payment: $('.js-popup-payment'),

                    priceHypo: $('.js-popup-price'),
                    first_valueHypo: $('.js-popup-first_value'),
                    termHypo: $('.js-popup-term'),
                    paymentHypo: $('.js-popup-payment')
                },

                init: function init() {
                    var _this = paymentCalc;
                    var types = Object.getOwnPropertyNames(_this.filters);
                    var typesHypo = Object.getOwnPropertyNames(_this.filtersHypo);
                    var valid = true;

                    //получаем данные для рассрочки
                    types.forEach(function (type) {
                        var value = $('.calc_form-installment .nouislider[data-nouislider-type="' + type + '"]').find('input').val();
                        if (!value) {
                            valid = false;
                            return;
                        }

                        _this.filters[type] = value;
                        _this.formFields[type].val(value);

                        // console.log(type, value);
                    });

                    //получаем данные для ипотеки
                    typesHypo.forEach(function (type) {
                        var value = $('.calc_form-ipoteka .nouislider[data-nouislider-type="' + type + '"]').find('input').val();
                        if (!value) {
                            valid = false;
                            return;
                        }

                        _this.filtersHypo[type] = value;
                        _this.formFields[type].val(value);

                        // console.log(type, value);
                    });

                    if (!valid) {
                        console.warn('no valid inputs for calculator');
                        // _this.$result.closest('.calc').hide();
                        // return;
                    }

                    searchFilters.init();
                    _this.calculate();
                    _this.events();
                },

                format: function format() {

                    var _this = paymentCalc;

                    var wNumbOptions = _this.$result.data('wnumb') || _this.$result2.data('wnumb');

                    if (wNumbOptions) return wNumb(wNumbOptions);
                    return false;
                },

                calculate: function calculate() {

                    var _this = paymentCalc;

                    var price = _this.filters.price;
                    var first_value = _this.filters.first_value;
                    var term = _this.filters.term;

                    //Рассрочка
                    //{ежемесячный_платеж} = ( {стоимость_квартиры}-{стоимость_квартиры}*{первоначальный взнос}/100 )/{сроки}.
                    var value2 = (price - price * first_value / 100) / term;

                    //Ипотека
                    // Функция расчета
                    function PMT(ir, np, pv, fv, type) {
                        /*
         * ir   - процентная ставка
         * np   - срок кредита в месяцах
         * pv   - present value
         * fv   - future value
         * type - when the payments are due:
         *        0: end of the period, e.g. end of month (default)
         *        1: beginning of period
         */
                        var pmt, pvif;

                        fv || (fv = 0);
                        type || (type = 0);

                        if (ir === 0) return -(pv + fv) / np;

                        pvif = Math.pow(1 + ir, np);
                        pmt = -ir * pv * (pvif + fv) / (pvif - 1);

                        if (type === 1) pmt /= 1 + ir;

                        return pmt;
                    }

                    price = _this.filtersHypo.priceHypo;
                    first_value = _this.filtersHypo.first_valueHypo;
                    term = _this.filtersHypo.termHypo;
                    // процентная ставка
                    var bidPerMonth = _this.monthBid / 100;


                    var value = -PMT(bidPerMonth / 12, term, price - price * first_value / 100);
                    var formatted = _this.format() ? _this.format().to(value) : value.toFixed();
                    var formatted2 = _this.format() ? _this.format().to(value2) : value2.toFixed();

                    _this.$result.html(formatted);
                    _this.$result2.html(formatted2);
                    _this.formFields.payment.val(value.toFixed());
                    $('.bank-names').html('\u0421\u0442\u0430\u0432\u043A\u0430 ' + _this.bankName + ': <span>' + _this.monthBid + '%</span>');
                    // _this.$bankField.text(`${_this.monthBid}%`)
                    return formatted;
                },

                events: function events() {

                    var _this = paymentCalc;
                    var types = Object.getOwnPropertyNames(_this.filters);
                    var typesHypo = Object.getOwnPropertyNames(_this.filtersHypo);

                    $(document).on('nouisliderChange', function (e, type, val, handle, raw) {

                        // console.log(type, raw, );
                        if (types.indexOf(type) === -1 && typesHypo.indexOf(type) === -1) return;


                        _this.filters[type] = raw;
                        _this.filtersHypo[type] = raw;
                        // console.log(raw);
                        _this.formFields[type].val(raw / 12);
                        _this.calculate();
                        // console.log(_this.formFields[type].val( raw ));
                    });

                    // init banks item click event and recalculate monthly value
                    _this.$banks.each(function () {
                        $(this).on('click', function () {
                            for (var i = 0; i < _this.$banks.length; i++) {
                                $(_this.$banks[i]).removeClass('active');
                            }
                            $(this).addClass('active');
                            _this.monthBid = $(this).data('monthbid');
                            _this.bankName = $(this).data('bankname');
                            _this.calculate();
                        });
                    });
                }
            };
        }();

        /***/
    }),
    /* 318 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        $(function () {
            var btns = $('.branch_team__wrap-btn .branch_team__btn');
            var tabs = $('.branch_team__tabs .branch_team__tab');
            btns.on('click', function (e) {
                e.preventDefault();
                var index = btns.index(this);
                if (tabs.eq(index).hasClass('has-content')) {
                    swithTab(index);
                } else {
                    var url = $(this).data("url");
                    $.ajax(url, {
                        dataType: "html",
                        success: function success(res) {
                            tabs.eq(index).html(res).addClass('has-content');
                            swithTab(index);
                        }
                    });
                }
            });

            function swithTab(index) {
                // BUTTONS
                $(btns[index]).siblings().removeClass('branch_team__btn-a');
                $(btns[index]).addClass('branch_team__btn-a');
                // TABS
                $(tabs[index]).siblings().removeClass('branch_team__tab-active');
                $(tabs[index]).addClass('branch_team__tab-active');
            }
        });

        /***/
    }),
    /* 319 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {

            window.stavkaCtrl = {
                init: function init() {

                    var _this = stavkaCtrl;

                    _this.html = {
                        $slider: $("[data-stavka-slider]"),
                        $statusCurrent: $("[data-stavka-status-current]"),
                        $statusTotal: $("[data-stavka-status-total]")
                    };

                    _this.html.$nav = _this.html.$statusCurrent.closest('.navigation__content');

                    _this.setStatus();
                    _this.checkNav();
                    _this.events();
                },
                setStatus: function setStatus() {

                    var _this = stavkaCtrl;

                    var current = _this.html.$slider.slick('slickCurrentSlide') + 1;
                    var total = _this.html.$slider.slick('getSlick').slideCount;

                    current = current < 10 ? '0' + current : current;
                    total = total < 10 ? '0' + total : total;

                    _this.html.$statusCurrent.text(current);
                    _this.html.$statusTotal.text(total);
                },

                checkNav: function checkNav() {
                    var _this = stavkaCtrl;

                    var total = _this.html.$slider.slick('getSlick').slideCount;

                    if (total < 2) {
                        _this.html.$nav.hide();
                    } else {
                        _this.html.$nav.show();
                    }
                },

                events: function events() {

                    var _this = stavkaCtrl;

                    _this.html.$slider.on('afterChange', function () {
                        _this.setStatus();
                    });

                    $(window).on('resize', _this.checkNav);
                }
            };
        })();

        /***/
    }),
    /* 320 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        $(document).ready(function () {

            $('.vac-faq__link').click(function (e) {
                e.preventDefault();
                e.stopPropagation();
                if (e.target !== this) return;
                $(this).toggleClass('active');
                $(this).parent().find('.vac-faq__textblock').toggle('fast');
            });

            $('.commercial__mask-link').click(function (e) {
                e.stopPropagation();
            });
        });

        /***/
    }),
    /* 321 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {

            window.careerCtrl = {
                init: function init() {

                    var _this = careerCtrl;

                    _this.html = {
                        $slider: $("[data-gallery-slider]"),
                        $statusCurrent: $("[data-gallery-slider-status-current]"),
                        $statusTotal: $("[data-gallery-slider-status-total]")
                    };

                    _this.setStatus();

                    _this.events();
                },
                setStatus: function setStatus() {

                    var _this = careerCtrl;

                    var current = _this.html.$slider.slick('slickCurrentSlide') + 1;
                    var total = _this.html.$slider.slick('getSlick').slideCount;

                    current = current < 10 ? '0' + current : current;
                    total = total < 10 ? '0' + total : total;

                    _this.html.$statusCurrent.text(current);
                    _this.html.$statusTotal.text(total);
                },
                events: function events() {

                    var _this = careerCtrl;

                    _this.html.$slider.on('afterChange', function () {
                        _this.setStatus();
                    });
                }
            };
        })();

        /***/
    }),
    /* 322 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        $(document).ready(function () {

            var $popups = $('.choose-aphouse__flats');
            var $window = $(window);

            var prices = $('.prices-box');
            var pricesText = prices.text(),
                priceToNumber = parseInt(pricesText);
            // console.log(priceToNumber.toLocaleString('ru-RU', { style: 'currency', currency: 'RUB' }));


            // for (var i = 0; i < prices.length; i++) {
            //   priceToNumber = priceToNumber.toLocaleString('ru-RU', { style: 'currency', currency: 'RUB' });
            //   console.log(priceToNumber);
            // }

            $(function () {
                $('.prices-box').each(function (i, price) {
                    var currentPrice = $(price),
                        currenPriceText = currentPrice.text(),
                        priceToNumber = parseInt(currenPriceText);

                    var newPrice = priceToNumber.toLocaleString('ru-RU');

                    currentPrice[0].innerHTML = newPrice;
                });
            });

            // console.log($('.prices-box').text());

            $('.choose-aphouse__link').click(function (e) {

                if ($window.width() >= 1200) return;

                // e.preventDefault();
                e.stopPropagation();
                $popups.removeClass('active');

                $(this).find('.choose-aphouse__flats').addClass('active');
            });

            $('.choose-aphouse__close-btn').click(function (e) {
                e.stopPropagation();
                if ($window.width() >= 1200) return;
                $popups.removeClass('active');
            });
        });

        /***/
    }),
    /* 323 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        $(document).ready(function () {

            if ($('main[data-pages]').data('pages') !== 'constructor-page') return;

            // INIT SCROLL PLUGIN
            var $stickyColumns = $('[data-sticky_column]');

            function toggleSticky(x) {
                if (x.matches) {
                    $('.sales__select-block').show();
                    $stickyColumns.stick_in_parent().on("sticky_kit:stick", function (e) {
                        $(".header").removeClass('header_fixed');
                    }).on("sticky_kit:unstick", function (e) {
                        $(".header").addClass('header_fixed');
                    });
                    // .on("sticky_kit:bottom", function(){
                    //   console.log('bottom');
                    //   let minHeight = 0;
                    //   $stickyColumns.each(function(i,col){
                    //     let height = $(col).height();
                    //     if ( height > minHeight ) minHeight = height;
                    //   })
                    //   $stickyColumns.css({ minHeight });
                    // })
                } else {
                    $stickyColumns.trigger("sticky_kit:detach");
                    $(".header").addClass('header_fixed');
                }
            }

            var x = window.matchMedia("(min-width:1200px)");
            toggleSticky(x);
            x.addListener(toggleSticky);

            // GREEN SELECT MENU
            for (var i = 0; i < $('.sales__select-btn').length; i++) {
                //console.log('wedwd');
                if (!$($('.sales__select-btn')[i]).siblings().length) {
                    $($('.sales__select-btn')[i]).addClass('deactive');
                }
            }

            $('.sales__select-btn').click(function (e) {
                if (!$(this).siblings().length) {
                    return;
                }
                e.preventDefault();
                e.stopPropagation();
                if (e.target !== this) return;
                $(this).toggleClass('active');
                $(this).parent().find('.sales__lists').toggle('fast', function () {
                    $(document.body).trigger("sticky_kit:recalc");
                });
            });

            $('.sales__category-btn').click(function (e) {
                e.preventDefault();
                e.stopPropagation();
                if (e.target !== this) return;
                $(this).toggleClass('active');
                $(this).parent().find('.sales__select-block').toggle('fast');
            });

            $('.service__btn, .disclosure__btn').click(function (e) {
                e.preventDefault();
                e.stopPropagation();
                if (e.target !== this) return;
                $(this).toggleClass('active');
                // $(this).parent().find('.chart').toggle('fast')
                $(this).siblings('.chart-block').toggleClass('active');
            });

            // ADD TABLES CLASS
            function wrapTable() {

                var $table = $('.article_constructor').find('table');

                var $tables = Array.from($table);

                $table.each(function (i, table) {
                    var wrappers = ['<div class="table__wrap">'];

                    var wrapperImg = ['<div class="table__wrap_img">'];

                    var $table = $(table);

                    if ($table.find('img').length) {
                        $.each(wrapperImg, function (undefined, wrapper) {
                            $table = $table.wrap(wrapper).parent();
                        });
                    } else {
                        $.each(wrappers, function (undefined, wrapper) {
                            $table = $table.wrap(wrapper).parent();
                        });
                    }
                });
            }

            wrapTable();

            // console.log($videos);

            // $('.disclosure__btn').click(function(e) {
            //   e.preventDefault();
            //   e.stopPropagation();
            //   if (e.target !== this) return;
            //   $(this).toggleClass('active');
            //   $(this).parent().find('.chart-pie').toggle('fast')
            // });


            // PROGRESS BAR
            $(document).on('click', '.progress__link', function (e) {
                e.preventDefault();
                e.stopPropagation();
                if (e.target !== this) return;
                // $(this).toggleClass('active');
                $(this).parents('.schedule').find('.progress-block__lists').toggle('fast');
            });

            // Chart GRAFIK-line
            // $(".chart").each(function(i, el){
            //   var $el = $(el);
            //   var ctx = $el.find("canvas");
            //   var data;
            //
            //   try {
            //     data = JSON.parse($el.find("script").text());
            //     buildChart(data, ctx);
            //   } catch (e) {
            //     console.error(e);
            //   }
            // })
            //
            //  function buildChart(data, ctx) {
            //
            //    var chart = new Chart(ctx, {
            //      type: 'line',
            //      data: data,
            //      options: {
            //        responsive: true,
            //        legend: {
            //          display: true,
            //          labels: {
            //            fontColor: 'rgb(52, 52, 52)',
            //            fontSize: 10,
            //            fontFamily: "'Northern', 'Helvetica', 'Arial', sans-serif",
            //            fontWeight: 'bold',
            //          }
            //        },
            //        layout: {
            //          padding: {
            //            left: 0,
            //            right: 0,
            //            top: 0,
            //            bottom: 0
            //          }
            //        },
            //        scales: {
            //          yAxes: [{
            //            stacked: false
            //          }]
            //        }
            //      }
            //    });
            //  }

            // BAR Chart
            $(".chart-bar").each(function (i, el) {
                var $el = $(el);
                var ctx = $el.find("canvas");
                var data;

                try {
                    data = JSON.parse($el.find("script").text());
                    buildChartBar(data, ctx);
                } catch (e) {
                    console.error(e);
                }
            });

            function buildChartBar(data, ctx) {

                var chart = new Chart(ctx, {
                    type: 'bar',
                    data: data,
                    options: {
                        scales: {
                            yAxes: [{
                                ticks: {
                                    min: 0
                                }
                            }]
                        }
                    }
                });
            }

            // PIE Chart
            //  $(".chart-pie").each(function(i, el){
            //    var $el = $(el);
            //    var ctx = $el.find("canvas");
            //    var data;
            //
            //    try {
            //      data = JSON.parse($el.find("script").text());
            //      buildChartPie(data, ctx);
            //    } catch (e) {
            //      console.error(e);
            //    }
            //  })
            //
            // function buildChartPie(data, ctx) {
            //
            //   var chart = new Chart(ctx, {
            //     type: 'pie',
            //     data: data,
            //     options: {
            //       responsive: true,
            //       legend: {
            //         position: 'right',
            //         display: true,
            //         labels: {
            //           fontColor: 'rgb(52, 52, 52)',
            //           fontSize: 14,
            //           fontFamily: "'Northern', 'Helvetica', 'Arial', sans-serif",
            //           fontWeight: 'bolder',
            //         }
            //       }
            //     }
            //   });
            // }

        });

        /***/
    }),
    /* 324 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        $(document).ready(function () {
            $('.new-quality .zoom-img, .apartment-description__img .zoom-img ').click(function () {
                var img = $(this);
                var src = img.attr('src');

                $('body').append('<div class="popup-img">' + '<div class="popup-img__bg"></div>' + '<img src="' + src + '"class="popup-img__large">' + '<div class="popup-img__close"></div>' + '</div>');

                $('.popup-img').fadeIn(500);
                $('.popup-img__bg, .popup-img__close').click(function () {
                    $('.popup-img').fadeOut(500);
                    setTimeout(function () {
                        $('.popup-img').remove();
                    }, 500);
                });
            });
        });

        /***/
    }),
    /* 325 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }

            return function (Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();
        /**
         * Home page scripts.
         *
         * @module ConstructorFlat
         */


        var _vue = __webpack_require__(326);

        var _vue2 = _interopRequireDefault(_vue);

        var _TheConstructor = __webpack_require__(329);

        var _TheConstructor2 = _interopRequireDefault(_TheConstructor);

        var _vuex = __webpack_require__(368);

        var _vuex2 = _interopRequireDefault(_vuex);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {default: obj};
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        _vue2.default.use(_vuex2.default);

// import { Resp, throttle } from '../modules/dev/_helpers';

        var ConstructorFlat = function () {
            /**
             * Cache data, make preparations and initialize page scripts.
             */

            function ConstructorFlat() {
                _classCallCheck(this, ConstructorFlat);

                this.body = document.body;
                this.sectionExist = false;

                this.init();
            }

            _createClass(ConstructorFlat, [{
                key: 'initApp',
                value: function initApp() {
                    var store = new _vuex2.default.Store({
                        state: {
                            total_sum: 0,
                            current_item: 0,
                            openedFilterItems: false,
                            arrResult: [],
                            selected: {
                                0: {
                                    "Стены": 0,
                                    "Полы": 0,
                                    "Двери": 0,
                                    "Оборудование": {
                                        '0': false,
                                        '1': false,
                                        '2': false,
                                        '3': false,
                                        '4': false,
                                        '5': false,
                                        '6': false,
                                        '7': false,
                                        '8': false,
                                        '9': false
                                    }
                                },
                                1: {
                                    "Стены": 0
                                }
                            }
                        },
                        mutations: {
                            SUM: function SUM(state, sum) {
                                state.total_sum = sum;
                            },
                            SET_ARR_RESULT: function SET_ARR_RESULT(state, item) {
                                state.arrResult = item;
                            },
                            SET_CURRENT_ITEM: function SET_CURRENT_ITEM(state, item) {
                                state.current_item = item;
                            },
                            DELETE_EQUPMENT: function DELETE_EQUPMENT(state, id) {
                                state.selected[0]['Оборудование'][id] = false;
                            },
                            SET_EQUPMENT: function SET_EQUPMENT(state, item) {
                                state.selected[item.currentItem][item.name][item.i] = !state.selected[item.currentItem][item.name][item.i];
                            },
                            SET_FILTERED_ITEM: function SET_FILTERED_ITEM(state, item) {
                                state.selected[item.currentItem][item.name] = item.i;
                            }
                        }
                    });
                    var app = new _vue2.default({
                        el: '#vueApp',
                        store: store,
                        components: {
                            TheConstructor: _TheConstructor2.default
                        },
                        computed: (0, _vuex.mapState)(['current_item'])
                    });
                }
            }, {
                key: 'checkExistingOfConstructorBlock',
                value: function checkExistingOfConstructorBlock() {
                    this.body.querySelector('[data-section="vue-constructor"]') !== null ? this.sectionExist = true : this.sectionExist = false;
                    if (this.sectionExist === true) {
                        this.initApp();
                    }
                }
            }, {
                key: 'init',
                value: function init() {
                    this.checkExistingOfConstructorBlock();
                }
            }]);

            return ConstructorFlat;
        }();

        exports.default = ConstructorFlat;


        var ConstructorScript = new ConstructorFlat();

        /***/
    }),
    /* 326 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* WEBPACK VAR INJECTION */
        (function (process, global, setImmediate) {/*!
 * Vue.js v2.5.16
 * (c) 2014-2018 Evan You
 * Released under the MIT License.
 */
            /*  */

            var emptyObject = Object.freeze({});

// these helpers produces better vm code in JS engines due to their
// explicitness and function inlining
            function isUndef(v) {
                return v === undefined || v === null
            }

            function isDef(v) {
                return v !== undefined && v !== null
            }

            function isTrue(v) {
                return v === true
            }

            function isFalse(v) {
                return v === false
            }

            /**
             * Check if value is primitive
             */
            function isPrimitive(value) {
                return (
                    typeof value === 'string' ||
                    typeof value === 'number' ||
                    // $flow-disable-line
                    typeof value === 'symbol' ||
                    typeof value === 'boolean'
                )
            }

            /**
             * Quick object check - this is primarily used to tell
             * Objects from primitive values when we know the value
             * is a JSON-compliant type.
             */
            function isObject(obj) {
                return obj !== null && typeof obj === 'object'
            }

            /**
             * Get the raw type string of a value e.g. [object Object]
             */
            var _toString = Object.prototype.toString;

            function toRawType(value) {
                return _toString.call(value).slice(8, -1)
            }

            /**
             * Strict object type check. Only returns true
             * for plain JavaScript objects.
             */
            function isPlainObject(obj) {
                return _toString.call(obj) === '[object Object]'
            }

            function isRegExp(v) {
                return _toString.call(v) === '[object RegExp]'
            }

            /**
             * Check if val is a valid array index.
             */
            function isValidArrayIndex(val) {
                var n = parseFloat(String(val));
                return n >= 0 && Math.floor(n) === n && isFinite(val)
            }

            /**
             * Convert a value to a string that is actually rendered.
             */
            function toString(val) {
                return val == null
                    ? ''
                    : typeof val === 'object'
                        ? JSON.stringify(val, null, 2)
                        : String(val)
            }

            /**
             * Convert a input value to a number for persistence.
             * If the conversion fails, return original string.
             */
            function toNumber(val) {
                var n = parseFloat(val);
                return isNaN(n) ? val : n
            }

            /**
             * Make a map and return a function for checking if a key
             * is in that map.
             */
            function makeMap(
                str,
                expectsLowerCase
            ) {
                var map = Object.create(null);
                var list = str.split(',');
                for (var i = 0; i < list.length; i++) {
                    map[list[i]] = true;
                }
                return expectsLowerCase
                    ? function (val) {
                        return map[val.toLowerCase()];
                    }
                    : function (val) {
                        return map[val];
                    }
            }

            /**
             * Check if a tag is a built-in tag.
             */
            var isBuiltInTag = makeMap('slot,component', true);

            /**
             * Check if a attribute is a reserved attribute.
             */
            var isReservedAttribute = makeMap('key,ref,slot,slot-scope,is');

            /**
             * Remove an item from an array
             */
            function remove(arr, item) {
                if (arr.length) {
                    var index = arr.indexOf(item);
                    if (index > -1) {
                        return arr.splice(index, 1)
                    }
                }
            }

            /**
             * Check whether the object has the property.
             */
            var hasOwnProperty = Object.prototype.hasOwnProperty;

            function hasOwn(obj, key) {
                return hasOwnProperty.call(obj, key)
            }

            /**
             * Create a cached version of a pure function.
             */
            function cached(fn) {
                var cache = Object.create(null);
                return (function cachedFn(str) {
                    var hit = cache[str];
                    return hit || (cache[str] = fn(str))
                })
            }

            /**
             * Camelize a hyphen-delimited string.
             */
            var camelizeRE = /-(\w)/g;
            var camelize = cached(function (str) {
                return str.replace(camelizeRE, function (_, c) {
                    return c ? c.toUpperCase() : '';
                })
            });

            /**
             * Capitalize a string.
             */
            var capitalize = cached(function (str) {
                return str.charAt(0).toUpperCase() + str.slice(1)
            });

            /**
             * Hyphenate a camelCase string.
             */
            var hyphenateRE = /\B([A-Z])/g;
            var hyphenate = cached(function (str) {
                return str.replace(hyphenateRE, '-$1').toLowerCase()
            });

            /**
             * Simple bind polyfill for environments that do not support it... e.g.
             * PhantomJS 1.x. Technically we don't need this anymore since native bind is
             * now more performant in most browsers, but removing it would be breaking for
             * code that was able to run in PhantomJS 1.x, so this must be kept for
             * backwards compatibility.
             */

            /* istanbul ignore next */
            function polyfillBind(fn, ctx) {
                function boundFn(a) {
                    var l = arguments.length;
                    return l
                        ? l > 1
                            ? fn.apply(ctx, arguments)
                            : fn.call(ctx, a)
                        : fn.call(ctx)
                }

                boundFn._length = fn.length;
                return boundFn
            }

            function nativeBind(fn, ctx) {
                return fn.bind(ctx)
            }

            var bind = Function.prototype.bind
                ? nativeBind
                : polyfillBind;

            /**
             * Convert an Array-like object to a real Array.
             */
            function toArray(list, start) {
                start = start || 0;
                var i = list.length - start;
                var ret = new Array(i);
                while (i--) {
                    ret[i] = list[i + start];
                }
                return ret
            }

            /**
             * Mix properties into target object.
             */
            function extend(to, _from) {
                for (var key in _from) {
                    to[key] = _from[key];
                }
                return to
            }

            /**
             * Merge an Array of Objects into a single Object.
             */
            function toObject(arr) {
                var res = {};
                for (var i = 0; i < arr.length; i++) {
                    if (arr[i]) {
                        extend(res, arr[i]);
                    }
                }
                return res
            }

            /**
             * Perform no operation.
             * Stubbing args to make Flow happy without leaving useless transpiled code
             * with ...rest (https://flow.org/blog/2017/05/07/Strict-Function-Call-Arity/)
             */
            function noop(a, b, c) {
            }

            /**
             * Always return false.
             */
            var no = function (a, b, c) {
                return false;
            };

            /**
             * Return same value
             */
            var identity = function (_) {
                return _;
            };

            /**
             * Generate a static keys string from compiler modules.
             */
            function genStaticKeys(modules) {
                return modules.reduce(function (keys, m) {
                    return keys.concat(m.staticKeys || [])
                }, []).join(',')
            }

            /**
             * Check if two values are loosely equal - that is,
             * if they are plain objects, do they have the same shape?
             */
            function looseEqual(a, b) {
                if (a === b) {
                    return true
                }
                var isObjectA = isObject(a);
                var isObjectB = isObject(b);
                if (isObjectA && isObjectB) {
                    try {
                        var isArrayA = Array.isArray(a);
                        var isArrayB = Array.isArray(b);
                        if (isArrayA && isArrayB) {
                            return a.length === b.length && a.every(function (e, i) {
                                return looseEqual(e, b[i])
                            })
                        } else if (!isArrayA && !isArrayB) {
                            var keysA = Object.keys(a);
                            var keysB = Object.keys(b);
                            return keysA.length === keysB.length && keysA.every(function (key) {
                                return looseEqual(a[key], b[key])
                            })
                        } else {
                            /* istanbul ignore next */
                            return false
                        }
                    } catch (e) {
                        /* istanbul ignore next */
                        return false
                    }
                } else if (!isObjectA && !isObjectB) {
                    return String(a) === String(b)
                } else {
                    return false
                }
            }

            function looseIndexOf(arr, val) {
                for (var i = 0; i < arr.length; i++) {
                    if (looseEqual(arr[i], val)) {
                        return i
                    }
                }
                return -1
            }

            /**
             * Ensure a function is called only once.
             */
            function once(fn) {
                var called = false;
                return function () {
                    if (!called) {
                        called = true;
                        fn.apply(this, arguments);
                    }
                }
            }

            var SSR_ATTR = 'data-server-rendered';

            var ASSET_TYPES = [
                'component',
                'directive',
                'filter'
            ];

            var LIFECYCLE_HOOKS = [
                'beforeCreate',
                'created',
                'beforeMount',
                'mounted',
                'beforeUpdate',
                'updated',
                'beforeDestroy',
                'destroyed',
                'activated',
                'deactivated',
                'errorCaptured'
            ];

            /*  */

            var config = ({
                /**
                 * Option merge strategies (used in core/util/options)
                 */
                // $flow-disable-line
                optionMergeStrategies: Object.create(null),

                /**
                 * Whether to suppress warnings.
                 */
                silent: false,

                /**
                 * Show production mode tip message on boot?
                 */
                productionTip: process.env.NODE_ENV !== 'production',

                /**
                 * Whether to enable devtools
                 */
                devtools: process.env.NODE_ENV !== 'production',

                /**
                 * Whether to record perf
                 */
                performance: false,

                /**
                 * Error handler for watcher errors
                 */
                errorHandler: null,

                /**
                 * Warn handler for watcher warns
                 */
                warnHandler: null,

                /**
                 * Ignore certain custom elements
                 */
                ignoredElements: [],

                /**
                 * Custom user key aliases for v-on
                 */
                // $flow-disable-line
                keyCodes: Object.create(null),

                /**
                 * Check if a tag is reserved so that it cannot be registered as a
                 * component. This is platform-dependent and may be overwritten.
                 */
                isReservedTag: no,

                /**
                 * Check if an attribute is reserved so that it cannot be used as a component
                 * prop. This is platform-dependent and may be overwritten.
                 */
                isReservedAttr: no,

                /**
                 * Check if a tag is an unknown element.
                 * Platform-dependent.
                 */
                isUnknownElement: no,

                /**
                 * Get the namespace of an element
                 */
                getTagNamespace: noop,

                /**
                 * Parse the real tag name for the specific platform.
                 */
                parsePlatformTagName: identity,

                /**
                 * Check if an attribute must be bound using property, e.g. value
                 * Platform-dependent.
                 */
                mustUseProp: no,

                /**
                 * Exposed for legacy reasons
                 */
                _lifecycleHooks: LIFECYCLE_HOOKS
            })

            /*  */

            /**
             * Check if a string starts with $ or _
             */
            function isReserved(str) {
                var c = (str + '').charCodeAt(0);
                return c === 0x24 || c === 0x5F
            }

            /**
             * Define a property.
             */
            function def(obj, key, val, enumerable) {
                Object.defineProperty(obj, key, {
                    value: val,
                    enumerable: !!enumerable,
                    writable: true,
                    configurable: true
                });
            }

            /**
             * Parse simple path.
             */
            var bailRE = /[^\w.$]/;

            function parsePath(path) {
                if (bailRE.test(path)) {
                    return
                }
                var segments = path.split('.');
                return function (obj) {
                    for (var i = 0; i < segments.length; i++) {
                        if (!obj) {
                            return
                        }
                        obj = obj[segments[i]];
                    }
                    return obj
                }
            }

            /*  */

// can we use __proto__?
            var hasProto = '__proto__' in {};

// Browser environment sniffing
            var inBrowser = typeof window !== 'undefined';
            var inWeex = typeof WXEnvironment !== 'undefined' && !!WXEnvironment.platform;
            var weexPlatform = inWeex && WXEnvironment.platform.toLowerCase();
            var UA = inBrowser && window.navigator.userAgent.toLowerCase();
            var isIE = UA && /msie|trident/.test(UA);
            var isIE9 = UA && UA.indexOf('msie 9.0') > 0;
            var isEdge = UA && UA.indexOf('edge/') > 0;
            var isAndroid = (UA && UA.indexOf('android') > 0) || (weexPlatform === 'android');
            var isIOS = (UA && /iphone|ipad|ipod|ios/.test(UA)) || (weexPlatform === 'ios');
            var isChrome = UA && /chrome\/\d+/.test(UA) && !isEdge;

// Firefox has a "watch" function on Object.prototype...
            var nativeWatch = ({}).watch;

            var supportsPassive = false;
            if (inBrowser) {
                try {
                    var opts = {};
                    Object.defineProperty(opts, 'passive', ({
                        get: function get() {
                            /* istanbul ignore next */
                            supportsPassive = true;
                        }
                    })); // https://github.com/facebook/flow/issues/285
                    window.addEventListener('test-passive', null, opts);
                } catch (e) {
                }
            }

// this needs to be lazy-evaled because vue may be required before
// vue-server-renderer can set VUE_ENV
            var _isServer;
            var isServerRendering = function () {
                if (_isServer === undefined) {
                    /* istanbul ignore if */
                    if (!inBrowser && !inWeex && typeof global !== 'undefined') {
                        // detect presence of vue-server-renderer and avoid
                        // Webpack shimming the process
                        _isServer = global['process'].env.VUE_ENV === 'server';
                    } else {
                        _isServer = false;
                    }
                }
                return _isServer
            };

// detect devtools
            var devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

            /* istanbul ignore next */
            function isNative(Ctor) {
                return typeof Ctor === 'function' && /native code/.test(Ctor.toString())
            }

            var hasSymbol =
                typeof Symbol !== 'undefined' && isNative(Symbol) &&
                typeof Reflect !== 'undefined' && isNative(Reflect.ownKeys);

            var _Set;
            /* istanbul ignore if */ // $flow-disable-line
            if (typeof Set !== 'undefined' && isNative(Set)) {
                // use native Set when available.
                _Set = Set;
            } else {
                // a non-standard Set polyfill that only works with primitive keys.
                _Set = (function () {
                    function Set() {
                        this.set = Object.create(null);
                    }

                    Set.prototype.has = function has(key) {
                        return this.set[key] === true
                    };
                    Set.prototype.add = function add(key) {
                        this.set[key] = true;
                    };
                    Set.prototype.clear = function clear() {
                        this.set = Object.create(null);
                    };

                    return Set;
                }());
            }

            /*  */

            var warn = noop;
            var tip = noop;
            var generateComponentTrace = (noop); // work around flow check
            var formatComponentName = (noop);

            if (process.env.NODE_ENV !== 'production') {
                var hasConsole = typeof console !== 'undefined';
                var classifyRE = /(?:^|[-_])(\w)/g;
                var classify = function (str) {
                    return str
                        .replace(classifyRE, function (c) {
                            return c.toUpperCase();
                        })
                        .replace(/[-_]/g, '');
                };

                warn = function (msg, vm) {
                    var trace = vm ? generateComponentTrace(vm) : '';

                    if (config.warnHandler) {
                        config.warnHandler.call(null, msg, vm, trace);
                    } else if (hasConsole && (!config.silent)) {
                        console.error(("[Vue warn]: " + msg + trace));
                    }
                };

                tip = function (msg, vm) {
                    if (hasConsole && (!config.silent)) {
                        console.warn("[Vue tip]: " + msg + (
                            vm ? generateComponentTrace(vm) : ''
                        ));
                    }
                };

                formatComponentName = function (vm, includeFile) {
                    if (vm.$root === vm) {
                        return '<Root>'
                    }
                    var options = typeof vm === 'function' && vm.cid != null
                        ? vm.options
                        : vm._isVue
                            ? vm.$options || vm.constructor.options
                            : vm || {};
                    var name = options.name || options._componentTag;
                    var file = options.__file;
                    if (!name && file) {
                        var match = file.match(/([^/\\]+)\.vue$/);
                        name = match && match[1];
                    }

                    return (
                        (name ? ("<" + (classify(name)) + ">") : "<Anonymous>") +
                        (file && includeFile !== false ? (" at " + file) : '')
                    )
                };

                var repeat = function (str, n) {
                    var res = '';
                    while (n) {
                        if (n % 2 === 1) {
                            res += str;
                        }
                        if (n > 1) {
                            str += str;
                        }
                        n >>= 1;
                    }
                    return res
                };

                generateComponentTrace = function (vm) {
                    if (vm._isVue && vm.$parent) {
                        var tree = [];
                        var currentRecursiveSequence = 0;
                        while (vm) {
                            if (tree.length > 0) {
                                var last = tree[tree.length - 1];
                                if (last.constructor === vm.constructor) {
                                    currentRecursiveSequence++;
                                    vm = vm.$parent;
                                    continue
                                } else if (currentRecursiveSequence > 0) {
                                    tree[tree.length - 1] = [last, currentRecursiveSequence];
                                    currentRecursiveSequence = 0;
                                }
                            }
                            tree.push(vm);
                            vm = vm.$parent;
                        }
                        return '\n\nfound in\n\n' + tree
                            .map(function (vm, i) {
                                return ("" + (i === 0 ? '---> ' : repeat(' ', 5 + i * 2)) + (Array.isArray(vm)
                                    ? ((formatComponentName(vm[0])) + "... (" + (vm[1]) + " recursive calls)")
                                    : formatComponentName(vm)));
                            })
                            .join('\n')
                    } else {
                        return ("\n\n(found in " + (formatComponentName(vm)) + ")")
                    }
                };
            }

            /*  */


            var uid = 0;

            /**
             * A dep is an observable that can have multiple
             * directives subscribing to it.
             */
            var Dep = function Dep() {
                this.id = uid++;
                this.subs = [];
            };

            Dep.prototype.addSub = function addSub(sub) {
                this.subs.push(sub);
            };

            Dep.prototype.removeSub = function removeSub(sub) {
                remove(this.subs, sub);
            };

            Dep.prototype.depend = function depend() {
                if (Dep.target) {
                    Dep.target.addDep(this);
                }
            };

            Dep.prototype.notify = function notify() {
                // stabilize the subscriber list first
                var subs = this.subs.slice();
                for (var i = 0, l = subs.length; i < l; i++) {
                    subs[i].update();
                }
            };

// the current target watcher being evaluated.
// this is globally unique because there could be only one
// watcher being evaluated at any time.
            Dep.target = null;
            var targetStack = [];

            function pushTarget(_target) {
                if (Dep.target) {
                    targetStack.push(Dep.target);
                }
                Dep.target = _target;
            }

            function popTarget() {
                Dep.target = targetStack.pop();
            }

            /*  */

            var VNode = function VNode(
                tag,
                data,
                children,
                text,
                elm,
                context,
                componentOptions,
                asyncFactory
            ) {
                this.tag = tag;
                this.data = data;
                this.children = children;
                this.text = text;
                this.elm = elm;
                this.ns = undefined;
                this.context = context;
                this.fnContext = undefined;
                this.fnOptions = undefined;
                this.fnScopeId = undefined;
                this.key = data && data.key;
                this.componentOptions = componentOptions;
                this.componentInstance = undefined;
                this.parent = undefined;
                this.raw = false;
                this.isStatic = false;
                this.isRootInsert = true;
                this.isComment = false;
                this.isCloned = false;
                this.isOnce = false;
                this.asyncFactory = asyncFactory;
                this.asyncMeta = undefined;
                this.isAsyncPlaceholder = false;
            };

            var prototypeAccessors = {child: {configurable: true}};

// DEPRECATED: alias for componentInstance for backwards compat.
            /* istanbul ignore next */
            prototypeAccessors.child.get = function () {
                return this.componentInstance
            };

            Object.defineProperties(VNode.prototype, prototypeAccessors);

            var createEmptyVNode = function (text) {
                if (text === void 0) text = '';

                var node = new VNode();
                node.text = text;
                node.isComment = true;
                return node
            };

            function createTextVNode(val) {
                return new VNode(undefined, undefined, undefined, String(val))
            }

// optimized shallow clone
// used for static nodes and slot nodes because they may be reused across
// multiple renders, cloning them avoids errors when DOM manipulations rely
// on their elm reference.
            function cloneVNode(vnode) {
                var cloned = new VNode(
                    vnode.tag,
                    vnode.data,
                    vnode.children,
                    vnode.text,
                    vnode.elm,
                    vnode.context,
                    vnode.componentOptions,
                    vnode.asyncFactory
                );
                cloned.ns = vnode.ns;
                cloned.isStatic = vnode.isStatic;
                cloned.key = vnode.key;
                cloned.isComment = vnode.isComment;
                cloned.fnContext = vnode.fnContext;
                cloned.fnOptions = vnode.fnOptions;
                cloned.fnScopeId = vnode.fnScopeId;
                cloned.isCloned = true;
                return cloned
            }

            /*
 * not type checking this file because flow doesn't play well with
 * dynamically accessing methods on Array prototype
 */

            var arrayProto = Array.prototype;
            var arrayMethods = Object.create(arrayProto);

            var methodsToPatch = [
                'push',
                'pop',
                'shift',
                'unshift',
                'splice',
                'sort',
                'reverse'
            ];

            /**
             * Intercept mutating methods and emit events
             */
            methodsToPatch.forEach(function (method) {
                // cache original method
                var original = arrayProto[method];
                def(arrayMethods, method, function mutator() {
                    var args = [], len = arguments.length;
                    while (len--) args[len] = arguments[len];

                    var result = original.apply(this, args);
                    var ob = this.__ob__;
                    var inserted;
                    switch (method) {
                        case 'push':
                        case 'unshift':
                            inserted = args;
                            break
                        case 'splice':
                            inserted = args.slice(2);
                            break
                    }
                    if (inserted) {
                        ob.observeArray(inserted);
                    }
                    // notify change
                    ob.dep.notify();
                    return result
                });
            });

            /*  */

            var arrayKeys = Object.getOwnPropertyNames(arrayMethods);

            /**
             * In some cases we may want to disable observation inside a component's
             * update computation.
             */
            var shouldObserve = true;

            function toggleObserving(value) {
                shouldObserve = value;
            }

            /**
             * Observer class that is attached to each observed
             * object. Once attached, the observer converts the target
             * object's property keys into getter/setters that
             * collect dependencies and dispatch updates.
             */
            var Observer = function Observer(value) {
                this.value = value;
                this.dep = new Dep();
                this.vmCount = 0;
                def(value, '__ob__', this);
                if (Array.isArray(value)) {
                    var augment = hasProto
                        ? protoAugment
                        : copyAugment;
                    augment(value, arrayMethods, arrayKeys);
                    this.observeArray(value);
                } else {
                    this.walk(value);
                }
            };

            /**
             * Walk through each property and convert them into
             * getter/setters. This method should only be called when
             * value type is Object.
             */
            Observer.prototype.walk = function walk(obj) {
                var keys = Object.keys(obj);
                for (var i = 0; i < keys.length; i++) {
                    defineReactive(obj, keys[i]);
                }
            };

            /**
             * Observe a list of Array items.
             */
            Observer.prototype.observeArray = function observeArray(items) {
                for (var i = 0, l = items.length; i < l; i++) {
                    observe(items[i]);
                }
            };

// helpers

            /**
             * Augment an target Object or Array by intercepting
             * the prototype chain using __proto__
             */
            function protoAugment(target, src, keys) {
                /* eslint-disable no-proto */
                target.__proto__ = src;
                /* eslint-enable no-proto */
            }

            /**
             * Augment an target Object or Array by defining
             * hidden properties.
             */

            /* istanbul ignore next */
            function copyAugment(target, src, keys) {
                for (var i = 0, l = keys.length; i < l; i++) {
                    var key = keys[i];
                    def(target, key, src[key]);
                }
            }

            /**
             * Attempt to create an observer instance for a value,
             * returns the new observer if successfully observed,
             * or the existing observer if the value already has one.
             */
            function observe(value, asRootData) {
                if (!isObject(value) || value instanceof VNode) {
                    return
                }
                var ob;
                if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {
                    ob = value.__ob__;
                } else if (
                    shouldObserve &&
                    !isServerRendering() &&
                    (Array.isArray(value) || isPlainObject(value)) &&
                    Object.isExtensible(value) &&
                    !value._isVue
                ) {
                    ob = new Observer(value);
                }
                if (asRootData && ob) {
                    ob.vmCount++;
                }
                return ob
            }

            /**
             * Define a reactive property on an Object.
             */
            function defineReactive(
                obj,
                key,
                val,
                customSetter,
                shallow
            ) {
                var dep = new Dep();

                var property = Object.getOwnPropertyDescriptor(obj, key);
                if (property && property.configurable === false) {
                    return
                }

                // cater for pre-defined getter/setters
                var getter = property && property.get;
                if (!getter && arguments.length === 2) {
                    val = obj[key];
                }
                var setter = property && property.set;

                var childOb = !shallow && observe(val);
                Object.defineProperty(obj, key, {
                    enumerable: true,
                    configurable: true,
                    get: function reactiveGetter() {
                        var value = getter ? getter.call(obj) : val;
                        if (Dep.target) {
                            dep.depend();
                            if (childOb) {
                                childOb.dep.depend();
                                if (Array.isArray(value)) {
                                    dependArray(value);
                                }
                            }
                        }
                        return value
                    },
                    set: function reactiveSetter(newVal) {
                        var value = getter ? getter.call(obj) : val;
                        /* eslint-disable no-self-compare */
                        if (newVal === value || (newVal !== newVal && value !== value)) {
                            return
                        }
                        /* eslint-enable no-self-compare */
                        if (process.env.NODE_ENV !== 'production' && customSetter) {
                            customSetter();
                        }
                        if (setter) {
                            setter.call(obj, newVal);
                        } else {
                            val = newVal;
                        }
                        childOb = !shallow && observe(newVal);
                        dep.notify();
                    }
                });
            }

            /**
             * Set a property on an object. Adds the new property and
             * triggers change notification if the property doesn't
             * already exist.
             */
            function set(target, key, val) {
                if (process.env.NODE_ENV !== 'production' &&
                    (isUndef(target) || isPrimitive(target))
                ) {
                    warn(("Cannot set reactive property on undefined, null, or primitive value: " + ((target))));
                }
                if (Array.isArray(target) && isValidArrayIndex(key)) {
                    target.length = Math.max(target.length, key);
                    target.splice(key, 1, val);
                    return val
                }
                if (key in target && !(key in Object.prototype)) {
                    target[key] = val;
                    return val
                }
                var ob = (target).__ob__;
                if (target._isVue || (ob && ob.vmCount)) {
                    process.env.NODE_ENV !== 'production' && warn(
                        'Avoid adding reactive properties to a Vue instance or its root $data ' +
                        'at runtime - declare it upfront in the data option.'
                    );
                    return val
                }
                if (!ob) {
                    target[key] = val;
                    return val
                }
                defineReactive(ob.value, key, val);
                ob.dep.notify();
                return val
            }

            /**
             * Delete a property and trigger change if necessary.
             */
            function del(target, key) {
                if (process.env.NODE_ENV !== 'production' &&
                    (isUndef(target) || isPrimitive(target))
                ) {
                    warn(("Cannot delete reactive property on undefined, null, or primitive value: " + ((target))));
                }
                if (Array.isArray(target) && isValidArrayIndex(key)) {
                    target.splice(key, 1);
                    return
                }
                var ob = (target).__ob__;
                if (target._isVue || (ob && ob.vmCount)) {
                    process.env.NODE_ENV !== 'production' && warn(
                        'Avoid deleting properties on a Vue instance or its root $data ' +
                        '- just set it to null.'
                    );
                    return
                }
                if (!hasOwn(target, key)) {
                    return
                }
                delete target[key];
                if (!ob) {
                    return
                }
                ob.dep.notify();
            }

            /**
             * Collect dependencies on array elements when the array is touched, since
             * we cannot intercept array element access like property getters.
             */
            function dependArray(value) {
                for (var e = (void 0), i = 0, l = value.length; i < l; i++) {
                    e = value[i];
                    e && e.__ob__ && e.__ob__.dep.depend();
                    if (Array.isArray(e)) {
                        dependArray(e);
                    }
                }
            }

            /*  */

            /**
             * Option overwriting strategies are functions that handle
             * how to merge a parent option value and a child option
             * value into the final value.
             */
            var strats = config.optionMergeStrategies;

            /**
             * Options with restrictions
             */
            if (process.env.NODE_ENV !== 'production') {
                strats.el = strats.propsData = function (parent, child, vm, key) {
                    if (!vm) {
                        warn(
                            "option \"" + key + "\" can only be used during instance " +
                            'creation with the `new` keyword.'
                        );
                    }
                    return defaultStrat(parent, child)
                };
            }

            /**
             * Helper that recursively merges two data objects together.
             */
            function mergeData(to, from) {
                if (!from) {
                    return to
                }
                var key, toVal, fromVal;
                var keys = Object.keys(from);
                for (var i = 0; i < keys.length; i++) {
                    key = keys[i];
                    toVal = to[key];
                    fromVal = from[key];
                    if (!hasOwn(to, key)) {
                        set(to, key, fromVal);
                    } else if (isPlainObject(toVal) && isPlainObject(fromVal)) {
                        mergeData(toVal, fromVal);
                    }
                }
                return to
            }

            /**
             * Data
             */
            function mergeDataOrFn(
                parentVal,
                childVal,
                vm
            ) {
                if (!vm) {
                    // in a Vue.extend merge, both should be functions
                    if (!childVal) {
                        return parentVal
                    }
                    if (!parentVal) {
                        return childVal
                    }
                    // when parentVal & childVal are both present,
                    // we need to return a function that returns the
                    // merged result of both functions... no need to
                    // check if parentVal is a function here because
                    // it has to be a function to pass previous merges.
                    return function mergedDataFn() {
                        return mergeData(
                            typeof childVal === 'function' ? childVal.call(this, this) : childVal,
                            typeof parentVal === 'function' ? parentVal.call(this, this) : parentVal
                        )
                    }
                } else {
                    return function mergedInstanceDataFn() {
                        // instance merge
                        var instanceData = typeof childVal === 'function'
                            ? childVal.call(vm, vm)
                            : childVal;
                        var defaultData = typeof parentVal === 'function'
                            ? parentVal.call(vm, vm)
                            : parentVal;
                        if (instanceData) {
                            return mergeData(instanceData, defaultData)
                        } else {
                            return defaultData
                        }
                    }
                }
            }

            strats.data = function (
                parentVal,
                childVal,
                vm
            ) {
                if (!vm) {
                    if (childVal && typeof childVal !== 'function') {
                        process.env.NODE_ENV !== 'production' && warn(
                            'The "data" option should be a function ' +
                            'that returns a per-instance value in component ' +
                            'definitions.',
                            vm
                        );

                        return parentVal
                    }
                    return mergeDataOrFn(parentVal, childVal)
                }

                return mergeDataOrFn(parentVal, childVal, vm)
            };

            /**
             * Hooks and props are merged as arrays.
             */
            function mergeHook(
                parentVal,
                childVal
            ) {
                return childVal
                    ? parentVal
                        ? parentVal.concat(childVal)
                        : Array.isArray(childVal)
                            ? childVal
                            : [childVal]
                    : parentVal
            }

            LIFECYCLE_HOOKS.forEach(function (hook) {
                strats[hook] = mergeHook;
            });

            /**
             * Assets
             *
             * When a vm is present (instance creation), we need to do
             * a three-way merge between constructor options, instance
             * options and parent options.
             */
            function mergeAssets(
                parentVal,
                childVal,
                vm,
                key
            ) {
                var res = Object.create(parentVal || null);
                if (childVal) {
                    process.env.NODE_ENV !== 'production' && assertObjectType(key, childVal, vm);
                    return extend(res, childVal)
                } else {
                    return res
                }
            }

            ASSET_TYPES.forEach(function (type) {
                strats[type + 's'] = mergeAssets;
            });

            /**
             * Watchers.
             *
             * Watchers hashes should not overwrite one
             * another, so we merge them as arrays.
             */
            strats.watch = function (
                parentVal,
                childVal,
                vm,
                key
            ) {
                // work around Firefox's Object.prototype.watch...
                if (parentVal === nativeWatch) {
                    parentVal = undefined;
                }
                if (childVal === nativeWatch) {
                    childVal = undefined;
                }
                /* istanbul ignore if */
                if (!childVal) {
                    return Object.create(parentVal || null)
                }
                if (process.env.NODE_ENV !== 'production') {
                    assertObjectType(key, childVal, vm);
                }
                if (!parentVal) {
                    return childVal
                }
                var ret = {};
                extend(ret, parentVal);
                for (var key$1 in childVal) {
                    var parent = ret[key$1];
                    var child = childVal[key$1];
                    if (parent && !Array.isArray(parent)) {
                        parent = [parent];
                    }
                    ret[key$1] = parent
                        ? parent.concat(child)
                        : Array.isArray(child) ? child : [child];
                }
                return ret
            };

            /**
             * Other object hashes.
             */
            strats.props =
                strats.methods =
                    strats.inject =
                        strats.computed = function (
                            parentVal,
                            childVal,
                            vm,
                            key
                        ) {
                            if (childVal && process.env.NODE_ENV !== 'production') {
                                assertObjectType(key, childVal, vm);
                            }
                            if (!parentVal) {
                                return childVal
                            }
                            var ret = Object.create(null);
                            extend(ret, parentVal);
                            if (childVal) {
                                extend(ret, childVal);
                            }
                            return ret
                        };
            strats.provide = mergeDataOrFn;

            /**
             * Default strategy.
             */
            var defaultStrat = function (parentVal, childVal) {
                return childVal === undefined
                    ? parentVal
                    : childVal
            };

            /**
             * Validate component names
             */
            function checkComponents(options) {
                for (var key in options.components) {
                    validateComponentName(key);
                }
            }

            function validateComponentName(name) {
                if (!/^[a-zA-Z][\w-]*$/.test(name)) {
                    warn(
                        'Invalid component name: "' + name + '". Component names ' +
                        'can only contain alphanumeric characters and the hyphen, ' +
                        'and must start with a letter.'
                    );
                }
                if (isBuiltInTag(name) || config.isReservedTag(name)) {
                    warn(
                        'Do not use built-in or reserved HTML elements as component ' +
                        'id: ' + name
                    );
                }
            }

            /**
             * Ensure all props option syntax are normalized into the
             * Object-based format.
             */
            function normalizeProps(options, vm) {
                var props = options.props;
                if (!props) {
                    return
                }
                var res = {};
                var i, val, name;
                if (Array.isArray(props)) {
                    i = props.length;
                    while (i--) {
                        val = props[i];
                        if (typeof val === 'string') {
                            name = camelize(val);
                            res[name] = {type: null};
                        } else if (process.env.NODE_ENV !== 'production') {
                            warn('props must be strings when using array syntax.');
                        }
                    }
                } else if (isPlainObject(props)) {
                    for (var key in props) {
                        val = props[key];
                        name = camelize(key);
                        res[name] = isPlainObject(val)
                            ? val
                            : {type: val};
                    }
                } else if (process.env.NODE_ENV !== 'production') {
                    warn(
                        "Invalid value for option \"props\": expected an Array or an Object, " +
                        "but got " + (toRawType(props)) + ".",
                        vm
                    );
                }
                options.props = res;
            }

            /**
             * Normalize all injections into Object-based format
             */
            function normalizeInject(options, vm) {
                var inject = options.inject;
                if (!inject) {
                    return
                }
                var normalized = options.inject = {};
                if (Array.isArray(inject)) {
                    for (var i = 0; i < inject.length; i++) {
                        normalized[inject[i]] = {from: inject[i]};
                    }
                } else if (isPlainObject(inject)) {
                    for (var key in inject) {
                        var val = inject[key];
                        normalized[key] = isPlainObject(val)
                            ? extend({from: key}, val)
                            : {from: val};
                    }
                } else if (process.env.NODE_ENV !== 'production') {
                    warn(
                        "Invalid value for option \"inject\": expected an Array or an Object, " +
                        "but got " + (toRawType(inject)) + ".",
                        vm
                    );
                }
            }

            /**
             * Normalize raw function directives into object format.
             */
            function normalizeDirectives(options) {
                var dirs = options.directives;
                if (dirs) {
                    for (var key in dirs) {
                        var def = dirs[key];
                        if (typeof def === 'function') {
                            dirs[key] = {bind: def, update: def};
                        }
                    }
                }
            }

            function assertObjectType(name, value, vm) {
                if (!isPlainObject(value)) {
                    warn(
                        "Invalid value for option \"" + name + "\": expected an Object, " +
                        "but got " + (toRawType(value)) + ".",
                        vm
                    );
                }
            }

            /**
             * Merge two option objects into a new one.
             * Core utility used in both instantiation and inheritance.
             */
            function mergeOptions(
                parent,
                child,
                vm
            ) {
                if (process.env.NODE_ENV !== 'production') {
                    checkComponents(child);
                }

                if (typeof child === 'function') {
                    child = child.options;
                }

                normalizeProps(child, vm);
                normalizeInject(child, vm);
                normalizeDirectives(child);
                var extendsFrom = child.extends;
                if (extendsFrom) {
                    parent = mergeOptions(parent, extendsFrom, vm);
                }
                if (child.mixins) {
                    for (var i = 0, l = child.mixins.length; i < l; i++) {
                        parent = mergeOptions(parent, child.mixins[i], vm);
                    }
                }
                var options = {};
                var key;
                for (key in parent) {
                    mergeField(key);
                }
                for (key in child) {
                    if (!hasOwn(parent, key)) {
                        mergeField(key);
                    }
                }

                function mergeField(key) {
                    var strat = strats[key] || defaultStrat;
                    options[key] = strat(parent[key], child[key], vm, key);
                }

                return options
            }

            /**
             * Resolve an asset.
             * This function is used because child instances need access
             * to assets defined in its ancestor chain.
             */
            function resolveAsset(
                options,
                type,
                id,
                warnMissing
            ) {
                /* istanbul ignore if */
                if (typeof id !== 'string') {
                    return
                }
                var assets = options[type];
                // check local registration variations first
                if (hasOwn(assets, id)) {
                    return assets[id]
                }
                var camelizedId = camelize(id);
                if (hasOwn(assets, camelizedId)) {
                    return assets[camelizedId]
                }
                var PascalCaseId = capitalize(camelizedId);
                if (hasOwn(assets, PascalCaseId)) {
                    return assets[PascalCaseId]
                }
                // fallback to prototype chain
                var res = assets[id] || assets[camelizedId] || assets[PascalCaseId];
                if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {
                    warn(
                        'Failed to resolve ' + type.slice(0, -1) + ': ' + id,
                        options
                    );
                }
                return res
            }

            /*  */

            function validateProp(
                key,
                propOptions,
                propsData,
                vm
            ) {
                var prop = propOptions[key];
                var absent = !hasOwn(propsData, key);
                var value = propsData[key];
                // boolean casting
                var booleanIndex = getTypeIndex(Boolean, prop.type);
                if (booleanIndex > -1) {
                    if (absent && !hasOwn(prop, 'default')) {
                        value = false;
                    } else if (value === '' || value === hyphenate(key)) {
                        // only cast empty string / same name to boolean if
                        // boolean has higher priority
                        var stringIndex = getTypeIndex(String, prop.type);
                        if (stringIndex < 0 || booleanIndex < stringIndex) {
                            value = true;
                        }
                    }
                }
                // check default value
                if (value === undefined) {
                    value = getPropDefaultValue(vm, prop, key);
                    // since the default value is a fresh copy,
                    // make sure to observe it.
                    var prevShouldObserve = shouldObserve;
                    toggleObserving(true);
                    observe(value);
                    toggleObserving(prevShouldObserve);
                }
                if (
                    process.env.NODE_ENV !== 'production' &&
                    // skip validation for weex recycle-list child component props
                    !(false && isObject(value) && ('@binding' in value))
                ) {
                    assertProp(prop, key, value, vm, absent);
                }
                return value
            }

            /**
             * Get the default value of a prop.
             */
            function getPropDefaultValue(vm, prop, key) {
                // no default, return undefined
                if (!hasOwn(prop, 'default')) {
                    return undefined
                }
                var def = prop.default;
                // warn against non-factory defaults for Object & Array
                if (process.env.NODE_ENV !== 'production' && isObject(def)) {
                    warn(
                        'Invalid default value for prop "' + key + '": ' +
                        'Props with type Object/Array must use a factory function ' +
                        'to return the default value.',
                        vm
                    );
                }
                // the raw prop value was also undefined from previous render,
                // return previous default value to avoid unnecessary watcher trigger
                if (vm && vm.$options.propsData &&
                    vm.$options.propsData[key] === undefined &&
                    vm._props[key] !== undefined
                ) {
                    return vm._props[key]
                }
                // call factory function for non-Function types
                // a value is Function if its prototype is function even across different execution context
                return typeof def === 'function' && getType(prop.type) !== 'Function'
                    ? def.call(vm)
                    : def
            }

            /**
             * Assert whether a prop is valid.
             */
            function assertProp(
                prop,
                name,
                value,
                vm,
                absent
            ) {
                if (prop.required && absent) {
                    warn(
                        'Missing required prop: "' + name + '"',
                        vm
                    );
                    return
                }
                if (value == null && !prop.required) {
                    return
                }
                var type = prop.type;
                var valid = !type || type === true;
                var expectedTypes = [];
                if (type) {
                    if (!Array.isArray(type)) {
                        type = [type];
                    }
                    for (var i = 0; i < type.length && !valid; i++) {
                        var assertedType = assertType(value, type[i]);
                        expectedTypes.push(assertedType.expectedType || '');
                        valid = assertedType.valid;
                    }
                }
                if (!valid) {
                    warn(
                        "Invalid prop: type check failed for prop \"" + name + "\"." +
                        " Expected " + (expectedTypes.map(capitalize).join(', ')) +
                        ", got " + (toRawType(value)) + ".",
                        vm
                    );
                    return
                }
                var validator = prop.validator;
                if (validator) {
                    if (!validator(value)) {
                        warn(
                            'Invalid prop: custom validator check failed for prop "' + name + '".',
                            vm
                        );
                    }
                }
            }

            var simpleCheckRE = /^(String|Number|Boolean|Function|Symbol)$/;

            function assertType(value, type) {
                var valid;
                var expectedType = getType(type);
                if (simpleCheckRE.test(expectedType)) {
                    var t = typeof value;
                    valid = t === expectedType.toLowerCase();
                    // for primitive wrapper objects
                    if (!valid && t === 'object') {
                        valid = value instanceof type;
                    }
                } else if (expectedType === 'Object') {
                    valid = isPlainObject(value);
                } else if (expectedType === 'Array') {
                    valid = Array.isArray(value);
                } else {
                    valid = value instanceof type;
                }
                return {
                    valid: valid,
                    expectedType: expectedType
                }
            }

            /**
             * Use function string name to check built-in types,
             * because a simple equality check will fail when running
             * across different vms / iframes.
             */
            function getType(fn) {
                var match = fn && fn.toString().match(/^\s*function (\w+)/);
                return match ? match[1] : ''
            }

            function isSameType(a, b) {
                return getType(a) === getType(b)
            }

            function getTypeIndex(type, expectedTypes) {
                if (!Array.isArray(expectedTypes)) {
                    return isSameType(expectedTypes, type) ? 0 : -1
                }
                for (var i = 0, len = expectedTypes.length; i < len; i++) {
                    if (isSameType(expectedTypes[i], type)) {
                        return i
                    }
                }
                return -1
            }

            /*  */

            function handleError(err, vm, info) {
                if (vm) {
                    var cur = vm;
                    while ((cur = cur.$parent)) {
                        var hooks = cur.$options.errorCaptured;
                        if (hooks) {
                            for (var i = 0; i < hooks.length; i++) {
                                try {
                                    var capture = hooks[i].call(cur, err, vm, info) === false;
                                    if (capture) {
                                        return
                                    }
                                } catch (e) {
                                    globalHandleError(e, cur, 'errorCaptured hook');
                                }
                            }
                        }
                    }
                }
                globalHandleError(err, vm, info);
            }

            function globalHandleError(err, vm, info) {
                if (config.errorHandler) {
                    try {
                        return config.errorHandler.call(null, err, vm, info)
                    } catch (e) {
                        logError(e, null, 'config.errorHandler');
                    }
                }
                logError(err, vm, info);
            }

            function logError(err, vm, info) {
                if (process.env.NODE_ENV !== 'production') {
                    warn(("Error in " + info + ": \"" + (err.toString()) + "\""), vm);
                }
                /* istanbul ignore else */
                if ((inBrowser || inWeex) && typeof console !== 'undefined') {
                    console.error(err);
                } else {
                    throw err
                }
            }

            /*  */
            /* globals MessageChannel */

            var callbacks = [];
            var pending = false;

            function flushCallbacks() {
                pending = false;
                var copies = callbacks.slice(0);
                callbacks.length = 0;
                for (var i = 0; i < copies.length; i++) {
                    copies[i]();
                }
            }

// Here we have async deferring wrappers using both microtasks and (macro) tasks.
// In < 2.4 we used microtasks everywhere, but there are some scenarios where
// microtasks have too high a priority and fire in between supposedly
// sequential events (e.g. #4521, #6690) or even between bubbling of the same
// event (#6566). However, using (macro) tasks everywhere also has subtle problems
// when state is changed right before repaint (e.g. #6813, out-in transitions).
// Here we use microtask by default, but expose a way to force (macro) task when
// needed (e.g. in event handlers attached by v-on).
            var microTimerFunc;
            var macroTimerFunc;
            var useMacroTask = false;

// Determine (macro) task defer implementation.
// Technically setImmediate should be the ideal choice, but it's only available
// in IE. The only polyfill that consistently queues the callback after all DOM
// events triggered in the same loop is by using MessageChannel.
            /* istanbul ignore if */
            if (typeof setImmediate !== 'undefined' && isNative(setImmediate)) {
                macroTimerFunc = function () {
                    setImmediate(flushCallbacks);
                };
            } else if (typeof MessageChannel !== 'undefined' && (
                    isNative(MessageChannel) ||
                    // PhantomJS
                    MessageChannel.toString() === '[object MessageChannelConstructor]'
                )) {
                var channel = new MessageChannel();
                var port = channel.port2;
                channel.port1.onmessage = flushCallbacks;
                macroTimerFunc = function () {
                    port.postMessage(1);
                };
            } else {
                /* istanbul ignore next */
                macroTimerFunc = function () {
                    setTimeout(flushCallbacks, 0);
                };
            }

// Determine microtask defer implementation.
            /* istanbul ignore next, $flow-disable-line */
            if (typeof Promise !== 'undefined' && isNative(Promise)) {
                var p = Promise.resolve();
                microTimerFunc = function () {
                    p.then(flushCallbacks);
                    // in problematic UIWebViews, Promise.then doesn't completely break, but
                    // it can get stuck in a weird state where callbacks are pushed into the
                    // microtask queue but the queue isn't being flushed, until the browser
                    // needs to do some other work, e.g. handle a timer. Therefore we can
                    // "force" the microtask queue to be flushed by adding an empty timer.
                    if (isIOS) {
                        setTimeout(noop);
                    }
                };
            } else {
                // fallback to macro
                microTimerFunc = macroTimerFunc;
            }

            /**
             * Wrap a function so that if any code inside triggers state change,
             * the changes are queued using a (macro) task instead of a microtask.
             */
            function withMacroTask(fn) {
                return fn._withTask || (fn._withTask = function () {
                    useMacroTask = true;
                    var res = fn.apply(null, arguments);
                    useMacroTask = false;
                    return res
                })
            }

            function nextTick(cb, ctx) {
                var _resolve;
                callbacks.push(function () {
                    if (cb) {
                        try {
                            cb.call(ctx);
                        } catch (e) {
                            handleError(e, ctx, 'nextTick');
                        }
                    } else if (_resolve) {
                        _resolve(ctx);
                    }
                });
                if (!pending) {
                    pending = true;
                    if (useMacroTask) {
                        macroTimerFunc();
                    } else {
                        microTimerFunc();
                    }
                }
                // $flow-disable-line
                if (!cb && typeof Promise !== 'undefined') {
                    return new Promise(function (resolve) {
                        _resolve = resolve;
                    })
                }
            }

            /*  */

            var mark;
            var measure;

            if (process.env.NODE_ENV !== 'production') {
                var perf = inBrowser && window.performance;
                /* istanbul ignore if */
                if (
                    perf &&
                    perf.mark &&
                    perf.measure &&
                    perf.clearMarks &&
                    perf.clearMeasures
                ) {
                    mark = function (tag) {
                        return perf.mark(tag);
                    };
                    measure = function (name, startTag, endTag) {
                        perf.measure(name, startTag, endTag);
                        perf.clearMarks(startTag);
                        perf.clearMarks(endTag);
                        perf.clearMeasures(name);
                    };
                }
            }

            /* not type checking this file because flow doesn't play well with Proxy */

            var initProxy;

            if (process.env.NODE_ENV !== 'production') {
                var allowedGlobals = makeMap(
                    'Infinity,undefined,NaN,isFinite,isNaN,' +
                    'parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,' +
                    'Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,' +
                    'require' // for Webpack/Browserify
                );

                var warnNonPresent = function (target, key) {
                    warn(
                        "Property or method \"" + key + "\" is not defined on the instance but " +
                        'referenced during render. Make sure that this property is reactive, ' +
                        'either in the data option, or for class-based components, by ' +
                        'initializing the property. ' +
                        'See: https://vuejs.org/v2/guide/reactivity.html#Declaring-Reactive-Properties.',
                        target
                    );
                };

                var hasProxy =
                    typeof Proxy !== 'undefined' && isNative(Proxy);

                if (hasProxy) {
                    var isBuiltInModifier = makeMap('stop,prevent,self,ctrl,shift,alt,meta,exact');
                    config.keyCodes = new Proxy(config.keyCodes, {
                        set: function set(target, key, value) {
                            if (isBuiltInModifier(key)) {
                                warn(("Avoid overwriting built-in modifier in config.keyCodes: ." + key));
                                return false
                            } else {
                                target[key] = value;
                                return true
                            }
                        }
                    });
                }

                var hasHandler = {
                    has: function has(target, key) {
                        var has = key in target;
                        var isAllowed = allowedGlobals(key) || key.charAt(0) === '_';
                        if (!has && !isAllowed) {
                            warnNonPresent(target, key);
                        }
                        return has || !isAllowed
                    }
                };

                var getHandler = {
                    get: function get(target, key) {
                        if (typeof key === 'string' && !(key in target)) {
                            warnNonPresent(target, key);
                        }
                        return target[key]
                    }
                };

                initProxy = function initProxy(vm) {
                    if (hasProxy) {
                        // determine which proxy handler to use
                        var options = vm.$options;
                        var handlers = options.render && options.render._withStripped
                            ? getHandler
                            : hasHandler;
                        vm._renderProxy = new Proxy(vm, handlers);
                    } else {
                        vm._renderProxy = vm;
                    }
                };
            }

            /*  */

            var seenObjects = new _Set();

            /**
             * Recursively traverse an object to evoke all converted
             * getters, so that every nested property inside the object
             * is collected as a "deep" dependency.
             */
            function traverse(val) {
                _traverse(val, seenObjects);
                seenObjects.clear();
            }

            function _traverse(val, seen) {
                var i, keys;
                var isA = Array.isArray(val);
                if ((!isA && !isObject(val)) || Object.isFrozen(val) || val instanceof VNode) {
                    return
                }
                if (val.__ob__) {
                    var depId = val.__ob__.dep.id;
                    if (seen.has(depId)) {
                        return
                    }
                    seen.add(depId);
                }
                if (isA) {
                    i = val.length;
                    while (i--) {
                        _traverse(val[i], seen);
                    }
                } else {
                    keys = Object.keys(val);
                    i = keys.length;
                    while (i--) {
                        _traverse(val[keys[i]], seen);
                    }
                }
            }

            /*  */

            var normalizeEvent = cached(function (name) {
                var passive = name.charAt(0) === '&';
                name = passive ? name.slice(1) : name;
                var once$$1 = name.charAt(0) === '~'; // Prefixed last, checked first
                name = once$$1 ? name.slice(1) : name;
                var capture = name.charAt(0) === '!';
                name = capture ? name.slice(1) : name;
                return {
                    name: name,
                    once: once$$1,
                    capture: capture,
                    passive: passive
                }
            });

            function createFnInvoker(fns) {
                function invoker() {
                    var arguments$1 = arguments;

                    var fns = invoker.fns;
                    if (Array.isArray(fns)) {
                        var cloned = fns.slice();
                        for (var i = 0; i < cloned.length; i++) {
                            cloned[i].apply(null, arguments$1);
                        }
                    } else {
                        // return handler return value for single handlers
                        return fns.apply(null, arguments)
                    }
                }

                invoker.fns = fns;
                return invoker
            }

            function updateListeners(
                on,
                oldOn,
                add,
                remove$$1,
                vm
            ) {
                var name, def, cur, old, event;
                for (name in on) {
                    def = cur = on[name];
                    old = oldOn[name];
                    event = normalizeEvent(name);
                    /* istanbul ignore if */
                    if (isUndef(cur)) {
                        process.env.NODE_ENV !== 'production' && warn(
                            "Invalid handler for event \"" + (event.name) + "\": got " + String(cur),
                            vm
                        );
                    } else if (isUndef(old)) {
                        if (isUndef(cur.fns)) {
                            cur = on[name] = createFnInvoker(cur);
                        }
                        add(event.name, cur, event.once, event.capture, event.passive, event.params);
                    } else if (cur !== old) {
                        old.fns = cur;
                        on[name] = old;
                    }
                }
                for (name in oldOn) {
                    if (isUndef(on[name])) {
                        event = normalizeEvent(name);
                        remove$$1(event.name, oldOn[name], event.capture);
                    }
                }
            }

            /*  */

            function mergeVNodeHook(def, hookKey, hook) {
                if (def instanceof VNode) {
                    def = def.data.hook || (def.data.hook = {});
                }
                var invoker;
                var oldHook = def[hookKey];

                function wrappedHook() {
                    hook.apply(this, arguments);
                    // important: remove merged hook to ensure it's called only once
                    // and prevent memory leak
                    remove(invoker.fns, wrappedHook);
                }

                if (isUndef(oldHook)) {
                    // no existing hook
                    invoker = createFnInvoker([wrappedHook]);
                } else {
                    /* istanbul ignore if */
                    if (isDef(oldHook.fns) && isTrue(oldHook.merged)) {
                        // already a merged invoker
                        invoker = oldHook;
                        invoker.fns.push(wrappedHook);
                    } else {
                        // existing plain hook
                        invoker = createFnInvoker([oldHook, wrappedHook]);
                    }
                }

                invoker.merged = true;
                def[hookKey] = invoker;
            }

            /*  */

            function extractPropsFromVNodeData(
                data,
                Ctor,
                tag
            ) {
                // we are only extracting raw values here.
                // validation and default values are handled in the child
                // component itself.
                var propOptions = Ctor.options.props;
                if (isUndef(propOptions)) {
                    return
                }
                var res = {};
                var attrs = data.attrs;
                var props = data.props;
                if (isDef(attrs) || isDef(props)) {
                    for (var key in propOptions) {
                        var altKey = hyphenate(key);
                        if (process.env.NODE_ENV !== 'production') {
                            var keyInLowerCase = key.toLowerCase();
                            if (
                                key !== keyInLowerCase &&
                                attrs && hasOwn(attrs, keyInLowerCase)
                            ) {
                                tip(
                                    "Prop \"" + keyInLowerCase + "\" is passed to component " +
                                    (formatComponentName(tag || Ctor)) + ", but the declared prop name is" +
                                    " \"" + key + "\". " +
                                    "Note that HTML attributes are case-insensitive and camelCased " +
                                    "props need to use their kebab-case equivalents when using in-DOM " +
                                    "templates. You should probably use \"" + altKey + "\" instead of \"" + key + "\"."
                                );
                            }
                        }
                        checkProp(res, props, key, altKey, true) ||
                        checkProp(res, attrs, key, altKey, false);
                    }
                }
                return res
            }

            function checkProp(
                res,
                hash,
                key,
                altKey,
                preserve
            ) {
                if (isDef(hash)) {
                    if (hasOwn(hash, key)) {
                        res[key] = hash[key];
                        if (!preserve) {
                            delete hash[key];
                        }
                        return true
                    } else if (hasOwn(hash, altKey)) {
                        res[key] = hash[altKey];
                        if (!preserve) {
                            delete hash[altKey];
                        }
                        return true
                    }
                }
                return false
            }

            /*  */

// The template compiler attempts to minimize the need for normalization by
// statically analyzing the template at compile time.
//
// For plain HTML markup, normalization can be completely skipped because the
// generated render function is guaranteed to return Array<VNode>. There are
// two cases where extra normalization is needed:

// 1. When the children contains components - because a functional component
// may return an Array instead of a single root. In this case, just a simple
// normalization is needed - if any child is an Array, we flatten the whole
// thing with Array.prototype.concat. It is guaranteed to be only 1-level deep
// because functional components already normalize their own children.
            function simpleNormalizeChildren(children) {
                for (var i = 0; i < children.length; i++) {
                    if (Array.isArray(children[i])) {
                        return Array.prototype.concat.apply([], children)
                    }
                }
                return children
            }

// 2. When the children contains constructs that always generated nested Arrays,
// e.g. <template>, <slot>, v-for, or when the children is provided by user
// with hand-written render functions / JSX. In such cases a full normalization
// is needed to cater to all possible types of children values.
            function normalizeChildren(children) {
                return isPrimitive(children)
                    ? [createTextVNode(children)]
                    : Array.isArray(children)
                        ? normalizeArrayChildren(children)
                        : undefined
            }

            function isTextNode(node) {
                return isDef(node) && isDef(node.text) && isFalse(node.isComment)
            }

            function normalizeArrayChildren(children, nestedIndex) {
                var res = [];
                var i, c, lastIndex, last;
                for (i = 0; i < children.length; i++) {
                    c = children[i];
                    if (isUndef(c) || typeof c === 'boolean') {
                        continue
                    }
                    lastIndex = res.length - 1;
                    last = res[lastIndex];
                    //  nested
                    if (Array.isArray(c)) {
                        if (c.length > 0) {
                            c = normalizeArrayChildren(c, ((nestedIndex || '') + "_" + i));
                            // merge adjacent text nodes
                            if (isTextNode(c[0]) && isTextNode(last)) {
                                res[lastIndex] = createTextVNode(last.text + (c[0]).text);
                                c.shift();
                            }
                            res.push.apply(res, c);
                        }
                    } else if (isPrimitive(c)) {
                        if (isTextNode(last)) {
                            // merge adjacent text nodes
                            // this is necessary for SSR hydration because text nodes are
                            // essentially merged when rendered to HTML strings
                            res[lastIndex] = createTextVNode(last.text + c);
                        } else if (c !== '') {
                            // convert primitive to vnode
                            res.push(createTextVNode(c));
                        }
                    } else {
                        if (isTextNode(c) && isTextNode(last)) {
                            // merge adjacent text nodes
                            res[lastIndex] = createTextVNode(last.text + c.text);
                        } else {
                            // default key for nested array children (likely generated by v-for)
                            if (isTrue(children._isVList) &&
                                isDef(c.tag) &&
                                isUndef(c.key) &&
                                isDef(nestedIndex)) {
                                c.key = "__vlist" + nestedIndex + "_" + i + "__";
                            }
                            res.push(c);
                        }
                    }
                }
                return res
            }

            /*  */

            function ensureCtor(comp, base) {
                if (
                    comp.__esModule ||
                    (hasSymbol && comp[Symbol.toStringTag] === 'Module')
                ) {
                    comp = comp.default;
                }
                return isObject(comp)
                    ? base.extend(comp)
                    : comp
            }

            function createAsyncPlaceholder(
                factory,
                data,
                context,
                children,
                tag
            ) {
                var node = createEmptyVNode();
                node.asyncFactory = factory;
                node.asyncMeta = {data: data, context: context, children: children, tag: tag};
                return node
            }

            function resolveAsyncComponent(
                factory,
                baseCtor,
                context
            ) {
                if (isTrue(factory.error) && isDef(factory.errorComp)) {
                    return factory.errorComp
                }

                if (isDef(factory.resolved)) {
                    return factory.resolved
                }

                if (isTrue(factory.loading) && isDef(factory.loadingComp)) {
                    return factory.loadingComp
                }

                if (isDef(factory.contexts)) {
                    // already pending
                    factory.contexts.push(context);
                } else {
                    var contexts = factory.contexts = [context];
                    var sync = true;

                    var forceRender = function () {
                        for (var i = 0, l = contexts.length; i < l; i++) {
                            contexts[i].$forceUpdate();
                        }
                    };

                    var resolve = once(function (res) {
                        // cache resolved
                        factory.resolved = ensureCtor(res, baseCtor);
                        // invoke callbacks only if this is not a synchronous resolve
                        // (async resolves are shimmed as synchronous during SSR)
                        if (!sync) {
                            forceRender();
                        }
                    });

                    var reject = once(function (reason) {
                        process.env.NODE_ENV !== 'production' && warn(
                            "Failed to resolve async component: " + (String(factory)) +
                            (reason ? ("\nReason: " + reason) : '')
                        );
                        if (isDef(factory.errorComp)) {
                            factory.error = true;
                            forceRender();
                        }
                    });

                    var res = factory(resolve, reject);

                    if (isObject(res)) {
                        if (typeof res.then === 'function') {
                            // () => Promise
                            if (isUndef(factory.resolved)) {
                                res.then(resolve, reject);
                            }
                        } else if (isDef(res.component) && typeof res.component.then === 'function') {
                            res.component.then(resolve, reject);

                            if (isDef(res.error)) {
                                factory.errorComp = ensureCtor(res.error, baseCtor);
                            }

                            if (isDef(res.loading)) {
                                factory.loadingComp = ensureCtor(res.loading, baseCtor);
                                if (res.delay === 0) {
                                    factory.loading = true;
                                } else {
                                    setTimeout(function () {
                                        if (isUndef(factory.resolved) && isUndef(factory.error)) {
                                            factory.loading = true;
                                            forceRender();
                                        }
                                    }, res.delay || 200);
                                }
                            }

                            if (isDef(res.timeout)) {
                                setTimeout(function () {
                                    if (isUndef(factory.resolved)) {
                                        reject(
                                            process.env.NODE_ENV !== 'production'
                                                ? ("timeout (" + (res.timeout) + "ms)")
                                                : null
                                        );
                                    }
                                }, res.timeout);
                            }
                        }
                    }

                    sync = false;
                    // return in case resolved synchronously
                    return factory.loading
                        ? factory.loadingComp
                        : factory.resolved
                }
            }

            /*  */

            function isAsyncPlaceholder(node) {
                return node.isComment && node.asyncFactory
            }

            /*  */

            function getFirstComponentChild(children) {
                if (Array.isArray(children)) {
                    for (var i = 0; i < children.length; i++) {
                        var c = children[i];
                        if (isDef(c) && (isDef(c.componentOptions) || isAsyncPlaceholder(c))) {
                            return c
                        }
                    }
                }
            }

            /*  */

            /*  */

            function initEvents(vm) {
                vm._events = Object.create(null);
                vm._hasHookEvent = false;
                // init parent attached events
                var listeners = vm.$options._parentListeners;
                if (listeners) {
                    updateComponentListeners(vm, listeners);
                }
            }

            var target;

            function add(event, fn, once) {
                if (once) {
                    target.$once(event, fn);
                } else {
                    target.$on(event, fn);
                }
            }

            function remove$1(event, fn) {
                target.$off(event, fn);
            }

            function updateComponentListeners(
                vm,
                listeners,
                oldListeners
            ) {
                target = vm;
                updateListeners(listeners, oldListeners || {}, add, remove$1, vm);
                target = undefined;
            }

            function eventsMixin(Vue) {
                var hookRE = /^hook:/;
                Vue.prototype.$on = function (event, fn) {
                    var this$1 = this;

                    var vm = this;
                    if (Array.isArray(event)) {
                        for (var i = 0, l = event.length; i < l; i++) {
                            this$1.$on(event[i], fn);
                        }
                    } else {
                        (vm._events[event] || (vm._events[event] = [])).push(fn);
                        // optimize hook:event cost by using a boolean flag marked at registration
                        // instead of a hash lookup
                        if (hookRE.test(event)) {
                            vm._hasHookEvent = true;
                        }
                    }
                    return vm
                };

                Vue.prototype.$once = function (event, fn) {
                    var vm = this;

                    function on() {
                        vm.$off(event, on);
                        fn.apply(vm, arguments);
                    }

                    on.fn = fn;
                    vm.$on(event, on);
                    return vm
                };

                Vue.prototype.$off = function (event, fn) {
                    var this$1 = this;

                    var vm = this;
                    // all
                    if (!arguments.length) {
                        vm._events = Object.create(null);
                        return vm
                    }
                    // array of events
                    if (Array.isArray(event)) {
                        for (var i = 0, l = event.length; i < l; i++) {
                            this$1.$off(event[i], fn);
                        }
                        return vm
                    }
                    // specific event
                    var cbs = vm._events[event];
                    if (!cbs) {
                        return vm
                    }
                    if (!fn) {
                        vm._events[event] = null;
                        return vm
                    }
                    if (fn) {
                        // specific handler
                        var cb;
                        var i$1 = cbs.length;
                        while (i$1--) {
                            cb = cbs[i$1];
                            if (cb === fn || cb.fn === fn) {
                                cbs.splice(i$1, 1);
                                break
                            }
                        }
                    }
                    return vm
                };

                Vue.prototype.$emit = function (event) {
                    var vm = this;
                    if (process.env.NODE_ENV !== 'production') {
                        var lowerCaseEvent = event.toLowerCase();
                        if (lowerCaseEvent !== event && vm._events[lowerCaseEvent]) {
                            tip(
                                "Event \"" + lowerCaseEvent + "\" is emitted in component " +
                                (formatComponentName(vm)) + " but the handler is registered for \"" + event + "\". " +
                                "Note that HTML attributes are case-insensitive and you cannot use " +
                                "v-on to listen to camelCase events when using in-DOM templates. " +
                                "You should probably use \"" + (hyphenate(event)) + "\" instead of \"" + event + "\"."
                            );
                        }
                    }
                    var cbs = vm._events[event];
                    if (cbs) {
                        cbs = cbs.length > 1 ? toArray(cbs) : cbs;
                        var args = toArray(arguments, 1);
                        for (var i = 0, l = cbs.length; i < l; i++) {
                            try {
                                cbs[i].apply(vm, args);
                            } catch (e) {
                                handleError(e, vm, ("event handler for \"" + event + "\""));
                            }
                        }
                    }
                    return vm
                };
            }

            /*  */


            /**
             * Runtime helper for resolving raw children VNodes into a slot object.
             */
            function resolveSlots(
                children,
                context
            ) {
                var slots = {};
                if (!children) {
                    return slots
                }
                for (var i = 0, l = children.length; i < l; i++) {
                    var child = children[i];
                    var data = child.data;
                    // remove slot attribute if the node is resolved as a Vue slot node
                    if (data && data.attrs && data.attrs.slot) {
                        delete data.attrs.slot;
                    }
                    // named slots should only be respected if the vnode was rendered in the
                    // same context.
                    if ((child.context === context || child.fnContext === context) &&
                        data && data.slot != null
                    ) {
                        var name = data.slot;
                        var slot = (slots[name] || (slots[name] = []));
                        if (child.tag === 'template') {
                            slot.push.apply(slot, child.children || []);
                        } else {
                            slot.push(child);
                        }
                    } else {
                        (slots.default || (slots.default = [])).push(child);
                    }
                }
                // ignore slots that contains only whitespace
                for (var name$1 in slots) {
                    if (slots[name$1].every(isWhitespace)) {
                        delete slots[name$1];
                    }
                }
                return slots
            }

            function isWhitespace(node) {
                return (node.isComment && !node.asyncFactory) || node.text === ' '
            }

            function resolveScopedSlots(
                fns, // see flow/vnode
                res
            ) {
                res = res || {};
                for (var i = 0; i < fns.length; i++) {
                    if (Array.isArray(fns[i])) {
                        resolveScopedSlots(fns[i], res);
                    } else {
                        res[fns[i].key] = fns[i].fn;
                    }
                }
                return res
            }

            /*  */

            var activeInstance = null;
            var isUpdatingChildComponent = false;

            function initLifecycle(vm) {
                var options = vm.$options;

                // locate first non-abstract parent
                var parent = options.parent;
                if (parent && !options.abstract) {
                    while (parent.$options.abstract && parent.$parent) {
                        parent = parent.$parent;
                    }
                    parent.$children.push(vm);
                }

                vm.$parent = parent;
                vm.$root = parent ? parent.$root : vm;

                vm.$children = [];
                vm.$refs = {};

                vm._watcher = null;
                vm._inactive = null;
                vm._directInactive = false;
                vm._isMounted = false;
                vm._isDestroyed = false;
                vm._isBeingDestroyed = false;
            }

            function lifecycleMixin(Vue) {
                Vue.prototype._update = function (vnode, hydrating) {
                    var vm = this;
                    if (vm._isMounted) {
                        callHook(vm, 'beforeUpdate');
                    }
                    var prevEl = vm.$el;
                    var prevVnode = vm._vnode;
                    var prevActiveInstance = activeInstance;
                    activeInstance = vm;
                    vm._vnode = vnode;
                    // Vue.prototype.__patch__ is injected in entry points
                    // based on the rendering backend used.
                    if (!prevVnode) {
                        // initial render
                        vm.$el = vm.__patch__(
                            vm.$el, vnode, hydrating, false /* removeOnly */,
                            vm.$options._parentElm,
                            vm.$options._refElm
                        );
                        // no need for the ref nodes after initial patch
                        // this prevents keeping a detached DOM tree in memory (#5851)
                        vm.$options._parentElm = vm.$options._refElm = null;
                    } else {
                        // updates
                        vm.$el = vm.__patch__(prevVnode, vnode);
                    }
                    activeInstance = prevActiveInstance;
                    // update __vue__ reference
                    if (prevEl) {
                        prevEl.__vue__ = null;
                    }
                    if (vm.$el) {
                        vm.$el.__vue__ = vm;
                    }
                    // if parent is an HOC, update its $el as well
                    if (vm.$vnode && vm.$parent && vm.$vnode === vm.$parent._vnode) {
                        vm.$parent.$el = vm.$el;
                    }
                    // updated hook is called by the scheduler to ensure that children are
                    // updated in a parent's updated hook.
                };

                Vue.prototype.$forceUpdate = function () {
                    var vm = this;
                    if (vm._watcher) {
                        vm._watcher.update();
                    }
                };

                Vue.prototype.$destroy = function () {
                    var vm = this;
                    if (vm._isBeingDestroyed) {
                        return
                    }
                    callHook(vm, 'beforeDestroy');
                    vm._isBeingDestroyed = true;
                    // remove self from parent
                    var parent = vm.$parent;
                    if (parent && !parent._isBeingDestroyed && !vm.$options.abstract) {
                        remove(parent.$children, vm);
                    }
                    // teardown watchers
                    if (vm._watcher) {
                        vm._watcher.teardown();
                    }
                    var i = vm._watchers.length;
                    while (i--) {
                        vm._watchers[i].teardown();
                    }
                    // remove reference from data ob
                    // frozen object may not have observer.
                    if (vm._data.__ob__) {
                        vm._data.__ob__.vmCount--;
                    }
                    // call the last hook...
                    vm._isDestroyed = true;
                    // invoke destroy hooks on current rendered tree
                    vm.__patch__(vm._vnode, null);
                    // fire destroyed hook
                    callHook(vm, 'destroyed');
                    // turn off all instance listeners.
                    vm.$off();
                    // remove __vue__ reference
                    if (vm.$el) {
                        vm.$el.__vue__ = null;
                    }
                    // release circular reference (#6759)
                    if (vm.$vnode) {
                        vm.$vnode.parent = null;
                    }
                };
            }

            function mountComponent(
                vm,
                el,
                hydrating
            ) {
                vm.$el = el;
                if (!vm.$options.render) {
                    vm.$options.render = createEmptyVNode;
                    if (process.env.NODE_ENV !== 'production') {
                        /* istanbul ignore if */
                        if ((vm.$options.template && vm.$options.template.charAt(0) !== '#') ||
                            vm.$options.el || el) {
                            warn(
                                'You are using the runtime-only build of Vue where the template ' +
                                'compiler is not available. Either pre-compile the templates into ' +
                                'render functions, or use the compiler-included build.',
                                vm
                            );
                        } else {
                            warn(
                                'Failed to mount component: template or render function not defined.',
                                vm
                            );
                        }
                    }
                }
                callHook(vm, 'beforeMount');

                var updateComponent;
                /* istanbul ignore if */
                if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
                    updateComponent = function () {
                        var name = vm._name;
                        var id = vm._uid;
                        var startTag = "vue-perf-start:" + id;
                        var endTag = "vue-perf-end:" + id;

                        mark(startTag);
                        var vnode = vm._render();
                        mark(endTag);
                        measure(("vue " + name + " render"), startTag, endTag);

                        mark(startTag);
                        vm._update(vnode, hydrating);
                        mark(endTag);
                        measure(("vue " + name + " patch"), startTag, endTag);
                    };
                } else {
                    updateComponent = function () {
                        vm._update(vm._render(), hydrating);
                    };
                }

                // we set this to vm._watcher inside the watcher's constructor
                // since the watcher's initial patch may call $forceUpdate (e.g. inside child
                // component's mounted hook), which relies on vm._watcher being already defined
                new Watcher(vm, updateComponent, noop, null, true /* isRenderWatcher */);
                hydrating = false;

                // manually mounted instance, call mounted on self
                // mounted is called for render-created child components in its inserted hook
                if (vm.$vnode == null) {
                    vm._isMounted = true;
                    callHook(vm, 'mounted');
                }
                return vm
            }

            function updateChildComponent(
                vm,
                propsData,
                listeners,
                parentVnode,
                renderChildren
            ) {
                if (process.env.NODE_ENV !== 'production') {
                    isUpdatingChildComponent = true;
                }

                // determine whether component has slot children
                // we need to do this before overwriting $options._renderChildren
                var hasChildren = !!(
                    renderChildren ||               // has new static slots
                    vm.$options._renderChildren ||  // has old static slots
                    parentVnode.data.scopedSlots || // has new scoped slots
                    vm.$scopedSlots !== emptyObject // has old scoped slots
                );

                vm.$options._parentVnode = parentVnode;
                vm.$vnode = parentVnode; // update vm's placeholder node without re-render

                if (vm._vnode) { // update child tree's parent
                    vm._vnode.parent = parentVnode;
                }
                vm.$options._renderChildren = renderChildren;

                // update $attrs and $listeners hash
                // these are also reactive so they may trigger child update if the child
                // used them during render
                vm.$attrs = parentVnode.data.attrs || emptyObject;
                vm.$listeners = listeners || emptyObject;

                // update props
                if (propsData && vm.$options.props) {
                    toggleObserving(false);
                    var props = vm._props;
                    var propKeys = vm.$options._propKeys || [];
                    for (var i = 0; i < propKeys.length; i++) {
                        var key = propKeys[i];
                        var propOptions = vm.$options.props; // wtf flow?
                        props[key] = validateProp(key, propOptions, propsData, vm);
                    }
                    toggleObserving(true);
                    // keep a copy of raw propsData
                    vm.$options.propsData = propsData;
                }

                // update listeners
                listeners = listeners || emptyObject;
                var oldListeners = vm.$options._parentListeners;
                vm.$options._parentListeners = listeners;
                updateComponentListeners(vm, listeners, oldListeners);

                // resolve slots + force update if has children
                if (hasChildren) {
                    vm.$slots = resolveSlots(renderChildren, parentVnode.context);
                    vm.$forceUpdate();
                }

                if (process.env.NODE_ENV !== 'production') {
                    isUpdatingChildComponent = false;
                }
            }

            function isInInactiveTree(vm) {
                while (vm && (vm = vm.$parent)) {
                    if (vm._inactive) {
                        return true
                    }
                }
                return false
            }

            function activateChildComponent(vm, direct) {
                if (direct) {
                    vm._directInactive = false;
                    if (isInInactiveTree(vm)) {
                        return
                    }
                } else if (vm._directInactive) {
                    return
                }
                if (vm._inactive || vm._inactive === null) {
                    vm._inactive = false;
                    for (var i = 0; i < vm.$children.length; i++) {
                        activateChildComponent(vm.$children[i]);
                    }
                    callHook(vm, 'activated');
                }
            }

            function deactivateChildComponent(vm, direct) {
                if (direct) {
                    vm._directInactive = true;
                    if (isInInactiveTree(vm)) {
                        return
                    }
                }
                if (!vm._inactive) {
                    vm._inactive = true;
                    for (var i = 0; i < vm.$children.length; i++) {
                        deactivateChildComponent(vm.$children[i]);
                    }
                    callHook(vm, 'deactivated');
                }
            }

            function callHook(vm, hook) {
                // #7573 disable dep collection when invoking lifecycle hooks
                pushTarget();
                var handlers = vm.$options[hook];
                if (handlers) {
                    for (var i = 0, j = handlers.length; i < j; i++) {
                        try {
                            handlers[i].call(vm);
                        } catch (e) {
                            handleError(e, vm, (hook + " hook"));
                        }
                    }
                }
                if (vm._hasHookEvent) {
                    vm.$emit('hook:' + hook);
                }
                popTarget();
            }

            /*  */


            var MAX_UPDATE_COUNT = 100;

            var queue = [];
            var activatedChildren = [];
            var has = {};
            var circular = {};
            var waiting = false;
            var flushing = false;
            var index = 0;

            /**
             * Reset the scheduler's state.
             */
            function resetSchedulerState() {
                index = queue.length = activatedChildren.length = 0;
                has = {};
                if (process.env.NODE_ENV !== 'production') {
                    circular = {};
                }
                waiting = flushing = false;
            }

            /**
             * Flush both queues and run the watchers.
             */
            function flushSchedulerQueue() {
                flushing = true;
                var watcher, id;

                // Sort queue before flush.
                // This ensures that:
                // 1. Components are updated from parent to child. (because parent is always
                //    created before the child)
                // 2. A component's user watchers are run before its render watcher (because
                //    user watchers are created before the render watcher)
                // 3. If a component is destroyed during a parent component's watcher run,
                //    its watchers can be skipped.
                queue.sort(function (a, b) {
                    return a.id - b.id;
                });

                // do not cache length because more watchers might be pushed
                // as we run existing watchers
                for (index = 0; index < queue.length; index++) {
                    watcher = queue[index];
                    id = watcher.id;
                    has[id] = null;
                    watcher.run();
                    // in dev build, check and stop circular updates.
                    if (process.env.NODE_ENV !== 'production' && has[id] != null) {
                        circular[id] = (circular[id] || 0) + 1;
                        if (circular[id] > MAX_UPDATE_COUNT) {
                            warn(
                                'You may have an infinite update loop ' + (
                                    watcher.user
                                        ? ("in watcher with expression \"" + (watcher.expression) + "\"")
                                        : "in a component render function."
                                ),
                                watcher.vm
                            );
                            break
                        }
                    }
                }

                // keep copies of post queues before resetting state
                var activatedQueue = activatedChildren.slice();
                var updatedQueue = queue.slice();

                resetSchedulerState();

                // call component updated and activated hooks
                callActivatedHooks(activatedQueue);
                callUpdatedHooks(updatedQueue);

                // devtool hook
                /* istanbul ignore if */
                if (devtools && config.devtools) {
                    devtools.emit('flush');
                }
            }

            function callUpdatedHooks(queue) {
                var i = queue.length;
                while (i--) {
                    var watcher = queue[i];
                    var vm = watcher.vm;
                    if (vm._watcher === watcher && vm._isMounted) {
                        callHook(vm, 'updated');
                    }
                }
            }

            /**
             * Queue a kept-alive component that was activated during patch.
             * The queue will be processed after the entire tree has been patched.
             */
            function queueActivatedComponent(vm) {
                // setting _inactive to false here so that a render function can
                // rely on checking whether it's in an inactive tree (e.g. router-view)
                vm._inactive = false;
                activatedChildren.push(vm);
            }

            function callActivatedHooks(queue) {
                for (var i = 0; i < queue.length; i++) {
                    queue[i]._inactive = true;
                    activateChildComponent(queue[i], true /* true */);
                }
            }

            /**
             * Push a watcher into the watcher queue.
             * Jobs with duplicate IDs will be skipped unless it's
             * pushed when the queue is being flushed.
             */
            function queueWatcher(watcher) {
                var id = watcher.id;
                if (has[id] == null) {
                    has[id] = true;
                    if (!flushing) {
                        queue.push(watcher);
                    } else {
                        // if already flushing, splice the watcher based on its id
                        // if already past its id, it will be run next immediately.
                        var i = queue.length - 1;
                        while (i > index && queue[i].id > watcher.id) {
                            i--;
                        }
                        queue.splice(i + 1, 0, watcher);
                    }
                    // queue the flush
                    if (!waiting) {
                        waiting = true;
                        nextTick(flushSchedulerQueue);
                    }
                }
            }

            /*  */

            var uid$1 = 0;

            /**
             * A watcher parses an expression, collects dependencies,
             * and fires callback when the expression value changes.
             * This is used for both the $watch() api and directives.
             */
            var Watcher = function Watcher(
                vm,
                expOrFn,
                cb,
                options,
                isRenderWatcher
            ) {
                this.vm = vm;
                if (isRenderWatcher) {
                    vm._watcher = this;
                }
                vm._watchers.push(this);
                // options
                if (options) {
                    this.deep = !!options.deep;
                    this.user = !!options.user;
                    this.lazy = !!options.lazy;
                    this.sync = !!options.sync;
                } else {
                    this.deep = this.user = this.lazy = this.sync = false;
                }
                this.cb = cb;
                this.id = ++uid$1; // uid for batching
                this.active = true;
                this.dirty = this.lazy; // for lazy watchers
                this.deps = [];
                this.newDeps = [];
                this.depIds = new _Set();
                this.newDepIds = new _Set();
                this.expression = process.env.NODE_ENV !== 'production'
                    ? expOrFn.toString()
                    : '';
                // parse expression for getter
                if (typeof expOrFn === 'function') {
                    this.getter = expOrFn;
                } else {
                    this.getter = parsePath(expOrFn);
                    if (!this.getter) {
                        this.getter = function () {
                        };
                        process.env.NODE_ENV !== 'production' && warn(
                            "Failed watching path: \"" + expOrFn + "\" " +
                            'Watcher only accepts simple dot-delimited paths. ' +
                            'For full control, use a function instead.',
                            vm
                        );
                    }
                }
                this.value = this.lazy
                    ? undefined
                    : this.get();
            };

            /**
             * Evaluate the getter, and re-collect dependencies.
             */
            Watcher.prototype.get = function get() {
                pushTarget(this);
                var value;
                var vm = this.vm;
                try {
                    value = this.getter.call(vm, vm);
                } catch (e) {
                    if (this.user) {
                        handleError(e, vm, ("getter for watcher \"" + (this.expression) + "\""));
                    } else {
                        throw e
                    }
                } finally {
                    // "touch" every property so they are all tracked as
                    // dependencies for deep watching
                    if (this.deep) {
                        traverse(value);
                    }
                    popTarget();
                    this.cleanupDeps();
                }
                return value
            };

            /**
             * Add a dependency to this directive.
             */
            Watcher.prototype.addDep = function addDep(dep) {
                var id = dep.id;
                if (!this.newDepIds.has(id)) {
                    this.newDepIds.add(id);
                    this.newDeps.push(dep);
                    if (!this.depIds.has(id)) {
                        dep.addSub(this);
                    }
                }
            };

            /**
             * Clean up for dependency collection.
             */
            Watcher.prototype.cleanupDeps = function cleanupDeps() {
                var this$1 = this;

                var i = this.deps.length;
                while (i--) {
                    var dep = this$1.deps[i];
                    if (!this$1.newDepIds.has(dep.id)) {
                        dep.removeSub(this$1);
                    }
                }
                var tmp = this.depIds;
                this.depIds = this.newDepIds;
                this.newDepIds = tmp;
                this.newDepIds.clear();
                tmp = this.deps;
                this.deps = this.newDeps;
                this.newDeps = tmp;
                this.newDeps.length = 0;
            };

            /**
             * Subscriber interface.
             * Will be called when a dependency changes.
             */
            Watcher.prototype.update = function update() {
                /* istanbul ignore else */
                if (this.lazy) {
                    this.dirty = true;
                } else if (this.sync) {
                    this.run();
                } else {
                    queueWatcher(this);
                }
            };

            /**
             * Scheduler job interface.
             * Will be called by the scheduler.
             */
            Watcher.prototype.run = function run() {
                if (this.active) {
                    var value = this.get();
                    if (
                        value !== this.value ||
                        // Deep watchers and watchers on Object/Arrays should fire even
                        // when the value is the same, because the value may
                        // have mutated.
                        isObject(value) ||
                        this.deep
                    ) {
                        // set new value
                        var oldValue = this.value;
                        this.value = value;
                        if (this.user) {
                            try {
                                this.cb.call(this.vm, value, oldValue);
                            } catch (e) {
                                handleError(e, this.vm, ("callback for watcher \"" + (this.expression) + "\""));
                            }
                        } else {
                            this.cb.call(this.vm, value, oldValue);
                        }
                    }
                }
            };

            /**
             * Evaluate the value of the watcher.
             * This only gets called for lazy watchers.
             */
            Watcher.prototype.evaluate = function evaluate() {
                this.value = this.get();
                this.dirty = false;
            };

            /**
             * Depend on all deps collected by this watcher.
             */
            Watcher.prototype.depend = function depend() {
                var this$1 = this;

                var i = this.deps.length;
                while (i--) {
                    this$1.deps[i].depend();
                }
            };

            /**
             * Remove self from all dependencies' subscriber list.
             */
            Watcher.prototype.teardown = function teardown() {
                var this$1 = this;

                if (this.active) {
                    // remove self from vm's watcher list
                    // this is a somewhat expensive operation so we skip it
                    // if the vm is being destroyed.
                    if (!this.vm._isBeingDestroyed) {
                        remove(this.vm._watchers, this);
                    }
                    var i = this.deps.length;
                    while (i--) {
                        this$1.deps[i].removeSub(this$1);
                    }
                    this.active = false;
                }
            };

            /*  */

            var sharedPropertyDefinition = {
                enumerable: true,
                configurable: true,
                get: noop,
                set: noop
            };

            function proxy(target, sourceKey, key) {
                sharedPropertyDefinition.get = function proxyGetter() {
                    return this[sourceKey][key]
                };
                sharedPropertyDefinition.set = function proxySetter(val) {
                    this[sourceKey][key] = val;
                };
                Object.defineProperty(target, key, sharedPropertyDefinition);
            }

            function initState(vm) {
                vm._watchers = [];
                var opts = vm.$options;
                if (opts.props) {
                    initProps(vm, opts.props);
                }
                if (opts.methods) {
                    initMethods(vm, opts.methods);
                }
                if (opts.data) {
                    initData(vm);
                } else {
                    observe(vm._data = {}, true /* asRootData */);
                }
                if (opts.computed) {
                    initComputed(vm, opts.computed);
                }
                if (opts.watch && opts.watch !== nativeWatch) {
                    initWatch(vm, opts.watch);
                }
            }

            function initProps(vm, propsOptions) {
                var propsData = vm.$options.propsData || {};
                var props = vm._props = {};
                // cache prop keys so that future props updates can iterate using Array
                // instead of dynamic object key enumeration.
                var keys = vm.$options._propKeys = [];
                var isRoot = !vm.$parent;
                // root instance props should be converted
                if (!isRoot) {
                    toggleObserving(false);
                }
                var loop = function (key) {
                    keys.push(key);
                    var value = validateProp(key, propsOptions, propsData, vm);
                    /* istanbul ignore else */
                    if (process.env.NODE_ENV !== 'production') {
                        var hyphenatedKey = hyphenate(key);
                        if (isReservedAttribute(hyphenatedKey) ||
                            config.isReservedAttr(hyphenatedKey)) {
                            warn(
                                ("\"" + hyphenatedKey + "\" is a reserved attribute and cannot be used as component prop."),
                                vm
                            );
                        }
                        defineReactive(props, key, value, function () {
                            if (vm.$parent && !isUpdatingChildComponent) {
                                warn(
                                    "Avoid mutating a prop directly since the value will be " +
                                    "overwritten whenever the parent component re-renders. " +
                                    "Instead, use a data or computed property based on the prop's " +
                                    "value. Prop being mutated: \"" + key + "\"",
                                    vm
                                );
                            }
                        });
                    } else {
                        defineReactive(props, key, value);
                    }
                    // static props are already proxied on the component's prototype
                    // during Vue.extend(). We only need to proxy props defined at
                    // instantiation here.
                    if (!(key in vm)) {
                        proxy(vm, "_props", key);
                    }
                };

                for (var key in propsOptions) loop(key);
                toggleObserving(true);
            }

            function initData(vm) {
                var data = vm.$options.data;
                data = vm._data = typeof data === 'function'
                    ? getData(data, vm)
                    : data || {};
                if (!isPlainObject(data)) {
                    data = {};
                    process.env.NODE_ENV !== 'production' && warn(
                        'data functions should return an object:\n' +
                        'https://vuejs.org/v2/guide/components.html#data-Must-Be-a-Function',
                        vm
                    );
                }
                // proxy data on instance
                var keys = Object.keys(data);
                var props = vm.$options.props;
                var methods = vm.$options.methods;
                var i = keys.length;
                while (i--) {
                    var key = keys[i];
                    if (process.env.NODE_ENV !== 'production') {
                        if (methods && hasOwn(methods, key)) {
                            warn(
                                ("Method \"" + key + "\" has already been defined as a data property."),
                                vm
                            );
                        }
                    }
                    if (props && hasOwn(props, key)) {
                        process.env.NODE_ENV !== 'production' && warn(
                            "The data property \"" + key + "\" is already declared as a prop. " +
                            "Use prop default value instead.",
                            vm
                        );
                    } else if (!isReserved(key)) {
                        proxy(vm, "_data", key);
                    }
                }
                // observe data
                observe(data, true /* asRootData */);
            }

            function getData(data, vm) {
                // #7573 disable dep collection when invoking data getters
                pushTarget();
                try {
                    return data.call(vm, vm)
                } catch (e) {
                    handleError(e, vm, "data()");
                    return {}
                } finally {
                    popTarget();
                }
            }

            var computedWatcherOptions = {lazy: true};

            function initComputed(vm, computed) {
                // $flow-disable-line
                var watchers = vm._computedWatchers = Object.create(null);
                // computed properties are just getters during SSR
                var isSSR = isServerRendering();

                for (var key in computed) {
                    var userDef = computed[key];
                    var getter = typeof userDef === 'function' ? userDef : userDef.get;
                    if (process.env.NODE_ENV !== 'production' && getter == null) {
                        warn(
                            ("Getter is missing for computed property \"" + key + "\"."),
                            vm
                        );
                    }

                    if (!isSSR) {
                        // create internal watcher for the computed property.
                        watchers[key] = new Watcher(
                            vm,
                            getter || noop,
                            noop,
                            computedWatcherOptions
                        );
                    }

                    // component-defined computed properties are already defined on the
                    // component prototype. We only need to define computed properties defined
                    // at instantiation here.
                    if (!(key in vm)) {
                        defineComputed(vm, key, userDef);
                    } else if (process.env.NODE_ENV !== 'production') {
                        if (key in vm.$data) {
                            warn(("The computed property \"" + key + "\" is already defined in data."), vm);
                        } else if (vm.$options.props && key in vm.$options.props) {
                            warn(("The computed property \"" + key + "\" is already defined as a prop."), vm);
                        }
                    }
                }
            }

            function defineComputed(
                target,
                key,
                userDef
            ) {
                var shouldCache = !isServerRendering();
                if (typeof userDef === 'function') {
                    sharedPropertyDefinition.get = shouldCache
                        ? createComputedGetter(key)
                        : userDef;
                    sharedPropertyDefinition.set = noop;
                } else {
                    sharedPropertyDefinition.get = userDef.get
                        ? shouldCache && userDef.cache !== false
                            ? createComputedGetter(key)
                            : userDef.get
                        : noop;
                    sharedPropertyDefinition.set = userDef.set
                        ? userDef.set
                        : noop;
                }
                if (process.env.NODE_ENV !== 'production' &&
                    sharedPropertyDefinition.set === noop) {
                    sharedPropertyDefinition.set = function () {
                        warn(
                            ("Computed property \"" + key + "\" was assigned to but it has no setter."),
                            this
                        );
                    };
                }
                Object.defineProperty(target, key, sharedPropertyDefinition);
            }

            function createComputedGetter(key) {
                return function computedGetter() {
                    var watcher = this._computedWatchers && this._computedWatchers[key];
                    if (watcher) {
                        if (watcher.dirty) {
                            watcher.evaluate();
                        }
                        if (Dep.target) {
                            watcher.depend();
                        }
                        return watcher.value
                    }
                }
            }

            function initMethods(vm, methods) {
                var props = vm.$options.props;
                for (var key in methods) {
                    if (process.env.NODE_ENV !== 'production') {
                        if (methods[key] == null) {
                            warn(
                                "Method \"" + key + "\" has an undefined value in the component definition. " +
                                "Did you reference the function correctly?",
                                vm
                            );
                        }
                        if (props && hasOwn(props, key)) {
                            warn(
                                ("Method \"" + key + "\" has already been defined as a prop."),
                                vm
                            );
                        }
                        if ((key in vm) && isReserved(key)) {
                            warn(
                                "Method \"" + key + "\" conflicts with an existing Vue instance method. " +
                                "Avoid defining component methods that start with _ or $."
                            );
                        }
                    }
                    vm[key] = methods[key] == null ? noop : bind(methods[key], vm);
                }
            }

            function initWatch(vm, watch) {
                for (var key in watch) {
                    var handler = watch[key];
                    if (Array.isArray(handler)) {
                        for (var i = 0; i < handler.length; i++) {
                            createWatcher(vm, key, handler[i]);
                        }
                    } else {
                        createWatcher(vm, key, handler);
                    }
                }
            }

            function createWatcher(
                vm,
                expOrFn,
                handler,
                options
            ) {
                if (isPlainObject(handler)) {
                    options = handler;
                    handler = handler.handler;
                }
                if (typeof handler === 'string') {
                    handler = vm[handler];
                }
                return vm.$watch(expOrFn, handler, options)
            }

            function stateMixin(Vue) {
                // flow somehow has problems with directly declared definition object
                // when using Object.defineProperty, so we have to procedurally build up
                // the object here.
                var dataDef = {};
                dataDef.get = function () {
                    return this._data
                };
                var propsDef = {};
                propsDef.get = function () {
                    return this._props
                };
                if (process.env.NODE_ENV !== 'production') {
                    dataDef.set = function (newData) {
                        warn(
                            'Avoid replacing instance root $data. ' +
                            'Use nested data properties instead.',
                            this
                        );
                    };
                    propsDef.set = function () {
                        warn("$props is readonly.", this);
                    };
                }
                Object.defineProperty(Vue.prototype, '$data', dataDef);
                Object.defineProperty(Vue.prototype, '$props', propsDef);

                Vue.prototype.$set = set;
                Vue.prototype.$delete = del;

                Vue.prototype.$watch = function (
                    expOrFn,
                    cb,
                    options
                ) {
                    var vm = this;
                    if (isPlainObject(cb)) {
                        return createWatcher(vm, expOrFn, cb, options)
                    }
                    options = options || {};
                    options.user = true;
                    var watcher = new Watcher(vm, expOrFn, cb, options);
                    if (options.immediate) {
                        cb.call(vm, watcher.value);
                    }
                    return function unwatchFn() {
                        watcher.teardown();
                    }
                };
            }

            /*  */

            function initProvide(vm) {
                var provide = vm.$options.provide;
                if (provide) {
                    vm._provided = typeof provide === 'function'
                        ? provide.call(vm)
                        : provide;
                }
            }

            function initInjections(vm) {
                var result = resolveInject(vm.$options.inject, vm);
                if (result) {
                    toggleObserving(false);
                    Object.keys(result).forEach(function (key) {
                        /* istanbul ignore else */
                        if (process.env.NODE_ENV !== 'production') {
                            defineReactive(vm, key, result[key], function () {
                                warn(
                                    "Avoid mutating an injected value directly since the changes will be " +
                                    "overwritten whenever the provided component re-renders. " +
                                    "injection being mutated: \"" + key + "\"",
                                    vm
                                );
                            });
                        } else {
                            defineReactive(vm, key, result[key]);
                        }
                    });
                    toggleObserving(true);
                }
            }

            function resolveInject(inject, vm) {
                if (inject) {
                    // inject is :any because flow is not smart enough to figure out cached
                    var result = Object.create(null);
                    var keys = hasSymbol
                        ? Reflect.ownKeys(inject).filter(function (key) {
                            /* istanbul ignore next */
                            return Object.getOwnPropertyDescriptor(inject, key).enumerable
                        })
                        : Object.keys(inject);

                    for (var i = 0; i < keys.length; i++) {
                        var key = keys[i];
                        var provideKey = inject[key].from;
                        var source = vm;
                        while (source) {
                            if (source._provided && hasOwn(source._provided, provideKey)) {
                                result[key] = source._provided[provideKey];
                                break
                            }
                            source = source.$parent;
                        }
                        if (!source) {
                            if ('default' in inject[key]) {
                                var provideDefault = inject[key].default;
                                result[key] = typeof provideDefault === 'function'
                                    ? provideDefault.call(vm)
                                    : provideDefault;
                            } else if (process.env.NODE_ENV !== 'production') {
                                warn(("Injection \"" + key + "\" not found"), vm);
                            }
                        }
                    }
                    return result
                }
            }

            /*  */

            /**
             * Runtime helper for rendering v-for lists.
             */
            function renderList(
                val,
                render
            ) {
                var ret, i, l, keys, key;
                if (Array.isArray(val) || typeof val === 'string') {
                    ret = new Array(val.length);
                    for (i = 0, l = val.length; i < l; i++) {
                        ret[i] = render(val[i], i);
                    }
                } else if (typeof val === 'number') {
                    ret = new Array(val);
                    for (i = 0; i < val; i++) {
                        ret[i] = render(i + 1, i);
                    }
                } else if (isObject(val)) {
                    keys = Object.keys(val);
                    ret = new Array(keys.length);
                    for (i = 0, l = keys.length; i < l; i++) {
                        key = keys[i];
                        ret[i] = render(val[key], key, i);
                    }
                }
                if (isDef(ret)) {
                    (ret)._isVList = true;
                }
                return ret
            }

            /*  */

            /**
             * Runtime helper for rendering <slot>
             */
            function renderSlot(
                name,
                fallback,
                props,
                bindObject
            ) {
                var scopedSlotFn = this.$scopedSlots[name];
                var nodes;
                if (scopedSlotFn) { // scoped slot
                    props = props || {};
                    if (bindObject) {
                        if (process.env.NODE_ENV !== 'production' && !isObject(bindObject)) {
                            warn(
                                'slot v-bind without argument expects an Object',
                                this
                            );
                        }
                        props = extend(extend({}, bindObject), props);
                    }
                    nodes = scopedSlotFn(props) || fallback;
                } else {
                    var slotNodes = this.$slots[name];
                    // warn duplicate slot usage
                    if (slotNodes) {
                        if (process.env.NODE_ENV !== 'production' && slotNodes._rendered) {
                            warn(
                                "Duplicate presence of slot \"" + name + "\" found in the same render tree " +
                                "- this will likely cause render errors.",
                                this
                            );
                        }
                        slotNodes._rendered = true;
                    }
                    nodes = slotNodes || fallback;
                }

                var target = props && props.slot;
                if (target) {
                    return this.$createElement('template', {slot: target}, nodes)
                } else {
                    return nodes
                }
            }

            /*  */

            /**
             * Runtime helper for resolving filters
             */
            function resolveFilter(id) {
                return resolveAsset(this.$options, 'filters', id, true) || identity
            }

            /*  */

            function isKeyNotMatch(expect, actual) {
                if (Array.isArray(expect)) {
                    return expect.indexOf(actual) === -1
                } else {
                    return expect !== actual
                }
            }

            /**
             * Runtime helper for checking keyCodes from config.
             * exposed as Vue.prototype._k
             * passing in eventKeyName as last argument separately for backwards compat
             */
            function checkKeyCodes(
                eventKeyCode,
                key,
                builtInKeyCode,
                eventKeyName,
                builtInKeyName
            ) {
                var mappedKeyCode = config.keyCodes[key] || builtInKeyCode;
                if (builtInKeyName && eventKeyName && !config.keyCodes[key]) {
                    return isKeyNotMatch(builtInKeyName, eventKeyName)
                } else if (mappedKeyCode) {
                    return isKeyNotMatch(mappedKeyCode, eventKeyCode)
                } else if (eventKeyName) {
                    return hyphenate(eventKeyName) !== key
                }
            }

            /*  */

            /**
             * Runtime helper for merging v-bind="object" into a VNode's data.
             */
            function bindObjectProps(
                data,
                tag,
                value,
                asProp,
                isSync
            ) {
                if (value) {
                    if (!isObject(value)) {
                        process.env.NODE_ENV !== 'production' && warn(
                            'v-bind without argument expects an Object or Array value',
                            this
                        );
                    } else {
                        if (Array.isArray(value)) {
                            value = toObject(value);
                        }
                        var hash;
                        var loop = function (key) {
                            if (
                                key === 'class' ||
                                key === 'style' ||
                                isReservedAttribute(key)
                            ) {
                                hash = data;
                            } else {
                                var type = data.attrs && data.attrs.type;
                                hash = asProp || config.mustUseProp(tag, type, key)
                                    ? data.domProps || (data.domProps = {})
                                    : data.attrs || (data.attrs = {});
                            }
                            if (!(key in hash)) {
                                hash[key] = value[key];

                                if (isSync) {
                                    var on = data.on || (data.on = {});
                                    on[("update:" + key)] = function ($event) {
                                        value[key] = $event;
                                    };
                                }
                            }
                        };

                        for (var key in value) loop(key);
                    }
                }
                return data
            }

            /*  */

            /**
             * Runtime helper for rendering static trees.
             */
            function renderStatic(
                index,
                isInFor
            ) {
                var cached = this._staticTrees || (this._staticTrees = []);
                var tree = cached[index];
                // if has already-rendered static tree and not inside v-for,
                // we can reuse the same tree.
                if (tree && !isInFor) {
                    return tree
                }
                // otherwise, render a fresh tree.
                tree = cached[index] = this.$options.staticRenderFns[index].call(
                    this._renderProxy,
                    null,
                    this // for render fns generated for functional component templates
                );
                markStatic(tree, ("__static__" + index), false);
                return tree
            }

            /**
             * Runtime helper for v-once.
             * Effectively it means marking the node as static with a unique key.
             */
            function markOnce(
                tree,
                index,
                key
            ) {
                markStatic(tree, ("__once__" + index + (key ? ("_" + key) : "")), true);
                return tree
            }

            function markStatic(
                tree,
                key,
                isOnce
            ) {
                if (Array.isArray(tree)) {
                    for (var i = 0; i < tree.length; i++) {
                        if (tree[i] && typeof tree[i] !== 'string') {
                            markStaticNode(tree[i], (key + "_" + i), isOnce);
                        }
                    }
                } else {
                    markStaticNode(tree, key, isOnce);
                }
            }

            function markStaticNode(node, key, isOnce) {
                node.isStatic = true;
                node.key = key;
                node.isOnce = isOnce;
            }

            /*  */

            function bindObjectListeners(data, value) {
                if (value) {
                    if (!isPlainObject(value)) {
                        process.env.NODE_ENV !== 'production' && warn(
                            'v-on without argument expects an Object value',
                            this
                        );
                    } else {
                        var on = data.on = data.on ? extend({}, data.on) : {};
                        for (var key in value) {
                            var existing = on[key];
                            var ours = value[key];
                            on[key] = existing ? [].concat(existing, ours) : ours;
                        }
                    }
                }
                return data
            }

            /*  */

            function installRenderHelpers(target) {
                target._o = markOnce;
                target._n = toNumber;
                target._s = toString;
                target._l = renderList;
                target._t = renderSlot;
                target._q = looseEqual;
                target._i = looseIndexOf;
                target._m = renderStatic;
                target._f = resolveFilter;
                target._k = checkKeyCodes;
                target._b = bindObjectProps;
                target._v = createTextVNode;
                target._e = createEmptyVNode;
                target._u = resolveScopedSlots;
                target._g = bindObjectListeners;
            }

            /*  */

            function FunctionalRenderContext(
                data,
                props,
                children,
                parent,
                Ctor
            ) {
                var options = Ctor.options;
                // ensure the createElement function in functional components
                // gets a unique context - this is necessary for correct named slot check
                var contextVm;
                if (hasOwn(parent, '_uid')) {
                    contextVm = Object.create(parent);
                    // $flow-disable-line
                    contextVm._original = parent;
                } else {
                    // the context vm passed in is a functional context as well.
                    // in this case we want to make sure we are able to get a hold to the
                    // real context instance.
                    contextVm = parent;
                    // $flow-disable-line
                    parent = parent._original;
                }
                var isCompiled = isTrue(options._compiled);
                var needNormalization = !isCompiled;

                this.data = data;
                this.props = props;
                this.children = children;
                this.parent = parent;
                this.listeners = data.on || emptyObject;
                this.injections = resolveInject(options.inject, parent);
                this.slots = function () {
                    return resolveSlots(children, parent);
                };

                // support for compiled functional template
                if (isCompiled) {
                    // exposing $options for renderStatic()
                    this.$options = options;
                    // pre-resolve slots for renderSlot()
                    this.$slots = this.slots();
                    this.$scopedSlots = data.scopedSlots || emptyObject;
                }

                if (options._scopeId) {
                    this._c = function (a, b, c, d) {
                        var vnode = createElement(contextVm, a, b, c, d, needNormalization);
                        if (vnode && !Array.isArray(vnode)) {
                            vnode.fnScopeId = options._scopeId;
                            vnode.fnContext = parent;
                        }
                        return vnode
                    };
                } else {
                    this._c = function (a, b, c, d) {
                        return createElement(contextVm, a, b, c, d, needNormalization);
                    };
                }
            }

            installRenderHelpers(FunctionalRenderContext.prototype);

            function createFunctionalComponent(
                Ctor,
                propsData,
                data,
                contextVm,
                children
            ) {
                var options = Ctor.options;
                var props = {};
                var propOptions = options.props;
                if (isDef(propOptions)) {
                    for (var key in propOptions) {
                        props[key] = validateProp(key, propOptions, propsData || emptyObject);
                    }
                } else {
                    if (isDef(data.attrs)) {
                        mergeProps(props, data.attrs);
                    }
                    if (isDef(data.props)) {
                        mergeProps(props, data.props);
                    }
                }

                var renderContext = new FunctionalRenderContext(
                    data,
                    props,
                    children,
                    contextVm,
                    Ctor
                );

                var vnode = options.render.call(null, renderContext._c, renderContext);

                if (vnode instanceof VNode) {
                    return cloneAndMarkFunctionalResult(vnode, data, renderContext.parent, options)
                } else if (Array.isArray(vnode)) {
                    var vnodes = normalizeChildren(vnode) || [];
                    var res = new Array(vnodes.length);
                    for (var i = 0; i < vnodes.length; i++) {
                        res[i] = cloneAndMarkFunctionalResult(vnodes[i], data, renderContext.parent, options);
                    }
                    return res
                }
            }

            function cloneAndMarkFunctionalResult(vnode, data, contextVm, options) {
                // #7817 clone node before setting fnContext, otherwise if the node is reused
                // (e.g. it was from a cached normal slot) the fnContext causes named slots
                // that should not be matched to match.
                var clone = cloneVNode(vnode);
                clone.fnContext = contextVm;
                clone.fnOptions = options;
                if (data.slot) {
                    (clone.data || (clone.data = {})).slot = data.slot;
                }
                return clone
            }

            function mergeProps(to, from) {
                for (var key in from) {
                    to[camelize(key)] = from[key];
                }
            }

            /*  */


// Register the component hook to weex native render engine.
// The hook will be triggered by native, not javascript.


// Updates the state of the component to weex native render engine.

            /*  */

// https://github.com/Hanks10100/weex-native-directive/tree/master/component

// listening on native callback

            /*  */

            /*  */

// inline hooks to be invoked on component VNodes during patch
            var componentVNodeHooks = {
                init: function init(
                    vnode,
                    hydrating,
                    parentElm,
                    refElm
                ) {
                    if (
                        vnode.componentInstance &&
                        !vnode.componentInstance._isDestroyed &&
                        vnode.data.keepAlive
                    ) {
                        // kept-alive components, treat as a patch
                        var mountedNode = vnode; // work around flow
                        componentVNodeHooks.prepatch(mountedNode, mountedNode);
                    } else {
                        var child = vnode.componentInstance = createComponentInstanceForVnode(
                            vnode,
                            activeInstance,
                            parentElm,
                            refElm
                        );
                        child.$mount(hydrating ? vnode.elm : undefined, hydrating);
                    }
                },

                prepatch: function prepatch(oldVnode, vnode) {
                    var options = vnode.componentOptions;
                    var child = vnode.componentInstance = oldVnode.componentInstance;
                    updateChildComponent(
                        child,
                        options.propsData, // updated props
                        options.listeners, // updated listeners
                        vnode, // new parent vnode
                        options.children // new children
                    );
                },

                insert: function insert(vnode) {
                    var context = vnode.context;
                    var componentInstance = vnode.componentInstance;
                    if (!componentInstance._isMounted) {
                        componentInstance._isMounted = true;
                        callHook(componentInstance, 'mounted');
                    }
                    if (vnode.data.keepAlive) {
                        if (context._isMounted) {
                            // vue-router#1212
                            // During updates, a kept-alive component's child components may
                            // change, so directly walking the tree here may call activated hooks
                            // on incorrect children. Instead we push them into a queue which will
                            // be processed after the whole patch process ended.
                            queueActivatedComponent(componentInstance);
                        } else {
                            activateChildComponent(componentInstance, true /* direct */);
                        }
                    }
                },

                destroy: function destroy(vnode) {
                    var componentInstance = vnode.componentInstance;
                    if (!componentInstance._isDestroyed) {
                        if (!vnode.data.keepAlive) {
                            componentInstance.$destroy();
                        } else {
                            deactivateChildComponent(componentInstance, true /* direct */);
                        }
                    }
                }
            };

            var hooksToMerge = Object.keys(componentVNodeHooks);

            function createComponent(
                Ctor,
                data,
                context,
                children,
                tag
            ) {
                if (isUndef(Ctor)) {
                    return
                }

                var baseCtor = context.$options._base;

                // plain options object: turn it into a constructor
                if (isObject(Ctor)) {
                    Ctor = baseCtor.extend(Ctor);
                }

                // if at this stage it's not a constructor or an async component factory,
                // reject.
                if (typeof Ctor !== 'function') {
                    if (process.env.NODE_ENV !== 'production') {
                        warn(("Invalid Component definition: " + (String(Ctor))), context);
                    }
                    return
                }

                // async component
                var asyncFactory;
                if (isUndef(Ctor.cid)) {
                    asyncFactory = Ctor;
                    Ctor = resolveAsyncComponent(asyncFactory, baseCtor, context);
                    if (Ctor === undefined) {
                        // return a placeholder node for async component, which is rendered
                        // as a comment node but preserves all the raw information for the node.
                        // the information will be used for async server-rendering and hydration.
                        return createAsyncPlaceholder(
                            asyncFactory,
                            data,
                            context,
                            children,
                            tag
                        )
                    }
                }

                data = data || {};

                // resolve constructor options in case global mixins are applied after
                // component constructor creation
                resolveConstructorOptions(Ctor);

                // transform component v-model data into props & events
                if (isDef(data.model)) {
                    transformModel(Ctor.options, data);
                }

                // extract props
                var propsData = extractPropsFromVNodeData(data, Ctor, tag);

                // functional component
                if (isTrue(Ctor.options.functional)) {
                    return createFunctionalComponent(Ctor, propsData, data, context, children)
                }

                // extract listeners, since these needs to be treated as
                // child component listeners instead of DOM listeners
                var listeners = data.on;
                // replace with listeners with .native modifier
                // so it gets processed during parent component patch.
                data.on = data.nativeOn;

                if (isTrue(Ctor.options.abstract)) {
                    // abstract components do not keep anything
                    // other than props & listeners & slot

                    // work around flow
                    var slot = data.slot;
                    data = {};
                    if (slot) {
                        data.slot = slot;
                    }
                }

                // install component management hooks onto the placeholder node
                installComponentHooks(data);

                // return a placeholder vnode
                var name = Ctor.options.name || tag;
                var vnode = new VNode(
                    ("vue-component-" + (Ctor.cid) + (name ? ("-" + name) : '')),
                    data, undefined, undefined, undefined, context,
                    {Ctor: Ctor, propsData: propsData, listeners: listeners, tag: tag, children: children},
                    asyncFactory
                );

                // Weex specific: invoke recycle-list optimized @render function for
                // extracting cell-slot template.
                // https://github.com/Hanks10100/weex-native-directive/tree/master/component
                /* istanbul ignore if */
                return vnode
            }

            function createComponentInstanceForVnode(
                vnode, // we know it's MountedComponentVNode but flow doesn't
                parent, // activeInstance in lifecycle state
                parentElm,
                refElm
            ) {
                var options = {
                    _isComponent: true,
                    parent: parent,
                    _parentVnode: vnode,
                    _parentElm: parentElm || null,
                    _refElm: refElm || null
                };
                // check inline-template render functions
                var inlineTemplate = vnode.data.inlineTemplate;
                if (isDef(inlineTemplate)) {
                    options.render = inlineTemplate.render;
                    options.staticRenderFns = inlineTemplate.staticRenderFns;
                }
                return new vnode.componentOptions.Ctor(options)
            }

            function installComponentHooks(data) {
                var hooks = data.hook || (data.hook = {});
                for (var i = 0; i < hooksToMerge.length; i++) {
                    var key = hooksToMerge[i];
                    hooks[key] = componentVNodeHooks[key];
                }
            }

// transform component v-model info (value and callback) into
// prop and event handler respectively.
            function transformModel(options, data) {
                var prop = (options.model && options.model.prop) || 'value';
                var event = (options.model && options.model.event) || 'input';
                (data.props || (data.props = {}))[prop] = data.model.value;
                var on = data.on || (data.on = {});
                if (isDef(on[event])) {
                    on[event] = [data.model.callback].concat(on[event]);
                } else {
                    on[event] = data.model.callback;
                }
            }

            /*  */

            var SIMPLE_NORMALIZE = 1;
            var ALWAYS_NORMALIZE = 2;

// wrapper function for providing a more flexible interface
// without getting yelled at by flow
            function createElement(
                context,
                tag,
                data,
                children,
                normalizationType,
                alwaysNormalize
            ) {
                if (Array.isArray(data) || isPrimitive(data)) {
                    normalizationType = children;
                    children = data;
                    data = undefined;
                }
                if (isTrue(alwaysNormalize)) {
                    normalizationType = ALWAYS_NORMALIZE;
                }
                return _createElement(context, tag, data, children, normalizationType)
            }

            function _createElement(
                context,
                tag,
                data,
                children,
                normalizationType
            ) {
                if (isDef(data) && isDef((data).__ob__)) {
                    process.env.NODE_ENV !== 'production' && warn(
                        "Avoid using observed data object as vnode data: " + (JSON.stringify(data)) + "\n" +
                        'Always create fresh vnode data objects in each render!',
                        context
                    );
                    return createEmptyVNode()
                }
                // object syntax in v-bind
                if (isDef(data) && isDef(data.is)) {
                    tag = data.is;
                }
                if (!tag) {
                    // in case of component :is set to falsy value
                    return createEmptyVNode()
                }
                // warn against non-primitive key
                if (process.env.NODE_ENV !== 'production' &&
                    isDef(data) && isDef(data.key) && !isPrimitive(data.key)
                ) {
                    {
                        warn(
                            'Avoid using non-primitive value as key, ' +
                            'use string/number value instead.',
                            context
                        );
                    }
                }
                // support single function children as default scoped slot
                if (Array.isArray(children) &&
                    typeof children[0] === 'function'
                ) {
                    data = data || {};
                    data.scopedSlots = {default: children[0]};
                    children.length = 0;
                }
                if (normalizationType === ALWAYS_NORMALIZE) {
                    children = normalizeChildren(children);
                } else if (normalizationType === SIMPLE_NORMALIZE) {
                    children = simpleNormalizeChildren(children);
                }
                var vnode, ns;
                if (typeof tag === 'string') {
                    var Ctor;
                    ns = (context.$vnode && context.$vnode.ns) || config.getTagNamespace(tag);
                    if (config.isReservedTag(tag)) {
                        // platform built-in elements
                        vnode = new VNode(
                            config.parsePlatformTagName(tag), data, children,
                            undefined, undefined, context
                        );
                    } else if (isDef(Ctor = resolveAsset(context.$options, 'components', tag))) {
                        // component
                        vnode = createComponent(Ctor, data, context, children, tag);
                    } else {
                        // unknown or unlisted namespaced elements
                        // check at runtime because it may get assigned a namespace when its
                        // parent normalizes children
                        vnode = new VNode(
                            tag, data, children,
                            undefined, undefined, context
                        );
                    }
                } else {
                    // direct component options / constructor
                    vnode = createComponent(tag, data, context, children);
                }
                if (Array.isArray(vnode)) {
                    return vnode
                } else if (isDef(vnode)) {
                    if (isDef(ns)) {
                        applyNS(vnode, ns);
                    }
                    if (isDef(data)) {
                        registerDeepBindings(data);
                    }
                    return vnode
                } else {
                    return createEmptyVNode()
                }
            }

            function applyNS(vnode, ns, force) {
                vnode.ns = ns;
                if (vnode.tag === 'foreignObject') {
                    // use default namespace inside foreignObject
                    ns = undefined;
                    force = true;
                }
                if (isDef(vnode.children)) {
                    for (var i = 0, l = vnode.children.length; i < l; i++) {
                        var child = vnode.children[i];
                        if (isDef(child.tag) && (
                                isUndef(child.ns) || (isTrue(force) && child.tag !== 'svg'))) {
                            applyNS(child, ns, force);
                        }
                    }
                }
            }

// ref #5318
// necessary to ensure parent re-render when deep bindings like :style and
// :class are used on slot nodes
            function registerDeepBindings(data) {
                if (isObject(data.style)) {
                    traverse(data.style);
                }
                if (isObject(data.class)) {
                    traverse(data.class);
                }
            }

            /*  */

            function initRender(vm) {
                vm._vnode = null; // the root of the child tree
                vm._staticTrees = null; // v-once cached trees
                var options = vm.$options;
                var parentVnode = vm.$vnode = options._parentVnode; // the placeholder node in parent tree
                var renderContext = parentVnode && parentVnode.context;
                vm.$slots = resolveSlots(options._renderChildren, renderContext);
                vm.$scopedSlots = emptyObject;
                // bind the createElement fn to this instance
                // so that we get proper render context inside it.
                // args order: tag, data, children, normalizationType, alwaysNormalize
                // internal version is used by render functions compiled from templates
                vm._c = function (a, b, c, d) {
                    return createElement(vm, a, b, c, d, false);
                };
                // normalization is always applied for the public version, used in
                // user-written render functions.
                vm.$createElement = function (a, b, c, d) {
                    return createElement(vm, a, b, c, d, true);
                };

                // $attrs & $listeners are exposed for easier HOC creation.
                // they need to be reactive so that HOCs using them are always updated
                var parentData = parentVnode && parentVnode.data;

                /* istanbul ignore else */
                if (process.env.NODE_ENV !== 'production') {
                    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, function () {
                        !isUpdatingChildComponent && warn("$attrs is readonly.", vm);
                    }, true);
                    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, function () {
                        !isUpdatingChildComponent && warn("$listeners is readonly.", vm);
                    }, true);
                } else {
                    defineReactive(vm, '$attrs', parentData && parentData.attrs || emptyObject, null, true);
                    defineReactive(vm, '$listeners', options._parentListeners || emptyObject, null, true);
                }
            }

            function renderMixin(Vue) {
                // install runtime convenience helpers
                installRenderHelpers(Vue.prototype);

                Vue.prototype.$nextTick = function (fn) {
                    return nextTick(fn, this)
                };

                Vue.prototype._render = function () {
                    var vm = this;
                    var ref = vm.$options;
                    var render = ref.render;
                    var _parentVnode = ref._parentVnode;

                    // reset _rendered flag on slots for duplicate slot check
                    if (process.env.NODE_ENV !== 'production') {
                        for (var key in vm.$slots) {
                            // $flow-disable-line
                            vm.$slots[key]._rendered = false;
                        }
                    }

                    if (_parentVnode) {
                        vm.$scopedSlots = _parentVnode.data.scopedSlots || emptyObject;
                    }

                    // set parent vnode. this allows render functions to have access
                    // to the data on the placeholder node.
                    vm.$vnode = _parentVnode;
                    // render self
                    var vnode;
                    try {
                        vnode = render.call(vm._renderProxy, vm.$createElement);
                    } catch (e) {
                        handleError(e, vm, "render");
                        // return error render result,
                        // or previous vnode to prevent render error causing blank component
                        /* istanbul ignore else */
                        if (process.env.NODE_ENV !== 'production') {
                            if (vm.$options.renderError) {
                                try {
                                    vnode = vm.$options.renderError.call(vm._renderProxy, vm.$createElement, e);
                                } catch (e) {
                                    handleError(e, vm, "renderError");
                                    vnode = vm._vnode;
                                }
                            } else {
                                vnode = vm._vnode;
                            }
                        } else {
                            vnode = vm._vnode;
                        }
                    }
                    // return empty vnode in case the render function errored out
                    if (!(vnode instanceof VNode)) {
                        if (process.env.NODE_ENV !== 'production' && Array.isArray(vnode)) {
                            warn(
                                'Multiple root nodes returned from render function. Render function ' +
                                'should return a single root node.',
                                vm
                            );
                        }
                        vnode = createEmptyVNode();
                    }
                    // set parent
                    vnode.parent = _parentVnode;
                    return vnode
                };
            }

            /*  */

            var uid$3 = 0;

            function initMixin(Vue) {
                Vue.prototype._init = function (options) {
                    var vm = this;
                    // a uid
                    vm._uid = uid$3++;

                    var startTag, endTag;
                    /* istanbul ignore if */
                    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
                        startTag = "vue-perf-start:" + (vm._uid);
                        endTag = "vue-perf-end:" + (vm._uid);
                        mark(startTag);
                    }

                    // a flag to avoid this being observed
                    vm._isVue = true;
                    // merge options
                    if (options && options._isComponent) {
                        // optimize internal component instantiation
                        // since dynamic options merging is pretty slow, and none of the
                        // internal component options needs special treatment.
                        initInternalComponent(vm, options);
                    } else {
                        vm.$options = mergeOptions(
                            resolveConstructorOptions(vm.constructor),
                            options || {},
                            vm
                        );
                    }
                    /* istanbul ignore else */
                    if (process.env.NODE_ENV !== 'production') {
                        initProxy(vm);
                    } else {
                        vm._renderProxy = vm;
                    }
                    // expose real self
                    vm._self = vm;
                    initLifecycle(vm);
                    initEvents(vm);
                    initRender(vm);
                    callHook(vm, 'beforeCreate');
                    initInjections(vm); // resolve injections before data/props
                    initState(vm);
                    initProvide(vm); // resolve provide after data/props
                    callHook(vm, 'created');

                    /* istanbul ignore if */
                    if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
                        vm._name = formatComponentName(vm, false);
                        mark(endTag);
                        measure(("vue " + (vm._name) + " init"), startTag, endTag);
                    }

                    if (vm.$options.el) {
                        vm.$mount(vm.$options.el);
                    }
                };
            }

            function initInternalComponent(vm, options) {
                var opts = vm.$options = Object.create(vm.constructor.options);
                // doing this because it's faster than dynamic enumeration.
                var parentVnode = options._parentVnode;
                opts.parent = options.parent;
                opts._parentVnode = parentVnode;
                opts._parentElm = options._parentElm;
                opts._refElm = options._refElm;

                var vnodeComponentOptions = parentVnode.componentOptions;
                opts.propsData = vnodeComponentOptions.propsData;
                opts._parentListeners = vnodeComponentOptions.listeners;
                opts._renderChildren = vnodeComponentOptions.children;
                opts._componentTag = vnodeComponentOptions.tag;

                if (options.render) {
                    opts.render = options.render;
                    opts.staticRenderFns = options.staticRenderFns;
                }
            }

            function resolveConstructorOptions(Ctor) {
                var options = Ctor.options;
                if (Ctor.super) {
                    var superOptions = resolveConstructorOptions(Ctor.super);
                    var cachedSuperOptions = Ctor.superOptions;
                    if (superOptions !== cachedSuperOptions) {
                        // super option changed,
                        // need to resolve new options.
                        Ctor.superOptions = superOptions;
                        // check if there are any late-modified/attached options (#4976)
                        var modifiedOptions = resolveModifiedOptions(Ctor);
                        // update base extend options
                        if (modifiedOptions) {
                            extend(Ctor.extendOptions, modifiedOptions);
                        }
                        options = Ctor.options = mergeOptions(superOptions, Ctor.extendOptions);
                        if (options.name) {
                            options.components[options.name] = Ctor;
                        }
                    }
                }
                return options
            }

            function resolveModifiedOptions(Ctor) {
                var modified;
                var latest = Ctor.options;
                var extended = Ctor.extendOptions;
                var sealed = Ctor.sealedOptions;
                for (var key in latest) {
                    if (latest[key] !== sealed[key]) {
                        if (!modified) {
                            modified = {};
                        }
                        modified[key] = dedupe(latest[key], extended[key], sealed[key]);
                    }
                }
                return modified
            }

            function dedupe(latest, extended, sealed) {
                // compare latest and sealed to ensure lifecycle hooks won't be duplicated
                // between merges
                if (Array.isArray(latest)) {
                    var res = [];
                    sealed = Array.isArray(sealed) ? sealed : [sealed];
                    extended = Array.isArray(extended) ? extended : [extended];
                    for (var i = 0; i < latest.length; i++) {
                        // push original options and not sealed options to exclude duplicated options
                        if (extended.indexOf(latest[i]) >= 0 || sealed.indexOf(latest[i]) < 0) {
                            res.push(latest[i]);
                        }
                    }
                    return res
                } else {
                    return latest
                }
            }

            function Vue(options) {
                if (process.env.NODE_ENV !== 'production' &&
                    !(this instanceof Vue)
                ) {
                    warn('Vue is a constructor and should be called with the `new` keyword');
                }
                this._init(options);
            }

            initMixin(Vue);
            stateMixin(Vue);
            eventsMixin(Vue);
            lifecycleMixin(Vue);
            renderMixin(Vue);

            /*  */

            function initUse(Vue) {
                Vue.use = function (plugin) {
                    var installedPlugins = (this._installedPlugins || (this._installedPlugins = []));
                    if (installedPlugins.indexOf(plugin) > -1) {
                        return this
                    }

                    // additional parameters
                    var args = toArray(arguments, 1);
                    args.unshift(this);
                    if (typeof plugin.install === 'function') {
                        plugin.install.apply(plugin, args);
                    } else if (typeof plugin === 'function') {
                        plugin.apply(null, args);
                    }
                    installedPlugins.push(plugin);
                    return this
                };
            }

            /*  */

            function initMixin$1(Vue) {
                Vue.mixin = function (mixin) {
                    this.options = mergeOptions(this.options, mixin);
                    return this
                };
            }

            /*  */

            function initExtend(Vue) {
                /**
                 * Each instance constructor, including Vue, has a unique
                 * cid. This enables us to create wrapped "child
                 * constructors" for prototypal inheritance and cache them.
                 */
                Vue.cid = 0;
                var cid = 1;

                /**
                 * Class inheritance
                 */
                Vue.extend = function (extendOptions) {
                    extendOptions = extendOptions || {};
                    var Super = this;
                    var SuperId = Super.cid;
                    var cachedCtors = extendOptions._Ctor || (extendOptions._Ctor = {});
                    if (cachedCtors[SuperId]) {
                        return cachedCtors[SuperId]
                    }

                    var name = extendOptions.name || Super.options.name;
                    if (process.env.NODE_ENV !== 'production' && name) {
                        validateComponentName(name);
                    }

                    var Sub = function VueComponent(options) {
                        this._init(options);
                    };
                    Sub.prototype = Object.create(Super.prototype);
                    Sub.prototype.constructor = Sub;
                    Sub.cid = cid++;
                    Sub.options = mergeOptions(
                        Super.options,
                        extendOptions
                    );
                    Sub['super'] = Super;

                    // For props and computed properties, we define the proxy getters on
                    // the Vue instances at extension time, on the extended prototype. This
                    // avoids Object.defineProperty calls for each instance created.
                    if (Sub.options.props) {
                        initProps$1(Sub);
                    }
                    if (Sub.options.computed) {
                        initComputed$1(Sub);
                    }

                    // allow further extension/mixin/plugin usage
                    Sub.extend = Super.extend;
                    Sub.mixin = Super.mixin;
                    Sub.use = Super.use;

                    // create asset registers, so extended classes
                    // can have their private assets too.
                    ASSET_TYPES.forEach(function (type) {
                        Sub[type] = Super[type];
                    });
                    // enable recursive self-lookup
                    if (name) {
                        Sub.options.components[name] = Sub;
                    }

                    // keep a reference to the super options at extension time.
                    // later at instantiation we can check if Super's options have
                    // been updated.
                    Sub.superOptions = Super.options;
                    Sub.extendOptions = extendOptions;
                    Sub.sealedOptions = extend({}, Sub.options);

                    // cache constructor
                    cachedCtors[SuperId] = Sub;
                    return Sub
                };
            }

            function initProps$1(Comp) {
                var props = Comp.options.props;
                for (var key in props) {
                    proxy(Comp.prototype, "_props", key);
                }
            }

            function initComputed$1(Comp) {
                var computed = Comp.options.computed;
                for (var key in computed) {
                    defineComputed(Comp.prototype, key, computed[key]);
                }
            }

            /*  */

            function initAssetRegisters(Vue) {
                /**
                 * Create asset registration methods.
                 */
                ASSET_TYPES.forEach(function (type) {
                    Vue[type] = function (
                        id,
                        definition
                    ) {
                        if (!definition) {
                            return this.options[type + 's'][id]
                        } else {
                            /* istanbul ignore if */
                            if (process.env.NODE_ENV !== 'production' && type === 'component') {
                                validateComponentName(id);
                            }
                            if (type === 'component' && isPlainObject(definition)) {
                                definition.name = definition.name || id;
                                definition = this.options._base.extend(definition);
                            }
                            if (type === 'directive' && typeof definition === 'function') {
                                definition = {bind: definition, update: definition};
                            }
                            this.options[type + 's'][id] = definition;
                            return definition
                        }
                    };
                });
            }

            /*  */

            function getComponentName(opts) {
                return opts && (opts.Ctor.options.name || opts.tag)
            }

            function matches(pattern, name) {
                if (Array.isArray(pattern)) {
                    return pattern.indexOf(name) > -1
                } else if (typeof pattern === 'string') {
                    return pattern.split(',').indexOf(name) > -1
                } else if (isRegExp(pattern)) {
                    return pattern.test(name)
                }
                /* istanbul ignore next */
                return false
            }

            function pruneCache(keepAliveInstance, filter) {
                var cache = keepAliveInstance.cache;
                var keys = keepAliveInstance.keys;
                var _vnode = keepAliveInstance._vnode;
                for (var key in cache) {
                    var cachedNode = cache[key];
                    if (cachedNode) {
                        var name = getComponentName(cachedNode.componentOptions);
                        if (name && !filter(name)) {
                            pruneCacheEntry(cache, key, keys, _vnode);
                        }
                    }
                }
            }

            function pruneCacheEntry(
                cache,
                key,
                keys,
                current
            ) {
                var cached$$1 = cache[key];
                if (cached$$1 && (!current || cached$$1.tag !== current.tag)) {
                    cached$$1.componentInstance.$destroy();
                }
                cache[key] = null;
                remove(keys, key);
            }

            var patternTypes = [String, RegExp, Array];

            var KeepAlive = {
                name: 'keep-alive',
                abstract: true,

                props: {
                    include: patternTypes,
                    exclude: patternTypes,
                    max: [String, Number]
                },

                created: function created() {
                    this.cache = Object.create(null);
                    this.keys = [];
                },

                destroyed: function destroyed() {
                    var this$1 = this;

                    for (var key in this$1.cache) {
                        pruneCacheEntry(this$1.cache, key, this$1.keys);
                    }
                },

                mounted: function mounted() {
                    var this$1 = this;

                    this.$watch('include', function (val) {
                        pruneCache(this$1, function (name) {
                            return matches(val, name);
                        });
                    });
                    this.$watch('exclude', function (val) {
                        pruneCache(this$1, function (name) {
                            return !matches(val, name);
                        });
                    });
                },

                render: function render() {
                    var slot = this.$slots.default;
                    var vnode = getFirstComponentChild(slot);
                    var componentOptions = vnode && vnode.componentOptions;
                    if (componentOptions) {
                        // check pattern
                        var name = getComponentName(componentOptions);
                        var ref = this;
                        var include = ref.include;
                        var exclude = ref.exclude;
                        if (
                            // not included
                        (include && (!name || !matches(include, name))) ||
                        // excluded
                        (exclude && name && matches(exclude, name))
                        ) {
                            return vnode
                        }

                        var ref$1 = this;
                        var cache = ref$1.cache;
                        var keys = ref$1.keys;
                        var key = vnode.key == null
                            // same constructor may get registered as different local components
                            // so cid alone is not enough (#3269)
                            ? componentOptions.Ctor.cid + (componentOptions.tag ? ("::" + (componentOptions.tag)) : '')
                            : vnode.key;
                        if (cache[key]) {
                            vnode.componentInstance = cache[key].componentInstance;
                            // make current key freshest
                            remove(keys, key);
                            keys.push(key);
                        } else {
                            cache[key] = vnode;
                            keys.push(key);
                            // prune oldest entry
                            if (this.max && keys.length > parseInt(this.max)) {
                                pruneCacheEntry(cache, keys[0], keys, this._vnode);
                            }
                        }

                        vnode.data.keepAlive = true;
                    }
                    return vnode || (slot && slot[0])
                }
            }

            var builtInComponents = {
                KeepAlive: KeepAlive
            }

            /*  */

            function initGlobalAPI(Vue) {
                // config
                var configDef = {};
                configDef.get = function () {
                    return config;
                };
                if (process.env.NODE_ENV !== 'production') {
                    configDef.set = function () {
                        warn(
                            'Do not replace the Vue.config object, set individual fields instead.'
                        );
                    };
                }
                Object.defineProperty(Vue, 'config', configDef);

                // exposed util methods.
                // NOTE: these are not considered part of the public API - avoid relying on
                // them unless you are aware of the risk.
                Vue.util = {
                    warn: warn,
                    extend: extend,
                    mergeOptions: mergeOptions,
                    defineReactive: defineReactive
                };

                Vue.set = set;
                Vue.delete = del;
                Vue.nextTick = nextTick;

                Vue.options = Object.create(null);
                ASSET_TYPES.forEach(function (type) {
                    Vue.options[type + 's'] = Object.create(null);
                });

                // this is used to identify the "base" constructor to extend all plain-object
                // components with in Weex's multi-instance scenarios.
                Vue.options._base = Vue;

                extend(Vue.options.components, builtInComponents);

                initUse(Vue);
                initMixin$1(Vue);
                initExtend(Vue);
                initAssetRegisters(Vue);
            }

            initGlobalAPI(Vue);

            Object.defineProperty(Vue.prototype, '$isServer', {
                get: isServerRendering
            });

            Object.defineProperty(Vue.prototype, '$ssrContext', {
                get: function get() {
                    /* istanbul ignore next */
                    return this.$vnode && this.$vnode.ssrContext
                }
            });

// expose FunctionalRenderContext for ssr runtime helper installation
            Object.defineProperty(Vue, 'FunctionalRenderContext', {
                value: FunctionalRenderContext
            });

            Vue.version = '2.5.16';

            /*  */

// these are reserved for web because they are directly compiled away
// during template compilation
            var isReservedAttr = makeMap('style,class');

// attributes that should be using props for binding
            var acceptValue = makeMap('input,textarea,option,select,progress');
            var mustUseProp = function (tag, type, attr) {
                return (
                    (attr === 'value' && acceptValue(tag)) && type !== 'button' ||
                    (attr === 'selected' && tag === 'option') ||
                    (attr === 'checked' && tag === 'input') ||
                    (attr === 'muted' && tag === 'video')
                )
            };

            var isEnumeratedAttr = makeMap('contenteditable,draggable,spellcheck');

            var isBooleanAttr = makeMap(
                'allowfullscreen,async,autofocus,autoplay,checked,compact,controls,declare,' +
                'default,defaultchecked,defaultmuted,defaultselected,defer,disabled,' +
                'enabled,formnovalidate,hidden,indeterminate,inert,ismap,itemscope,loop,multiple,' +
                'muted,nohref,noresize,noshade,novalidate,nowrap,open,pauseonexit,readonly,' +
                'required,reversed,scoped,seamless,selected,sortable,translate,' +
                'truespeed,typemustmatch,visible'
            );

            var xlinkNS = 'http://www.w3.org/1999/xlink';

            var isXlink = function (name) {
                return name.charAt(5) === ':' && name.slice(0, 5) === 'xlink'
            };

            var getXlinkProp = function (name) {
                return isXlink(name) ? name.slice(6, name.length) : ''
            };

            var isFalsyAttrValue = function (val) {
                return val == null || val === false
            };

            /*  */

            function genClassForVnode(vnode) {
                var data = vnode.data;
                var parentNode = vnode;
                var childNode = vnode;
                while (isDef(childNode.componentInstance)) {
                    childNode = childNode.componentInstance._vnode;
                    if (childNode && childNode.data) {
                        data = mergeClassData(childNode.data, data);
                    }
                }
                while (isDef(parentNode = parentNode.parent)) {
                    if (parentNode && parentNode.data) {
                        data = mergeClassData(data, parentNode.data);
                    }
                }
                return renderClass(data.staticClass, data.class)
            }

            function mergeClassData(child, parent) {
                return {
                    staticClass: concat(child.staticClass, parent.staticClass),
                    class: isDef(child.class)
                        ? [child.class, parent.class]
                        : parent.class
                }
            }

            function renderClass(
                staticClass,
                dynamicClass
            ) {
                if (isDef(staticClass) || isDef(dynamicClass)) {
                    return concat(staticClass, stringifyClass(dynamicClass))
                }
                /* istanbul ignore next */
                return ''
            }

            function concat(a, b) {
                return a ? b ? (a + ' ' + b) : a : (b || '')
            }

            function stringifyClass(value) {
                if (Array.isArray(value)) {
                    return stringifyArray(value)
                }
                if (isObject(value)) {
                    return stringifyObject(value)
                }
                if (typeof value === 'string') {
                    return value
                }
                /* istanbul ignore next */
                return ''
            }

            function stringifyArray(value) {
                var res = '';
                var stringified;
                for (var i = 0, l = value.length; i < l; i++) {
                    if (isDef(stringified = stringifyClass(value[i])) && stringified !== '') {
                        if (res) {
                            res += ' ';
                        }
                        res += stringified;
                    }
                }
                return res
            }

            function stringifyObject(value) {
                var res = '';
                for (var key in value) {
                    if (value[key]) {
                        if (res) {
                            res += ' ';
                        }
                        res += key;
                    }
                }
                return res
            }

            /*  */

            var namespaceMap = {
                svg: 'http://www.w3.org/2000/svg',
                math: 'http://www.w3.org/1998/Math/MathML'
            };

            var isHTMLTag = makeMap(
                'html,body,base,head,link,meta,style,title,' +
                'address,article,aside,footer,header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,' +
                'div,dd,dl,dt,figcaption,figure,picture,hr,img,li,main,ol,p,pre,ul,' +
                'a,b,abbr,bdi,bdo,br,cite,code,data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,' +
                's,samp,small,span,strong,sub,sup,time,u,var,wbr,area,audio,map,track,video,' +
                'embed,object,param,source,canvas,script,noscript,del,ins,' +
                'caption,col,colgroup,table,thead,tbody,td,th,tr,' +
                'button,datalist,fieldset,form,input,label,legend,meter,optgroup,option,' +
                'output,progress,select,textarea,' +
                'details,dialog,menu,menuitem,summary,' +
                'content,element,shadow,template,blockquote,iframe,tfoot'
            );

// this map is intentionally selective, only covering SVG elements that may
// contain child elements.
            var isSVG = makeMap(
                'svg,animate,circle,clippath,cursor,defs,desc,ellipse,filter,font-face,' +
                'foreignObject,g,glyph,image,line,marker,mask,missing-glyph,path,pattern,' +
                'polygon,polyline,rect,switch,symbol,text,textpath,tspan,use,view',
                true
            );

            var isPreTag = function (tag) {
                return tag === 'pre';
            };

            var isReservedTag = function (tag) {
                return isHTMLTag(tag) || isSVG(tag)
            };

            function getTagNamespace(tag) {
                if (isSVG(tag)) {
                    return 'svg'
                }
                // basic support for MathML
                // note it doesn't support other MathML elements being component roots
                if (tag === 'math') {
                    return 'math'
                }
            }

            var unknownElementCache = Object.create(null);

            function isUnknownElement(tag) {
                /* istanbul ignore if */
                if (!inBrowser) {
                    return true
                }
                if (isReservedTag(tag)) {
                    return false
                }
                tag = tag.toLowerCase();
                /* istanbul ignore if */
                if (unknownElementCache[tag] != null) {
                    return unknownElementCache[tag]
                }
                var el = document.createElement(tag);
                if (tag.indexOf('-') > -1) {
                    // http://stackoverflow.com/a/28210364/1070244
                    return (unknownElementCache[tag] = (
                        el.constructor === window.HTMLUnknownElement ||
                        el.constructor === window.HTMLElement
                    ))
                } else {
                    return (unknownElementCache[tag] = /HTMLUnknownElement/.test(el.toString()))
                }
            }

            var isTextInputType = makeMap('text,number,password,search,email,tel,url');

            /*  */

            /**
             * Query an element selector if it's not an element already.
             */
            function query(el) {
                if (typeof el === 'string') {
                    var selected = document.querySelector(el);
                    if (!selected) {
                        process.env.NODE_ENV !== 'production' && warn(
                            'Cannot find element: ' + el
                        );
                        return document.createElement('div')
                    }
                    return selected
                } else {
                    return el
                }
            }

            /*  */

            function createElement$1(tagName, vnode) {
                var elm = document.createElement(tagName);
                if (tagName !== 'select') {
                    return elm
                }
                // false or null will remove the attribute but undefined will not
                if (vnode.data && vnode.data.attrs && vnode.data.attrs.multiple !== undefined) {
                    elm.setAttribute('multiple', 'multiple');
                }
                return elm
            }

            function createElementNS(namespace, tagName) {
                return document.createElementNS(namespaceMap[namespace], tagName)
            }

            function createTextNode(text) {
                return document.createTextNode(text)
            }

            function createComment(text) {
                return document.createComment(text)
            }

            function insertBefore(parentNode, newNode, referenceNode) {
                parentNode.insertBefore(newNode, referenceNode);
            }

            function removeChild(node, child) {
                node.removeChild(child);
            }

            function appendChild(node, child) {
                node.appendChild(child);
            }

            function parentNode(node) {
                return node.parentNode
            }

            function nextSibling(node) {
                return node.nextSibling
            }

            function tagName(node) {
                return node.tagName
            }

            function setTextContent(node, text) {
                node.textContent = text;
            }

            function setStyleScope(node, scopeId) {
                node.setAttribute(scopeId, '');
            }


            var nodeOps = Object.freeze({
                createElement: createElement$1,
                createElementNS: createElementNS,
                createTextNode: createTextNode,
                createComment: createComment,
                insertBefore: insertBefore,
                removeChild: removeChild,
                appendChild: appendChild,
                parentNode: parentNode,
                nextSibling: nextSibling,
                tagName: tagName,
                setTextContent: setTextContent,
                setStyleScope: setStyleScope
            });

            /*  */

            var ref = {
                create: function create(_, vnode) {
                    registerRef(vnode);
                },
                update: function update(oldVnode, vnode) {
                    if (oldVnode.data.ref !== vnode.data.ref) {
                        registerRef(oldVnode, true);
                        registerRef(vnode);
                    }
                },
                destroy: function destroy(vnode) {
                    registerRef(vnode, true);
                }
            }

            function registerRef(vnode, isRemoval) {
                var key = vnode.data.ref;
                if (!isDef(key)) {
                    return
                }

                var vm = vnode.context;
                var ref = vnode.componentInstance || vnode.elm;
                var refs = vm.$refs;
                if (isRemoval) {
                    if (Array.isArray(refs[key])) {
                        remove(refs[key], ref);
                    } else if (refs[key] === ref) {
                        refs[key] = undefined;
                    }
                } else {
                    if (vnode.data.refInFor) {
                        if (!Array.isArray(refs[key])) {
                            refs[key] = [ref];
                        } else if (refs[key].indexOf(ref) < 0) {
                            // $flow-disable-line
                            refs[key].push(ref);
                        }
                    } else {
                        refs[key] = ref;
                    }
                }
            }

            /**
             * Virtual DOM patching algorithm based on Snabbdom by
             * Simon Friis Vindum (@paldepind)
             * Licensed under the MIT License
             * https://github.com/paldepind/snabbdom/blob/master/LICENSE
             *
             * modified by Evan You (@yyx990803)
             *
             * Not type-checking this because this file is perf-critical and the cost
             * of making flow understand it is not worth it.
             */

            var emptyNode = new VNode('', {}, []);

            var hooks = ['create', 'activate', 'update', 'remove', 'destroy'];

            function sameVnode(a, b) {
                return (
                    a.key === b.key && (
                        (
                            a.tag === b.tag &&
                            a.isComment === b.isComment &&
                            isDef(a.data) === isDef(b.data) &&
                            sameInputType(a, b)
                        ) || (
                            isTrue(a.isAsyncPlaceholder) &&
                            a.asyncFactory === b.asyncFactory &&
                            isUndef(b.asyncFactory.error)
                        )
                    )
                )
            }

            function sameInputType(a, b) {
                if (a.tag !== 'input') {
                    return true
                }
                var i;
                var typeA = isDef(i = a.data) && isDef(i = i.attrs) && i.type;
                var typeB = isDef(i = b.data) && isDef(i = i.attrs) && i.type;
                return typeA === typeB || isTextInputType(typeA) && isTextInputType(typeB)
            }

            function createKeyToOldIdx(children, beginIdx, endIdx) {
                var i, key;
                var map = {};
                for (i = beginIdx; i <= endIdx; ++i) {
                    key = children[i].key;
                    if (isDef(key)) {
                        map[key] = i;
                    }
                }
                return map
            }

            function createPatchFunction(backend) {
                var i, j;
                var cbs = {};

                var modules = backend.modules;
                var nodeOps = backend.nodeOps;

                for (i = 0; i < hooks.length; ++i) {
                    cbs[hooks[i]] = [];
                    for (j = 0; j < modules.length; ++j) {
                        if (isDef(modules[j][hooks[i]])) {
                            cbs[hooks[i]].push(modules[j][hooks[i]]);
                        }
                    }
                }

                function emptyNodeAt(elm) {
                    return new VNode(nodeOps.tagName(elm).toLowerCase(), {}, [], undefined, elm)
                }

                function createRmCb(childElm, listeners) {
                    function remove() {
                        if (--remove.listeners === 0) {
                            removeNode(childElm);
                        }
                    }

                    remove.listeners = listeners;
                    return remove
                }

                function removeNode(el) {
                    var parent = nodeOps.parentNode(el);
                    // element may have already been removed due to v-html / v-text
                    if (isDef(parent)) {
                        nodeOps.removeChild(parent, el);
                    }
                }

                function isUnknownElement$$1(vnode, inVPre) {
                    return (
                        !inVPre &&
                        !vnode.ns &&
                        !(
                            config.ignoredElements.length &&
                            config.ignoredElements.some(function (ignore) {
                                return isRegExp(ignore)
                                    ? ignore.test(vnode.tag)
                                    : ignore === vnode.tag
                            })
                        ) &&
                        config.isUnknownElement(vnode.tag)
                    )
                }

                var creatingElmInVPre = 0;

                function createElm(
                    vnode,
                    insertedVnodeQueue,
                    parentElm,
                    refElm,
                    nested,
                    ownerArray,
                    index
                ) {
                    if (isDef(vnode.elm) && isDef(ownerArray)) {
                        // This vnode was used in a previous render!
                        // now it's used as a new node, overwriting its elm would cause
                        // potential patch errors down the road when it's used as an insertion
                        // reference node. Instead, we clone the node on-demand before creating
                        // associated DOM element for it.
                        vnode = ownerArray[index] = cloneVNode(vnode);
                    }

                    vnode.isRootInsert = !nested; // for transition enter check
                    if (createComponent(vnode, insertedVnodeQueue, parentElm, refElm)) {
                        return
                    }

                    var data = vnode.data;
                    var children = vnode.children;
                    var tag = vnode.tag;
                    if (isDef(tag)) {
                        if (process.env.NODE_ENV !== 'production') {
                            if (data && data.pre) {
                                creatingElmInVPre++;
                            }
                            if (isUnknownElement$$1(vnode, creatingElmInVPre)) {
                                warn(
                                    'Unknown custom element: <' + tag + '> - did you ' +
                                    'register the component correctly? For recursive components, ' +
                                    'make sure to provide the "name" option.',
                                    vnode.context
                                );
                            }
                        }

                        vnode.elm = vnode.ns
                            ? nodeOps.createElementNS(vnode.ns, tag)
                            : nodeOps.createElement(tag, vnode);
                        setScope(vnode);

                        /* istanbul ignore if */
                        {
                            createChildren(vnode, children, insertedVnodeQueue);
                            if (isDef(data)) {
                                invokeCreateHooks(vnode, insertedVnodeQueue);
                            }
                            insert(parentElm, vnode.elm, refElm);
                        }

                        if (process.env.NODE_ENV !== 'production' && data && data.pre) {
                            creatingElmInVPre--;
                        }
                    } else if (isTrue(vnode.isComment)) {
                        vnode.elm = nodeOps.createComment(vnode.text);
                        insert(parentElm, vnode.elm, refElm);
                    } else {
                        vnode.elm = nodeOps.createTextNode(vnode.text);
                        insert(parentElm, vnode.elm, refElm);
                    }
                }

                function createComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
                    var i = vnode.data;
                    if (isDef(i)) {
                        var isReactivated = isDef(vnode.componentInstance) && i.keepAlive;
                        if (isDef(i = i.hook) && isDef(i = i.init)) {
                            i(vnode, false /* hydrating */, parentElm, refElm);
                        }
                        // after calling the init hook, if the vnode is a child component
                        // it should've created a child instance and mounted it. the child
                        // component also has set the placeholder vnode's elm.
                        // in that case we can just return the element and be done.
                        if (isDef(vnode.componentInstance)) {
                            initComponent(vnode, insertedVnodeQueue);
                            if (isTrue(isReactivated)) {
                                reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm);
                            }
                            return true
                        }
                    }
                }

                function initComponent(vnode, insertedVnodeQueue) {
                    if (isDef(vnode.data.pendingInsert)) {
                        insertedVnodeQueue.push.apply(insertedVnodeQueue, vnode.data.pendingInsert);
                        vnode.data.pendingInsert = null;
                    }
                    vnode.elm = vnode.componentInstance.$el;
                    if (isPatchable(vnode)) {
                        invokeCreateHooks(vnode, insertedVnodeQueue);
                        setScope(vnode);
                    } else {
                        // empty component root.
                        // skip all element-related modules except for ref (#3455)
                        registerRef(vnode);
                        // make sure to invoke the insert hook
                        insertedVnodeQueue.push(vnode);
                    }
                }

                function reactivateComponent(vnode, insertedVnodeQueue, parentElm, refElm) {
                    var i;
                    // hack for #4339: a reactivated component with inner transition
                    // does not trigger because the inner node's created hooks are not called
                    // again. It's not ideal to involve module-specific logic in here but
                    // there doesn't seem to be a better way to do it.
                    var innerNode = vnode;
                    while (innerNode.componentInstance) {
                        innerNode = innerNode.componentInstance._vnode;
                        if (isDef(i = innerNode.data) && isDef(i = i.transition)) {
                            for (i = 0; i < cbs.activate.length; ++i) {
                                cbs.activate[i](emptyNode, innerNode);
                            }
                            insertedVnodeQueue.push(innerNode);
                            break
                        }
                    }
                    // unlike a newly created component,
                    // a reactivated keep-alive component doesn't insert itself
                    insert(parentElm, vnode.elm, refElm);
                }

                function insert(parent, elm, ref$$1) {
                    if (isDef(parent)) {
                        if (isDef(ref$$1)) {
                            if (ref$$1.parentNode === parent) {
                                nodeOps.insertBefore(parent, elm, ref$$1);
                            }
                        } else {
                            nodeOps.appendChild(parent, elm);
                        }
                    }
                }

                function createChildren(vnode, children, insertedVnodeQueue) {
                    if (Array.isArray(children)) {
                        if (process.env.NODE_ENV !== 'production') {
                            checkDuplicateKeys(children);
                        }
                        for (var i = 0; i < children.length; ++i) {
                            createElm(children[i], insertedVnodeQueue, vnode.elm, null, true, children, i);
                        }
                    } else if (isPrimitive(vnode.text)) {
                        nodeOps.appendChild(vnode.elm, nodeOps.createTextNode(String(vnode.text)));
                    }
                }

                function isPatchable(vnode) {
                    while (vnode.componentInstance) {
                        vnode = vnode.componentInstance._vnode;
                    }
                    return isDef(vnode.tag)
                }

                function invokeCreateHooks(vnode, insertedVnodeQueue) {
                    for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                        cbs.create[i$1](emptyNode, vnode);
                    }
                    i = vnode.data.hook; // Reuse variable
                    if (isDef(i)) {
                        if (isDef(i.create)) {
                            i.create(emptyNode, vnode);
                        }
                        if (isDef(i.insert)) {
                            insertedVnodeQueue.push(vnode);
                        }
                    }
                }

                // set scope id attribute for scoped CSS.
                // this is implemented as a special case to avoid the overhead
                // of going through the normal attribute patching process.
                function setScope(vnode) {
                    var i;
                    if (isDef(i = vnode.fnScopeId)) {
                        nodeOps.setStyleScope(vnode.elm, i);
                    } else {
                        var ancestor = vnode;
                        while (ancestor) {
                            if (isDef(i = ancestor.context) && isDef(i = i.$options._scopeId)) {
                                nodeOps.setStyleScope(vnode.elm, i);
                            }
                            ancestor = ancestor.parent;
                        }
                    }
                    // for slot content they should also get the scopeId from the host instance.
                    if (isDef(i = activeInstance) &&
                        i !== vnode.context &&
                        i !== vnode.fnContext &&
                        isDef(i = i.$options._scopeId)
                    ) {
                        nodeOps.setStyleScope(vnode.elm, i);
                    }
                }

                function addVnodes(parentElm, refElm, vnodes, startIdx, endIdx, insertedVnodeQueue) {
                    for (; startIdx <= endIdx; ++startIdx) {
                        createElm(vnodes[startIdx], insertedVnodeQueue, parentElm, refElm, false, vnodes, startIdx);
                    }
                }

                function invokeDestroyHook(vnode) {
                    var i, j;
                    var data = vnode.data;
                    if (isDef(data)) {
                        if (isDef(i = data.hook) && isDef(i = i.destroy)) {
                            i(vnode);
                        }
                        for (i = 0; i < cbs.destroy.length; ++i) {
                            cbs.destroy[i](vnode);
                        }
                    }
                    if (isDef(i = vnode.children)) {
                        for (j = 0; j < vnode.children.length; ++j) {
                            invokeDestroyHook(vnode.children[j]);
                        }
                    }
                }

                function removeVnodes(parentElm, vnodes, startIdx, endIdx) {
                    for (; startIdx <= endIdx; ++startIdx) {
                        var ch = vnodes[startIdx];
                        if (isDef(ch)) {
                            if (isDef(ch.tag)) {
                                removeAndInvokeRemoveHook(ch);
                                invokeDestroyHook(ch);
                            } else { // Text node
                                removeNode(ch.elm);
                            }
                        }
                    }
                }

                function removeAndInvokeRemoveHook(vnode, rm) {
                    if (isDef(rm) || isDef(vnode.data)) {
                        var i;
                        var listeners = cbs.remove.length + 1;
                        if (isDef(rm)) {
                            // we have a recursively passed down rm callback
                            // increase the listeners count
                            rm.listeners += listeners;
                        } else {
                            // directly removing
                            rm = createRmCb(vnode.elm, listeners);
                        }
                        // recursively invoke hooks on child component root node
                        if (isDef(i = vnode.componentInstance) && isDef(i = i._vnode) && isDef(i.data)) {
                            removeAndInvokeRemoveHook(i, rm);
                        }
                        for (i = 0; i < cbs.remove.length; ++i) {
                            cbs.remove[i](vnode, rm);
                        }
                        if (isDef(i = vnode.data.hook) && isDef(i = i.remove)) {
                            i(vnode, rm);
                        } else {
                            rm();
                        }
                    } else {
                        removeNode(vnode.elm);
                    }
                }

                function updateChildren(parentElm, oldCh, newCh, insertedVnodeQueue, removeOnly) {
                    var oldStartIdx = 0;
                    var newStartIdx = 0;
                    var oldEndIdx = oldCh.length - 1;
                    var oldStartVnode = oldCh[0];
                    var oldEndVnode = oldCh[oldEndIdx];
                    var newEndIdx = newCh.length - 1;
                    var newStartVnode = newCh[0];
                    var newEndVnode = newCh[newEndIdx];
                    var oldKeyToIdx, idxInOld, vnodeToMove, refElm;

                    // removeOnly is a special flag used only by <transition-group>
                    // to ensure removed elements stay in correct relative positions
                    // during leaving transitions
                    var canMove = !removeOnly;

                    if (process.env.NODE_ENV !== 'production') {
                        checkDuplicateKeys(newCh);
                    }

                    while (oldStartIdx <= oldEndIdx && newStartIdx <= newEndIdx) {
                        if (isUndef(oldStartVnode)) {
                            oldStartVnode = oldCh[++oldStartIdx]; // Vnode has been moved left
                        } else if (isUndef(oldEndVnode)) {
                            oldEndVnode = oldCh[--oldEndIdx];
                        } else if (sameVnode(oldStartVnode, newStartVnode)) {
                            patchVnode(oldStartVnode, newStartVnode, insertedVnodeQueue);
                            oldStartVnode = oldCh[++oldStartIdx];
                            newStartVnode = newCh[++newStartIdx];
                        } else if (sameVnode(oldEndVnode, newEndVnode)) {
                            patchVnode(oldEndVnode, newEndVnode, insertedVnodeQueue);
                            oldEndVnode = oldCh[--oldEndIdx];
                            newEndVnode = newCh[--newEndIdx];
                        } else if (sameVnode(oldStartVnode, newEndVnode)) { // Vnode moved right
                            patchVnode(oldStartVnode, newEndVnode, insertedVnodeQueue);
                            canMove && nodeOps.insertBefore(parentElm, oldStartVnode.elm, nodeOps.nextSibling(oldEndVnode.elm));
                            oldStartVnode = oldCh[++oldStartIdx];
                            newEndVnode = newCh[--newEndIdx];
                        } else if (sameVnode(oldEndVnode, newStartVnode)) { // Vnode moved left
                            patchVnode(oldEndVnode, newStartVnode, insertedVnodeQueue);
                            canMove && nodeOps.insertBefore(parentElm, oldEndVnode.elm, oldStartVnode.elm);
                            oldEndVnode = oldCh[--oldEndIdx];
                            newStartVnode = newCh[++newStartIdx];
                        } else {
                            if (isUndef(oldKeyToIdx)) {
                                oldKeyToIdx = createKeyToOldIdx(oldCh, oldStartIdx, oldEndIdx);
                            }
                            idxInOld = isDef(newStartVnode.key)
                                ? oldKeyToIdx[newStartVnode.key]
                                : findIdxInOld(newStartVnode, oldCh, oldStartIdx, oldEndIdx);
                            if (isUndef(idxInOld)) { // New element
                                createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
                            } else {
                                vnodeToMove = oldCh[idxInOld];
                                if (sameVnode(vnodeToMove, newStartVnode)) {
                                    patchVnode(vnodeToMove, newStartVnode, insertedVnodeQueue);
                                    oldCh[idxInOld] = undefined;
                                    canMove && nodeOps.insertBefore(parentElm, vnodeToMove.elm, oldStartVnode.elm);
                                } else {
                                    // same key but different element. treat as new element
                                    createElm(newStartVnode, insertedVnodeQueue, parentElm, oldStartVnode.elm, false, newCh, newStartIdx);
                                }
                            }
                            newStartVnode = newCh[++newStartIdx];
                        }
                    }
                    if (oldStartIdx > oldEndIdx) {
                        refElm = isUndef(newCh[newEndIdx + 1]) ? null : newCh[newEndIdx + 1].elm;
                        addVnodes(parentElm, refElm, newCh, newStartIdx, newEndIdx, insertedVnodeQueue);
                    } else if (newStartIdx > newEndIdx) {
                        removeVnodes(parentElm, oldCh, oldStartIdx, oldEndIdx);
                    }
                }

                function checkDuplicateKeys(children) {
                    var seenKeys = {};
                    for (var i = 0; i < children.length; i++) {
                        var vnode = children[i];
                        var key = vnode.key;
                        if (isDef(key)) {
                            if (seenKeys[key]) {
                                warn(
                                    ("Duplicate keys detected: '" + key + "'. This may cause an update error."),
                                    vnode.context
                                );
                            } else {
                                seenKeys[key] = true;
                            }
                        }
                    }
                }

                function findIdxInOld(node, oldCh, start, end) {
                    for (var i = start; i < end; i++) {
                        var c = oldCh[i];
                        if (isDef(c) && sameVnode(node, c)) {
                            return i
                        }
                    }
                }

                function patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly) {
                    if (oldVnode === vnode) {
                        return
                    }

                    var elm = vnode.elm = oldVnode.elm;

                    if (isTrue(oldVnode.isAsyncPlaceholder)) {
                        if (isDef(vnode.asyncFactory.resolved)) {
                            hydrate(oldVnode.elm, vnode, insertedVnodeQueue);
                        } else {
                            vnode.isAsyncPlaceholder = true;
                        }
                        return
                    }

                    // reuse element for static trees.
                    // note we only do this if the vnode is cloned -
                    // if the new node is not cloned it means the render functions have been
                    // reset by the hot-reload-api and we need to do a proper re-render.
                    if (isTrue(vnode.isStatic) &&
                        isTrue(oldVnode.isStatic) &&
                        vnode.key === oldVnode.key &&
                        (isTrue(vnode.isCloned) || isTrue(vnode.isOnce))
                    ) {
                        vnode.componentInstance = oldVnode.componentInstance;
                        return
                    }

                    var i;
                    var data = vnode.data;
                    if (isDef(data) && isDef(i = data.hook) && isDef(i = i.prepatch)) {
                        i(oldVnode, vnode);
                    }

                    var oldCh = oldVnode.children;
                    var ch = vnode.children;
                    if (isDef(data) && isPatchable(vnode)) {
                        for (i = 0; i < cbs.update.length; ++i) {
                            cbs.update[i](oldVnode, vnode);
                        }
                        if (isDef(i = data.hook) && isDef(i = i.update)) {
                            i(oldVnode, vnode);
                        }
                    }
                    if (isUndef(vnode.text)) {
                        if (isDef(oldCh) && isDef(ch)) {
                            if (oldCh !== ch) {
                                updateChildren(elm, oldCh, ch, insertedVnodeQueue, removeOnly);
                            }
                        } else if (isDef(ch)) {
                            if (isDef(oldVnode.text)) {
                                nodeOps.setTextContent(elm, '');
                            }
                            addVnodes(elm, null, ch, 0, ch.length - 1, insertedVnodeQueue);
                        } else if (isDef(oldCh)) {
                            removeVnodes(elm, oldCh, 0, oldCh.length - 1);
                        } else if (isDef(oldVnode.text)) {
                            nodeOps.setTextContent(elm, '');
                        }
                    } else if (oldVnode.text !== vnode.text) {
                        nodeOps.setTextContent(elm, vnode.text);
                    }
                    if (isDef(data)) {
                        if (isDef(i = data.hook) && isDef(i = i.postpatch)) {
                            i(oldVnode, vnode);
                        }
                    }
                }

                function invokeInsertHook(vnode, queue, initial) {
                    // delay insert hooks for component root nodes, invoke them after the
                    // element is really inserted
                    if (isTrue(initial) && isDef(vnode.parent)) {
                        vnode.parent.data.pendingInsert = queue;
                    } else {
                        for (var i = 0; i < queue.length; ++i) {
                            queue[i].data.hook.insert(queue[i]);
                        }
                    }
                }

                var hydrationBailed = false;
                // list of modules that can skip create hook during hydration because they
                // are already rendered on the client or has no need for initialization
                // Note: style is excluded because it relies on initial clone for future
                // deep updates (#7063).
                var isRenderedModule = makeMap('attrs,class,staticClass,staticStyle,key');

                // Note: this is a browser-only function so we can assume elms are DOM nodes.
                function hydrate(elm, vnode, insertedVnodeQueue, inVPre) {
                    var i;
                    var tag = vnode.tag;
                    var data = vnode.data;
                    var children = vnode.children;
                    inVPre = inVPre || (data && data.pre);
                    vnode.elm = elm;

                    if (isTrue(vnode.isComment) && isDef(vnode.asyncFactory)) {
                        vnode.isAsyncPlaceholder = true;
                        return true
                    }
                    // assert node match
                    if (process.env.NODE_ENV !== 'production') {
                        if (!assertNodeMatch(elm, vnode, inVPre)) {
                            return false
                        }
                    }
                    if (isDef(data)) {
                        if (isDef(i = data.hook) && isDef(i = i.init)) {
                            i(vnode, true /* hydrating */);
                        }
                        if (isDef(i = vnode.componentInstance)) {
                            // child component. it should have hydrated its own tree.
                            initComponent(vnode, insertedVnodeQueue);
                            return true
                        }
                    }
                    if (isDef(tag)) {
                        if (isDef(children)) {
                            // empty element, allow client to pick up and populate children
                            if (!elm.hasChildNodes()) {
                                createChildren(vnode, children, insertedVnodeQueue);
                            } else {
                                // v-html and domProps: innerHTML
                                if (isDef(i = data) && isDef(i = i.domProps) && isDef(i = i.innerHTML)) {
                                    if (i !== elm.innerHTML) {
                                        /* istanbul ignore if */
                                        if (process.env.NODE_ENV !== 'production' &&
                                            typeof console !== 'undefined' &&
                                            !hydrationBailed
                                        ) {
                                            hydrationBailed = true;
                                            console.warn('Parent: ', elm);
                                            console.warn('server innerHTML: ', i);
                                            console.warn('client innerHTML: ', elm.innerHTML);
                                        }
                                        return false
                                    }
                                } else {
                                    // iterate and compare children lists
                                    var childrenMatch = true;
                                    var childNode = elm.firstChild;
                                    for (var i$1 = 0; i$1 < children.length; i$1++) {
                                        if (!childNode || !hydrate(childNode, children[i$1], insertedVnodeQueue, inVPre)) {
                                            childrenMatch = false;
                                            break
                                        }
                                        childNode = childNode.nextSibling;
                                    }
                                    // if childNode is not null, it means the actual childNodes list is
                                    // longer than the virtual children list.
                                    if (!childrenMatch || childNode) {
                                        /* istanbul ignore if */
                                        if (process.env.NODE_ENV !== 'production' &&
                                            typeof console !== 'undefined' &&
                                            !hydrationBailed
                                        ) {
                                            hydrationBailed = true;
                                            console.warn('Parent: ', elm);
                                            console.warn('Mismatching childNodes vs. VNodes: ', elm.childNodes, children);
                                        }
                                        return false
                                    }
                                }
                            }
                        }
                        if (isDef(data)) {
                            var fullInvoke = false;
                            for (var key in data) {
                                if (!isRenderedModule(key)) {
                                    fullInvoke = true;
                                    invokeCreateHooks(vnode, insertedVnodeQueue);
                                    break
                                }
                            }
                            if (!fullInvoke && data['class']) {
                                // ensure collecting deps for deep class bindings for future updates
                                traverse(data['class']);
                            }
                        }
                    } else if (elm.data !== vnode.text) {
                        elm.data = vnode.text;
                    }
                    return true
                }

                function assertNodeMatch(node, vnode, inVPre) {
                    if (isDef(vnode.tag)) {
                        return vnode.tag.indexOf('vue-component') === 0 || (
                            !isUnknownElement$$1(vnode, inVPre) &&
                            vnode.tag.toLowerCase() === (node.tagName && node.tagName.toLowerCase())
                        )
                    } else {
                        return node.nodeType === (vnode.isComment ? 8 : 3)
                    }
                }

                return function patch(oldVnode, vnode, hydrating, removeOnly, parentElm, refElm) {
                    if (isUndef(vnode)) {
                        if (isDef(oldVnode)) {
                            invokeDestroyHook(oldVnode);
                        }
                        return
                    }

                    var isInitialPatch = false;
                    var insertedVnodeQueue = [];

                    if (isUndef(oldVnode)) {
                        // empty mount (likely as component), create new root element
                        isInitialPatch = true;
                        createElm(vnode, insertedVnodeQueue, parentElm, refElm);
                    } else {
                        var isRealElement = isDef(oldVnode.nodeType);
                        if (!isRealElement && sameVnode(oldVnode, vnode)) {
                            // patch existing root node
                            patchVnode(oldVnode, vnode, insertedVnodeQueue, removeOnly);
                        } else {
                            if (isRealElement) {
                                // mounting to a real element
                                // check if this is server-rendered content and if we can perform
                                // a successful hydration.
                                if (oldVnode.nodeType === 1 && oldVnode.hasAttribute(SSR_ATTR)) {
                                    oldVnode.removeAttribute(SSR_ATTR);
                                    hydrating = true;
                                }
                                if (isTrue(hydrating)) {
                                    if (hydrate(oldVnode, vnode, insertedVnodeQueue)) {
                                        invokeInsertHook(vnode, insertedVnodeQueue, true);
                                        return oldVnode
                                    } else if (process.env.NODE_ENV !== 'production') {
                                        warn(
                                            'The client-side rendered virtual DOM tree is not matching ' +
                                            'server-rendered content. This is likely caused by incorrect ' +
                                            'HTML markup, for example nesting block-level elements inside ' +
                                            '<p>, or missing <tbody>. Bailing hydration and performing ' +
                                            'full client-side render.'
                                        );
                                    }
                                }
                                // either not server-rendered, or hydration failed.
                                // create an empty node and replace it
                                oldVnode = emptyNodeAt(oldVnode);
                            }

                            // replacing existing element
                            var oldElm = oldVnode.elm;
                            var parentElm$1 = nodeOps.parentNode(oldElm);

                            // create new node
                            createElm(
                                vnode,
                                insertedVnodeQueue,
                                // extremely rare edge case: do not insert if old element is in a
                                // leaving transition. Only happens when combining transition +
                                // keep-alive + HOCs. (#4590)
                                oldElm._leaveCb ? null : parentElm$1,
                                nodeOps.nextSibling(oldElm)
                            );

                            // update parent placeholder node element, recursively
                            if (isDef(vnode.parent)) {
                                var ancestor = vnode.parent;
                                var patchable = isPatchable(vnode);
                                while (ancestor) {
                                    for (var i = 0; i < cbs.destroy.length; ++i) {
                                        cbs.destroy[i](ancestor);
                                    }
                                    ancestor.elm = vnode.elm;
                                    if (patchable) {
                                        for (var i$1 = 0; i$1 < cbs.create.length; ++i$1) {
                                            cbs.create[i$1](emptyNode, ancestor);
                                        }
                                        // #6513
                                        // invoke insert hooks that may have been merged by create hooks.
                                        // e.g. for directives that uses the "inserted" hook.
                                        var insert = ancestor.data.hook.insert;
                                        if (insert.merged) {
                                            // start at index 1 to avoid re-invoking component mounted hook
                                            for (var i$2 = 1; i$2 < insert.fns.length; i$2++) {
                                                insert.fns[i$2]();
                                            }
                                        }
                                    } else {
                                        registerRef(ancestor);
                                    }
                                    ancestor = ancestor.parent;
                                }
                            }

                            // destroy old node
                            if (isDef(parentElm$1)) {
                                removeVnodes(parentElm$1, [oldVnode], 0, 0);
                            } else if (isDef(oldVnode.tag)) {
                                invokeDestroyHook(oldVnode);
                            }
                        }
                    }

                    invokeInsertHook(vnode, insertedVnodeQueue, isInitialPatch);
                    return vnode.elm
                }
            }

            /*  */

            var directives = {
                create: updateDirectives,
                update: updateDirectives,
                destroy: function unbindDirectives(vnode) {
                    updateDirectives(vnode, emptyNode);
                }
            }

            function updateDirectives(oldVnode, vnode) {
                if (oldVnode.data.directives || vnode.data.directives) {
                    _update(oldVnode, vnode);
                }
            }

            function _update(oldVnode, vnode) {
                var isCreate = oldVnode === emptyNode;
                var isDestroy = vnode === emptyNode;
                var oldDirs = normalizeDirectives$1(oldVnode.data.directives, oldVnode.context);
                var newDirs = normalizeDirectives$1(vnode.data.directives, vnode.context);

                var dirsWithInsert = [];
                var dirsWithPostpatch = [];

                var key, oldDir, dir;
                for (key in newDirs) {
                    oldDir = oldDirs[key];
                    dir = newDirs[key];
                    if (!oldDir) {
                        // new directive, bind
                        callHook$1(dir, 'bind', vnode, oldVnode);
                        if (dir.def && dir.def.inserted) {
                            dirsWithInsert.push(dir);
                        }
                    } else {
                        // existing directive, update
                        dir.oldValue = oldDir.value;
                        callHook$1(dir, 'update', vnode, oldVnode);
                        if (dir.def && dir.def.componentUpdated) {
                            dirsWithPostpatch.push(dir);
                        }
                    }
                }

                if (dirsWithInsert.length) {
                    var callInsert = function () {
                        for (var i = 0; i < dirsWithInsert.length; i++) {
                            callHook$1(dirsWithInsert[i], 'inserted', vnode, oldVnode);
                        }
                    };
                    if (isCreate) {
                        mergeVNodeHook(vnode, 'insert', callInsert);
                    } else {
                        callInsert();
                    }
                }

                if (dirsWithPostpatch.length) {
                    mergeVNodeHook(vnode, 'postpatch', function () {
                        for (var i = 0; i < dirsWithPostpatch.length; i++) {
                            callHook$1(dirsWithPostpatch[i], 'componentUpdated', vnode, oldVnode);
                        }
                    });
                }

                if (!isCreate) {
                    for (key in oldDirs) {
                        if (!newDirs[key]) {
                            // no longer present, unbind
                            callHook$1(oldDirs[key], 'unbind', oldVnode, oldVnode, isDestroy);
                        }
                    }
                }
            }

            var emptyModifiers = Object.create(null);

            function normalizeDirectives$1(
                dirs,
                vm
            ) {
                var res = Object.create(null);
                if (!dirs) {
                    // $flow-disable-line
                    return res
                }
                var i, dir;
                for (i = 0; i < dirs.length; i++) {
                    dir = dirs[i];
                    if (!dir.modifiers) {
                        // $flow-disable-line
                        dir.modifiers = emptyModifiers;
                    }
                    res[getRawDirName(dir)] = dir;
                    dir.def = resolveAsset(vm.$options, 'directives', dir.name, true);
                }
                // $flow-disable-line
                return res
            }

            function getRawDirName(dir) {
                return dir.rawName || ((dir.name) + "." + (Object.keys(dir.modifiers || {}).join('.')))
            }

            function callHook$1(dir, hook, vnode, oldVnode, isDestroy) {
                var fn = dir.def && dir.def[hook];
                if (fn) {
                    try {
                        fn(vnode.elm, dir, vnode, oldVnode, isDestroy);
                    } catch (e) {
                        handleError(e, vnode.context, ("directive " + (dir.name) + " " + hook + " hook"));
                    }
                }
            }

            var baseModules = [
                ref,
                directives
            ]

            /*  */

            function updateAttrs(oldVnode, vnode) {
                var opts = vnode.componentOptions;
                if (isDef(opts) && opts.Ctor.options.inheritAttrs === false) {
                    return
                }
                if (isUndef(oldVnode.data.attrs) && isUndef(vnode.data.attrs)) {
                    return
                }
                var key, cur, old;
                var elm = vnode.elm;
                var oldAttrs = oldVnode.data.attrs || {};
                var attrs = vnode.data.attrs || {};
                // clone observed objects, as the user probably wants to mutate it
                if (isDef(attrs.__ob__)) {
                    attrs = vnode.data.attrs = extend({}, attrs);
                }

                for (key in attrs) {
                    cur = attrs[key];
                    old = oldAttrs[key];
                    if (old !== cur) {
                        setAttr(elm, key, cur);
                    }
                }
                // #4391: in IE9, setting type can reset value for input[type=radio]
                // #6666: IE/Edge forces progress value down to 1 before setting a max
                /* istanbul ignore if */
                if ((isIE || isEdge) && attrs.value !== oldAttrs.value) {
                    setAttr(elm, 'value', attrs.value);
                }
                for (key in oldAttrs) {
                    if (isUndef(attrs[key])) {
                        if (isXlink(key)) {
                            elm.removeAttributeNS(xlinkNS, getXlinkProp(key));
                        } else if (!isEnumeratedAttr(key)) {
                            elm.removeAttribute(key);
                        }
                    }
                }
            }

            function setAttr(el, key, value) {
                if (el.tagName.indexOf('-') > -1) {
                    baseSetAttr(el, key, value);
                } else if (isBooleanAttr(key)) {
                    // set attribute for blank value
                    // e.g. <option disabled>Select one</option>
                    if (isFalsyAttrValue(value)) {
                        el.removeAttribute(key);
                    } else {
                        // technically allowfullscreen is a boolean attribute for <iframe>,
                        // but Flash expects a value of "true" when used on <embed> tag
                        value = key === 'allowfullscreen' && el.tagName === 'EMBED'
                            ? 'true'
                            : key;
                        el.setAttribute(key, value);
                    }
                } else if (isEnumeratedAttr(key)) {
                    el.setAttribute(key, isFalsyAttrValue(value) || value === 'false' ? 'false' : 'true');
                } else if (isXlink(key)) {
                    if (isFalsyAttrValue(value)) {
                        el.removeAttributeNS(xlinkNS, getXlinkProp(key));
                    } else {
                        el.setAttributeNS(xlinkNS, key, value);
                    }
                } else {
                    baseSetAttr(el, key, value);
                }
            }

            function baseSetAttr(el, key, value) {
                if (isFalsyAttrValue(value)) {
                    el.removeAttribute(key);
                } else {
                    // #7138: IE10 & 11 fires input event when setting placeholder on
                    // <textarea>... block the first input event and remove the blocker
                    // immediately.
                    /* istanbul ignore if */
                    if (
                        isIE && !isIE9 &&
                        el.tagName === 'TEXTAREA' &&
                        key === 'placeholder' && !el.__ieph
                    ) {
                        var blocker = function (e) {
                            e.stopImmediatePropagation();
                            el.removeEventListener('input', blocker);
                        };
                        el.addEventListener('input', blocker);
                        // $flow-disable-line
                        el.__ieph = true; /* IE placeholder patched */
                    }
                    el.setAttribute(key, value);
                }
            }

            var attrs = {
                create: updateAttrs,
                update: updateAttrs
            }

            /*  */

            function updateClass(oldVnode, vnode) {
                var el = vnode.elm;
                var data = vnode.data;
                var oldData = oldVnode.data;
                if (
                    isUndef(data.staticClass) &&
                    isUndef(data.class) && (
                        isUndef(oldData) || (
                            isUndef(oldData.staticClass) &&
                            isUndef(oldData.class)
                        )
                    )
                ) {
                    return
                }

                var cls = genClassForVnode(vnode);

                // handle transition classes
                var transitionClass = el._transitionClasses;
                if (isDef(transitionClass)) {
                    cls = concat(cls, stringifyClass(transitionClass));
                }

                // set the class
                if (cls !== el._prevClass) {
                    el.setAttribute('class', cls);
                    el._prevClass = cls;
                }
            }

            var klass = {
                create: updateClass,
                update: updateClass
            }

            /*  */

            var validDivisionCharRE = /[\w).+\-_$\]]/;

            function parseFilters(exp) {
                var inSingle = false;
                var inDouble = false;
                var inTemplateString = false;
                var inRegex = false;
                var curly = 0;
                var square = 0;
                var paren = 0;
                var lastFilterIndex = 0;
                var c, prev, i, expression, filters;

                for (i = 0; i < exp.length; i++) {
                    prev = c;
                    c = exp.charCodeAt(i);
                    if (inSingle) {
                        if (c === 0x27 && prev !== 0x5C) {
                            inSingle = false;
                        }
                    } else if (inDouble) {
                        if (c === 0x22 && prev !== 0x5C) {
                            inDouble = false;
                        }
                    } else if (inTemplateString) {
                        if (c === 0x60 && prev !== 0x5C) {
                            inTemplateString = false;
                        }
                    } else if (inRegex) {
                        if (c === 0x2f && prev !== 0x5C) {
                            inRegex = false;
                        }
                    } else if (
                        c === 0x7C && // pipe
                        exp.charCodeAt(i + 1) !== 0x7C &&
                        exp.charCodeAt(i - 1) !== 0x7C &&
                        !curly && !square && !paren
                    ) {
                        if (expression === undefined) {
                            // first filter, end of expression
                            lastFilterIndex = i + 1;
                            expression = exp.slice(0, i).trim();
                        } else {
                            pushFilter();
                        }
                    } else {
                        switch (c) {
                            case 0x22:
                                inDouble = true;
                                break         // "
                            case 0x27:
                                inSingle = true;
                                break         // '
                            case 0x60:
                                inTemplateString = true;
                                break // `
                            case 0x28:
                                paren++;
                                break                 // (
                            case 0x29:
                                paren--;
                                break                 // )
                            case 0x5B:
                                square++;
                                break                // [
                            case 0x5D:
                                square--;
                                break                // ]
                            case 0x7B:
                                curly++;
                                break                 // {
                            case 0x7D:
                                curly--;
                                break                 // }
                        }
                        if (c === 0x2f) { // /
                            var j = i - 1;
                            var p = (void 0);
                            // find first non-whitespace prev char
                            for (; j >= 0; j--) {
                                p = exp.charAt(j);
                                if (p !== ' ') {
                                    break
                                }
                            }
                            if (!p || !validDivisionCharRE.test(p)) {
                                inRegex = true;
                            }
                        }
                    }
                }

                if (expression === undefined) {
                    expression = exp.slice(0, i).trim();
                } else if (lastFilterIndex !== 0) {
                    pushFilter();
                }

                function pushFilter() {
                    (filters || (filters = [])).push(exp.slice(lastFilterIndex, i).trim());
                    lastFilterIndex = i + 1;
                }

                if (filters) {
                    for (i = 0; i < filters.length; i++) {
                        expression = wrapFilter(expression, filters[i]);
                    }
                }

                return expression
            }

            function wrapFilter(exp, filter) {
                var i = filter.indexOf('(');
                if (i < 0) {
                    // _f: resolveFilter
                    return ("_f(\"" + filter + "\")(" + exp + ")")
                } else {
                    var name = filter.slice(0, i);
                    var args = filter.slice(i + 1);
                    return ("_f(\"" + name + "\")(" + exp + (args !== ')' ? ',' + args : args))
                }
            }

            /*  */

            function baseWarn(msg) {
                console.error(("[Vue compiler]: " + msg));
            }

            function pluckModuleFunction(
                modules,
                key
            ) {
                return modules
                    ? modules.map(function (m) {
                        return m[key];
                    }).filter(function (_) {
                        return _;
                    })
                    : []
            }

            function addProp(el, name, value) {
                (el.props || (el.props = [])).push({name: name, value: value});
                el.plain = false;
            }

            function addAttr(el, name, value) {
                (el.attrs || (el.attrs = [])).push({name: name, value: value});
                el.plain = false;
            }

// add a raw attr (use this in preTransforms)
            function addRawAttr(el, name, value) {
                el.attrsMap[name] = value;
                el.attrsList.push({name: name, value: value});
            }

            function addDirective(
                el,
                name,
                rawName,
                value,
                arg,
                modifiers
            ) {
                (el.directives || (el.directives = [])).push({
                    name: name,
                    rawName: rawName,
                    value: value,
                    arg: arg,
                    modifiers: modifiers
                });
                el.plain = false;
            }

            function addHandler(
                el,
                name,
                value,
                modifiers,
                important,
                warn
            ) {
                modifiers = modifiers || emptyObject;
                // warn prevent and passive modifier
                /* istanbul ignore if */
                if (
                    process.env.NODE_ENV !== 'production' && warn &&
                    modifiers.prevent && modifiers.passive
                ) {
                    warn(
                        'passive and prevent can\'t be used together. ' +
                        'Passive handler can\'t prevent default event.'
                    );
                }

                // check capture modifier
                if (modifiers.capture) {
                    delete modifiers.capture;
                    name = '!' + name; // mark the event as captured
                }
                if (modifiers.once) {
                    delete modifiers.once;
                    name = '~' + name; // mark the event as once
                }
                /* istanbul ignore if */
                if (modifiers.passive) {
                    delete modifiers.passive;
                    name = '&' + name; // mark the event as passive
                }

                // normalize click.right and click.middle since they don't actually fire
                // this is technically browser-specific, but at least for now browsers are
                // the only target envs that have right/middle clicks.
                if (name === 'click') {
                    if (modifiers.right) {
                        name = 'contextmenu';
                        delete modifiers.right;
                    } else if (modifiers.middle) {
                        name = 'mouseup';
                    }
                }

                var events;
                if (modifiers.native) {
                    delete modifiers.native;
                    events = el.nativeEvents || (el.nativeEvents = {});
                } else {
                    events = el.events || (el.events = {});
                }

                var newHandler = {
                    value: value.trim()
                };
                if (modifiers !== emptyObject) {
                    newHandler.modifiers = modifiers;
                }

                var handlers = events[name];
                /* istanbul ignore if */
                if (Array.isArray(handlers)) {
                    important ? handlers.unshift(newHandler) : handlers.push(newHandler);
                } else if (handlers) {
                    events[name] = important ? [newHandler, handlers] : [handlers, newHandler];
                } else {
                    events[name] = newHandler;
                }

                el.plain = false;
            }

            function getBindingAttr(
                el,
                name,
                getStatic
            ) {
                var dynamicValue =
                    getAndRemoveAttr(el, ':' + name) ||
                    getAndRemoveAttr(el, 'v-bind:' + name);
                if (dynamicValue != null) {
                    return parseFilters(dynamicValue)
                } else if (getStatic !== false) {
                    var staticValue = getAndRemoveAttr(el, name);
                    if (staticValue != null) {
                        return JSON.stringify(staticValue)
                    }
                }
            }

// note: this only removes the attr from the Array (attrsList) so that it
// doesn't get processed by processAttrs.
// By default it does NOT remove it from the map (attrsMap) because the map is
// needed during codegen.
            function getAndRemoveAttr(
                el,
                name,
                removeFromMap
            ) {
                var val;
                if ((val = el.attrsMap[name]) != null) {
                    var list = el.attrsList;
                    for (var i = 0, l = list.length; i < l; i++) {
                        if (list[i].name === name) {
                            list.splice(i, 1);
                            break
                        }
                    }
                }
                if (removeFromMap) {
                    delete el.attrsMap[name];
                }
                return val
            }

            /*  */

            /**
             * Cross-platform code generation for component v-model
             */
            function genComponentModel(
                el,
                value,
                modifiers
            ) {
                var ref = modifiers || {};
                var number = ref.number;
                var trim = ref.trim;

                var baseValueExpression = '$$v';
                var valueExpression = baseValueExpression;
                if (trim) {
                    valueExpression =
                        "(typeof " + baseValueExpression + " === 'string'" +
                        "? " + baseValueExpression + ".trim()" +
                        ": " + baseValueExpression + ")";
                }
                if (number) {
                    valueExpression = "_n(" + valueExpression + ")";
                }
                var assignment = genAssignmentCode(value, valueExpression);

                el.model = {
                    value: ("(" + value + ")"),
                    expression: ("\"" + value + "\""),
                    callback: ("function (" + baseValueExpression + ") {" + assignment + "}")
                };
            }

            /**
             * Cross-platform codegen helper for generating v-model value assignment code.
             */
            function genAssignmentCode(
                value,
                assignment
            ) {
                var res = parseModel(value);
                if (res.key === null) {
                    return (value + "=" + assignment)
                } else {
                    return ("$set(" + (res.exp) + ", " + (res.key) + ", " + assignment + ")")
                }
            }

            /**
             * Parse a v-model expression into a base path and a final key segment.
             * Handles both dot-path and possible square brackets.
             *
             * Possible cases:
             *
             * - test
             * - test[key]
             * - test[test1[key]]
             * - test["a"][key]
             * - xxx.test[a[a].test1[key]]
             * - test.xxx.a["asa"][test1[key]]
             *
             */

            var len;
            var str;
            var chr;
            var index$1;
            var expressionPos;
            var expressionEndPos;


            function parseModel(val) {
                // Fix https://github.com/vuejs/vue/pull/7730
                // allow v-model="obj.val " (trailing whitespace)
                val = val.trim();
                len = val.length;

                if (val.indexOf('[') < 0 || val.lastIndexOf(']') < len - 1) {
                    index$1 = val.lastIndexOf('.');
                    if (index$1 > -1) {
                        return {
                            exp: val.slice(0, index$1),
                            key: '"' + val.slice(index$1 + 1) + '"'
                        }
                    } else {
                        return {
                            exp: val,
                            key: null
                        }
                    }
                }

                str = val;
                index$1 = expressionPos = expressionEndPos = 0;

                while (!eof()) {
                    chr = next();
                    /* istanbul ignore if */
                    if (isStringStart(chr)) {
                        parseString(chr);
                    } else if (chr === 0x5B) {
                        parseBracket(chr);
                    }
                }

                return {
                    exp: val.slice(0, expressionPos),
                    key: val.slice(expressionPos + 1, expressionEndPos)
                }
            }

            function next() {
                return str.charCodeAt(++index$1)
            }

            function eof() {
                return index$1 >= len
            }

            function isStringStart(chr) {
                return chr === 0x22 || chr === 0x27
            }

            function parseBracket(chr) {
                var inBracket = 1;
                expressionPos = index$1;
                while (!eof()) {
                    chr = next();
                    if (isStringStart(chr)) {
                        parseString(chr);
                        continue
                    }
                    if (chr === 0x5B) {
                        inBracket++;
                    }
                    if (chr === 0x5D) {
                        inBracket--;
                    }
                    if (inBracket === 0) {
                        expressionEndPos = index$1;
                        break
                    }
                }
            }

            function parseString(chr) {
                var stringQuote = chr;
                while (!eof()) {
                    chr = next();
                    if (chr === stringQuote) {
                        break
                    }
                }
            }

            /*  */

            var warn$1;

// in some cases, the event used has to be determined at runtime
// so we used some reserved tokens during compile.
            var RANGE_TOKEN = '__r';
            var CHECKBOX_RADIO_TOKEN = '__c';

            function model(
                el,
                dir,
                _warn
            ) {
                warn$1 = _warn;
                var value = dir.value;
                var modifiers = dir.modifiers;
                var tag = el.tag;
                var type = el.attrsMap.type;

                if (process.env.NODE_ENV !== 'production') {
                    // inputs with type="file" are read only and setting the input's
                    // value will throw an error.
                    if (tag === 'input' && type === 'file') {
                        warn$1(
                            "<" + (el.tag) + " v-model=\"" + value + "\" type=\"file\">:\n" +
                            "File inputs are read only. Use a v-on:change listener instead."
                        );
                    }
                }

                if (el.component) {
                    genComponentModel(el, value, modifiers);
                    // component v-model doesn't need extra runtime
                    return false
                } else if (tag === 'select') {
                    genSelect(el, value, modifiers);
                } else if (tag === 'input' && type === 'checkbox') {
                    genCheckboxModel(el, value, modifiers);
                } else if (tag === 'input' && type === 'radio') {
                    genRadioModel(el, value, modifiers);
                } else if (tag === 'input' || tag === 'textarea') {
                    genDefaultModel(el, value, modifiers);
                } else if (!config.isReservedTag(tag)) {
                    genComponentModel(el, value, modifiers);
                    // component v-model doesn't need extra runtime
                    return false
                } else if (process.env.NODE_ENV !== 'production') {
                    warn$1(
                        "<" + (el.tag) + " v-model=\"" + value + "\">: " +
                        "v-model is not supported on this element type. " +
                        'If you are working with contenteditable, it\'s recommended to ' +
                        'wrap a library dedicated for that purpose inside a custom component.'
                    );
                }

                // ensure runtime directive metadata
                return true
            }

            function genCheckboxModel(
                el,
                value,
                modifiers
            ) {
                var number = modifiers && modifiers.number;
                var valueBinding = getBindingAttr(el, 'value') || 'null';
                var trueValueBinding = getBindingAttr(el, 'true-value') || 'true';
                var falseValueBinding = getBindingAttr(el, 'false-value') || 'false';
                addProp(el, 'checked',
                    "Array.isArray(" + value + ")" +
                    "?_i(" + value + "," + valueBinding + ")>-1" + (
                        trueValueBinding === 'true'
                            ? (":(" + value + ")")
                            : (":_q(" + value + "," + trueValueBinding + ")")
                    )
                );
                addHandler(el, 'change',
                    "var $$a=" + value + "," +
                    '$$el=$event.target,' +
                    "$$c=$$el.checked?(" + trueValueBinding + "):(" + falseValueBinding + ");" +
                    'if(Array.isArray($$a)){' +
                    "var $$v=" + (number ? '_n(' + valueBinding + ')' : valueBinding) + "," +
                    '$$i=_i($$a,$$v);' +
                    "if($$el.checked){$$i<0&&(" + (genAssignmentCode(value, '$$a.concat([$$v])')) + ")}" +
                    "else{$$i>-1&&(" + (genAssignmentCode(value, '$$a.slice(0,$$i).concat($$a.slice($$i+1))')) + ")}" +
                    "}else{" + (genAssignmentCode(value, '$$c')) + "}",
                    null, true
                );
            }

            function genRadioModel(
                el,
                value,
                modifiers
            ) {
                var number = modifiers && modifiers.number;
                var valueBinding = getBindingAttr(el, 'value') || 'null';
                valueBinding = number ? ("_n(" + valueBinding + ")") : valueBinding;
                addProp(el, 'checked', ("_q(" + value + "," + valueBinding + ")"));
                addHandler(el, 'change', genAssignmentCode(value, valueBinding), null, true);
            }

            function genSelect(
                el,
                value,
                modifiers
            ) {
                var number = modifiers && modifiers.number;
                var selectedVal = "Array.prototype.filter" +
                    ".call($event.target.options,function(o){return o.selected})" +
                    ".map(function(o){var val = \"_value\" in o ? o._value : o.value;" +
                    "return " + (number ? '_n(val)' : 'val') + "})";

                var assignment = '$event.target.multiple ? $$selectedVal : $$selectedVal[0]';
                var code = "var $$selectedVal = " + selectedVal + ";";
                code = code + " " + (genAssignmentCode(value, assignment));
                addHandler(el, 'change', code, null, true);
            }

            function genDefaultModel(
                el,
                value,
                modifiers
            ) {
                var type = el.attrsMap.type;

                // warn if v-bind:value conflicts with v-model
                // except for inputs with v-bind:type
                if (process.env.NODE_ENV !== 'production') {
                    var value$1 = el.attrsMap['v-bind:value'] || el.attrsMap[':value'];
                    var typeBinding = el.attrsMap['v-bind:type'] || el.attrsMap[':type'];
                    if (value$1 && !typeBinding) {
                        var binding = el.attrsMap['v-bind:value'] ? 'v-bind:value' : ':value';
                        warn$1(
                            binding + "=\"" + value$1 + "\" conflicts with v-model on the same element " +
                            'because the latter already expands to a value binding internally'
                        );
                    }
                }

                var ref = modifiers || {};
                var lazy = ref.lazy;
                var number = ref.number;
                var trim = ref.trim;
                var needCompositionGuard = !lazy && type !== 'range';
                var event = lazy
                    ? 'change'
                    : type === 'range'
                        ? RANGE_TOKEN
                        : 'input';

                var valueExpression = '$event.target.value';
                if (trim) {
                    valueExpression = "$event.target.value.trim()";
                }
                if (number) {
                    valueExpression = "_n(" + valueExpression + ")";
                }

                var code = genAssignmentCode(value, valueExpression);
                if (needCompositionGuard) {
                    code = "if($event.target.composing)return;" + code;
                }

                addProp(el, 'value', ("(" + value + ")"));
                addHandler(el, event, code, null, true);
                if (trim || number) {
                    addHandler(el, 'blur', '$forceUpdate()');
                }
            }

            /*  */

// normalize v-model event tokens that can only be determined at runtime.
// it's important to place the event as the first in the array because
// the whole point is ensuring the v-model callback gets called before
// user-attached handlers.
            function normalizeEvents(on) {
                /* istanbul ignore if */
                if (isDef(on[RANGE_TOKEN])) {
                    // IE input[type=range] only supports `change` event
                    var event = isIE ? 'change' : 'input';
                    on[event] = [].concat(on[RANGE_TOKEN], on[event] || []);
                    delete on[RANGE_TOKEN];
                }
                // This was originally intended to fix #4521 but no longer necessary
                // after 2.5. Keeping it for backwards compat with generated code from < 2.4
                /* istanbul ignore if */
                if (isDef(on[CHECKBOX_RADIO_TOKEN])) {
                    on.change = [].concat(on[CHECKBOX_RADIO_TOKEN], on.change || []);
                    delete on[CHECKBOX_RADIO_TOKEN];
                }
            }

            var target$1;

            function createOnceHandler(handler, event, capture) {
                var _target = target$1; // save current target element in closure
                return function onceHandler() {
                    var res = handler.apply(null, arguments);
                    if (res !== null) {
                        remove$2(event, onceHandler, capture, _target);
                    }
                }
            }

            function add$1(
                event,
                handler,
                once$$1,
                capture,
                passive
            ) {
                handler = withMacroTask(handler);
                if (once$$1) {
                    handler = createOnceHandler(handler, event, capture);
                }
                target$1.addEventListener(
                    event,
                    handler,
                    supportsPassive
                        ? {capture: capture, passive: passive}
                        : capture
                );
            }

            function remove$2(
                event,
                handler,
                capture,
                _target
            ) {
                (_target || target$1).removeEventListener(
                    event,
                    handler._withTask || handler,
                    capture
                );
            }

            function updateDOMListeners(oldVnode, vnode) {
                if (isUndef(oldVnode.data.on) && isUndef(vnode.data.on)) {
                    return
                }
                var on = vnode.data.on || {};
                var oldOn = oldVnode.data.on || {};
                target$1 = vnode.elm;
                normalizeEvents(on);
                updateListeners(on, oldOn, add$1, remove$2, vnode.context);
                target$1 = undefined;
            }

            var events = {
                create: updateDOMListeners,
                update: updateDOMListeners
            }

            /*  */

            function updateDOMProps(oldVnode, vnode) {
                if (isUndef(oldVnode.data.domProps) && isUndef(vnode.data.domProps)) {
                    return
                }
                var key, cur;
                var elm = vnode.elm;
                var oldProps = oldVnode.data.domProps || {};
                var props = vnode.data.domProps || {};
                // clone observed objects, as the user probably wants to mutate it
                if (isDef(props.__ob__)) {
                    props = vnode.data.domProps = extend({}, props);
                }

                for (key in oldProps) {
                    if (isUndef(props[key])) {
                        elm[key] = '';
                    }
                }
                for (key in props) {
                    cur = props[key];
                    // ignore children if the node has textContent or innerHTML,
                    // as these will throw away existing DOM nodes and cause removal errors
                    // on subsequent patches (#3360)
                    if (key === 'textContent' || key === 'innerHTML') {
                        if (vnode.children) {
                            vnode.children.length = 0;
                        }
                        if (cur === oldProps[key]) {
                            continue
                        }
                        // #6601 work around Chrome version <= 55 bug where single textNode
                        // replaced by innerHTML/textContent retains its parentNode property
                        if (elm.childNodes.length === 1) {
                            elm.removeChild(elm.childNodes[0]);
                        }
                    }

                    if (key === 'value') {
                        // store value as _value as well since
                        // non-string values will be stringified
                        elm._value = cur;
                        // avoid resetting cursor position when value is the same
                        var strCur = isUndef(cur) ? '' : String(cur);
                        if (shouldUpdateValue(elm, strCur)) {
                            elm.value = strCur;
                        }
                    } else {
                        elm[key] = cur;
                    }
                }
            }

// check platforms/web/util/attrs.js acceptValue


            function shouldUpdateValue(elm, checkVal) {
                return (!elm.composing && (
                    elm.tagName === 'OPTION' ||
                    isNotInFocusAndDirty(elm, checkVal) ||
                    isDirtyWithModifiers(elm, checkVal)
                ))
            }

            function isNotInFocusAndDirty(elm, checkVal) {
                // return true when textbox (.number and .trim) loses focus and its value is
                // not equal to the updated value
                var notInFocus = true;
                // #6157
                // work around IE bug when accessing document.activeElement in an iframe
                try {
                    notInFocus = document.activeElement !== elm;
                } catch (e) {
                }
                return notInFocus && elm.value !== checkVal
            }

            function isDirtyWithModifiers(elm, newVal) {
                var value = elm.value;
                var modifiers = elm._vModifiers; // injected by v-model runtime
                if (isDef(modifiers)) {
                    if (modifiers.lazy) {
                        // inputs with lazy should only be updated when not in focus
                        return false
                    }
                    if (modifiers.number) {
                        return toNumber(value) !== toNumber(newVal)
                    }
                    if (modifiers.trim) {
                        return value.trim() !== newVal.trim()
                    }
                }
                return value !== newVal
            }

            var domProps = {
                create: updateDOMProps,
                update: updateDOMProps
            }

            /*  */

            var parseStyleText = cached(function (cssText) {
                var res = {};
                var listDelimiter = /;(?![^(]*\))/g;
                var propertyDelimiter = /:(.+)/;
                cssText.split(listDelimiter).forEach(function (item) {
                    if (item) {
                        var tmp = item.split(propertyDelimiter);
                        tmp.length > 1 && (res[tmp[0].trim()] = tmp[1].trim());
                    }
                });
                return res
            });

// merge static and dynamic style data on the same vnode
            function normalizeStyleData(data) {
                var style = normalizeStyleBinding(data.style);
                // static style is pre-processed into an object during compilation
                // and is always a fresh object, so it's safe to merge into it
                return data.staticStyle
                    ? extend(data.staticStyle, style)
                    : style
            }

// normalize possible array / string values into Object
            function normalizeStyleBinding(bindingStyle) {
                if (Array.isArray(bindingStyle)) {
                    return toObject(bindingStyle)
                }
                if (typeof bindingStyle === 'string') {
                    return parseStyleText(bindingStyle)
                }
                return bindingStyle
            }

            /**
             * parent component style should be after child's
             * so that parent component's style could override it
             */
            function getStyle(vnode, checkChild) {
                var res = {};
                var styleData;

                if (checkChild) {
                    var childNode = vnode;
                    while (childNode.componentInstance) {
                        childNode = childNode.componentInstance._vnode;
                        if (
                            childNode && childNode.data &&
                            (styleData = normalizeStyleData(childNode.data))
                        ) {
                            extend(res, styleData);
                        }
                    }
                }

                if ((styleData = normalizeStyleData(vnode.data))) {
                    extend(res, styleData);
                }

                var parentNode = vnode;
                while ((parentNode = parentNode.parent)) {
                    if (parentNode.data && (styleData = normalizeStyleData(parentNode.data))) {
                        extend(res, styleData);
                    }
                }
                return res
            }

            /*  */

            var cssVarRE = /^--/;
            var importantRE = /\s*!important$/;
            var setProp = function (el, name, val) {
                /* istanbul ignore if */
                if (cssVarRE.test(name)) {
                    el.style.setProperty(name, val);
                } else if (importantRE.test(val)) {
                    el.style.setProperty(name, val.replace(importantRE, ''), 'important');
                } else {
                    var normalizedName = normalize(name);
                    if (Array.isArray(val)) {
                        // Support values array created by autoprefixer, e.g.
                        // {display: ["-webkit-box", "-ms-flexbox", "flex"]}
                        // Set them one by one, and the browser will only set those it can recognize
                        for (var i = 0, len = val.length; i < len; i++) {
                            el.style[normalizedName] = val[i];
                        }
                    } else {
                        el.style[normalizedName] = val;
                    }
                }
            };

            var vendorNames = ['Webkit', 'Moz', 'ms'];

            var emptyStyle;
            var normalize = cached(function (prop) {
                emptyStyle = emptyStyle || document.createElement('div').style;
                prop = camelize(prop);
                if (prop !== 'filter' && (prop in emptyStyle)) {
                    return prop
                }
                var capName = prop.charAt(0).toUpperCase() + prop.slice(1);
                for (var i = 0; i < vendorNames.length; i++) {
                    var name = vendorNames[i] + capName;
                    if (name in emptyStyle) {
                        return name
                    }
                }
            });

            function updateStyle(oldVnode, vnode) {
                var data = vnode.data;
                var oldData = oldVnode.data;

                if (isUndef(data.staticStyle) && isUndef(data.style) &&
                    isUndef(oldData.staticStyle) && isUndef(oldData.style)
                ) {
                    return
                }

                var cur, name;
                var el = vnode.elm;
                var oldStaticStyle = oldData.staticStyle;
                var oldStyleBinding = oldData.normalizedStyle || oldData.style || {};

                // if static style exists, stylebinding already merged into it when doing normalizeStyleData
                var oldStyle = oldStaticStyle || oldStyleBinding;

                var style = normalizeStyleBinding(vnode.data.style) || {};

                // store normalized style under a different key for next diff
                // make sure to clone it if it's reactive, since the user likely wants
                // to mutate it.
                vnode.data.normalizedStyle = isDef(style.__ob__)
                    ? extend({}, style)
                    : style;

                var newStyle = getStyle(vnode, true);

                for (name in oldStyle) {
                    if (isUndef(newStyle[name])) {
                        setProp(el, name, '');
                    }
                }
                for (name in newStyle) {
                    cur = newStyle[name];
                    if (cur !== oldStyle[name]) {
                        // ie9 setting to null has no effect, must use empty string
                        setProp(el, name, cur == null ? '' : cur);
                    }
                }
            }

            var style = {
                create: updateStyle,
                update: updateStyle
            }

            /*  */

            /**
             * Add class with compatibility for SVG since classList is not supported on
             * SVG elements in IE
             */
            function addClass(el, cls) {
                /* istanbul ignore if */
                if (!cls || !(cls = cls.trim())) {
                    return
                }

                /* istanbul ignore else */
                if (el.classList) {
                    if (cls.indexOf(' ') > -1) {
                        cls.split(/\s+/).forEach(function (c) {
                            return el.classList.add(c);
                        });
                    } else {
                        el.classList.add(cls);
                    }
                } else {
                    var cur = " " + (el.getAttribute('class') || '') + " ";
                    if (cur.indexOf(' ' + cls + ' ') < 0) {
                        el.setAttribute('class', (cur + cls).trim());
                    }
                }
            }

            /**
             * Remove class with compatibility for SVG since classList is not supported on
             * SVG elements in IE
             */
            function removeClass(el, cls) {
                /* istanbul ignore if */
                if (!cls || !(cls = cls.trim())) {
                    return
                }

                /* istanbul ignore else */
                if (el.classList) {
                    if (cls.indexOf(' ') > -1) {
                        cls.split(/\s+/).forEach(function (c) {
                            return el.classList.remove(c);
                        });
                    } else {
                        el.classList.remove(cls);
                    }
                    if (!el.classList.length) {
                        el.removeAttribute('class');
                    }
                } else {
                    var cur = " " + (el.getAttribute('class') || '') + " ";
                    var tar = ' ' + cls + ' ';
                    while (cur.indexOf(tar) >= 0) {
                        cur = cur.replace(tar, ' ');
                    }
                    cur = cur.trim();
                    if (cur) {
                        el.setAttribute('class', cur);
                    } else {
                        el.removeAttribute('class');
                    }
                }
            }

            /*  */

            function resolveTransition(def) {
                if (!def) {
                    return
                }
                /* istanbul ignore else */
                if (typeof def === 'object') {
                    var res = {};
                    if (def.css !== false) {
                        extend(res, autoCssTransition(def.name || 'v'));
                    }
                    extend(res, def);
                    return res
                } else if (typeof def === 'string') {
                    return autoCssTransition(def)
                }
            }

            var autoCssTransition = cached(function (name) {
                return {
                    enterClass: (name + "-enter"),
                    enterToClass: (name + "-enter-to"),
                    enterActiveClass: (name + "-enter-active"),
                    leaveClass: (name + "-leave"),
                    leaveToClass: (name + "-leave-to"),
                    leaveActiveClass: (name + "-leave-active")
                }
            });

            var hasTransition = inBrowser && !isIE9;
            var TRANSITION = 'transition';
            var ANIMATION = 'animation';

// Transition property/event sniffing
            var transitionProp = 'transition';
            var transitionEndEvent = 'transitionend';
            var animationProp = 'animation';
            var animationEndEvent = 'animationend';
            if (hasTransition) {
                /* istanbul ignore if */
                if (window.ontransitionend === undefined &&
                    window.onwebkittransitionend !== undefined
                ) {
                    transitionProp = 'WebkitTransition';
                    transitionEndEvent = 'webkitTransitionEnd';
                }
                if (window.onanimationend === undefined &&
                    window.onwebkitanimationend !== undefined
                ) {
                    animationProp = 'WebkitAnimation';
                    animationEndEvent = 'webkitAnimationEnd';
                }
            }

// binding to window is necessary to make hot reload work in IE in strict mode
            var raf = inBrowser
                ? window.requestAnimationFrame
                    ? window.requestAnimationFrame.bind(window)
                    : setTimeout
                : /* istanbul ignore next */ function (fn) {
                    return fn();
                };

            function nextFrame(fn) {
                raf(function () {
                    raf(fn);
                });
            }

            function addTransitionClass(el, cls) {
                var transitionClasses = el._transitionClasses || (el._transitionClasses = []);
                if (transitionClasses.indexOf(cls) < 0) {
                    transitionClasses.push(cls);
                    addClass(el, cls);
                }
            }

            function removeTransitionClass(el, cls) {
                if (el._transitionClasses) {
                    remove(el._transitionClasses, cls);
                }
                removeClass(el, cls);
            }

            function whenTransitionEnds(
                el,
                expectedType,
                cb
            ) {
                var ref = getTransitionInfo(el, expectedType);
                var type = ref.type;
                var timeout = ref.timeout;
                var propCount = ref.propCount;
                if (!type) {
                    return cb()
                }
                var event = type === TRANSITION ? transitionEndEvent : animationEndEvent;
                var ended = 0;
                var end = function () {
                    el.removeEventListener(event, onEnd);
                    cb();
                };
                var onEnd = function (e) {
                    if (e.target === el) {
                        if (++ended >= propCount) {
                            end();
                        }
                    }
                };
                setTimeout(function () {
                    if (ended < propCount) {
                        end();
                    }
                }, timeout + 1);
                el.addEventListener(event, onEnd);
            }

            var transformRE = /\b(transform|all)(,|$)/;

            function getTransitionInfo(el, expectedType) {
                var styles = window.getComputedStyle(el);
                var transitionDelays = styles[transitionProp + 'Delay'].split(', ');
                var transitionDurations = styles[transitionProp + 'Duration'].split(', ');
                var transitionTimeout = getTimeout(transitionDelays, transitionDurations);
                var animationDelays = styles[animationProp + 'Delay'].split(', ');
                var animationDurations = styles[animationProp + 'Duration'].split(', ');
                var animationTimeout = getTimeout(animationDelays, animationDurations);

                var type;
                var timeout = 0;
                var propCount = 0;
                /* istanbul ignore if */
                if (expectedType === TRANSITION) {
                    if (transitionTimeout > 0) {
                        type = TRANSITION;
                        timeout = transitionTimeout;
                        propCount = transitionDurations.length;
                    }
                } else if (expectedType === ANIMATION) {
                    if (animationTimeout > 0) {
                        type = ANIMATION;
                        timeout = animationTimeout;
                        propCount = animationDurations.length;
                    }
                } else {
                    timeout = Math.max(transitionTimeout, animationTimeout);
                    type = timeout > 0
                        ? transitionTimeout > animationTimeout
                            ? TRANSITION
                            : ANIMATION
                        : null;
                    propCount = type
                        ? type === TRANSITION
                            ? transitionDurations.length
                            : animationDurations.length
                        : 0;
                }
                var hasTransform =
                    type === TRANSITION &&
                    transformRE.test(styles[transitionProp + 'Property']);
                return {
                    type: type,
                    timeout: timeout,
                    propCount: propCount,
                    hasTransform: hasTransform
                }
            }

            function getTimeout(delays, durations) {
                /* istanbul ignore next */
                while (delays.length < durations.length) {
                    delays = delays.concat(delays);
                }

                return Math.max.apply(null, durations.map(function (d, i) {
                    return toMs(d) + toMs(delays[i])
                }))
            }

            function toMs(s) {
                return Number(s.slice(0, -1)) * 1000
            }

            /*  */

            function enter(vnode, toggleDisplay) {
                var el = vnode.elm;

                // call leave callback now
                if (isDef(el._leaveCb)) {
                    el._leaveCb.cancelled = true;
                    el._leaveCb();
                }

                var data = resolveTransition(vnode.data.transition);
                if (isUndef(data)) {
                    return
                }

                /* istanbul ignore if */
                if (isDef(el._enterCb) || el.nodeType !== 1) {
                    return
                }

                var css = data.css;
                var type = data.type;
                var enterClass = data.enterClass;
                var enterToClass = data.enterToClass;
                var enterActiveClass = data.enterActiveClass;
                var appearClass = data.appearClass;
                var appearToClass = data.appearToClass;
                var appearActiveClass = data.appearActiveClass;
                var beforeEnter = data.beforeEnter;
                var enter = data.enter;
                var afterEnter = data.afterEnter;
                var enterCancelled = data.enterCancelled;
                var beforeAppear = data.beforeAppear;
                var appear = data.appear;
                var afterAppear = data.afterAppear;
                var appearCancelled = data.appearCancelled;
                var duration = data.duration;

                // activeInstance will always be the <transition> component managing this
                // transition. One edge case to check is when the <transition> is placed
                // as the root node of a child component. In that case we need to check
                // <transition>'s parent for appear check.
                var context = activeInstance;
                var transitionNode = activeInstance.$vnode;
                while (transitionNode && transitionNode.parent) {
                    transitionNode = transitionNode.parent;
                    context = transitionNode.context;
                }

                var isAppear = !context._isMounted || !vnode.isRootInsert;

                if (isAppear && !appear && appear !== '') {
                    return
                }

                var startClass = isAppear && appearClass
                    ? appearClass
                    : enterClass;
                var activeClass = isAppear && appearActiveClass
                    ? appearActiveClass
                    : enterActiveClass;
                var toClass = isAppear && appearToClass
                    ? appearToClass
                    : enterToClass;

                var beforeEnterHook = isAppear
                    ? (beforeAppear || beforeEnter)
                    : beforeEnter;
                var enterHook = isAppear
                    ? (typeof appear === 'function' ? appear : enter)
                    : enter;
                var afterEnterHook = isAppear
                    ? (afterAppear || afterEnter)
                    : afterEnter;
                var enterCancelledHook = isAppear
                    ? (appearCancelled || enterCancelled)
                    : enterCancelled;

                var explicitEnterDuration = toNumber(
                    isObject(duration)
                        ? duration.enter
                        : duration
                );

                if (process.env.NODE_ENV !== 'production' && explicitEnterDuration != null) {
                    checkDuration(explicitEnterDuration, 'enter', vnode);
                }

                var expectsCSS = css !== false && !isIE9;
                var userWantsControl = getHookArgumentsLength(enterHook);

                var cb = el._enterCb = once(function () {
                    if (expectsCSS) {
                        removeTransitionClass(el, toClass);
                        removeTransitionClass(el, activeClass);
                    }
                    if (cb.cancelled) {
                        if (expectsCSS) {
                            removeTransitionClass(el, startClass);
                        }
                        enterCancelledHook && enterCancelledHook(el);
                    } else {
                        afterEnterHook && afterEnterHook(el);
                    }
                    el._enterCb = null;
                });

                if (!vnode.data.show) {
                    // remove pending leave element on enter by injecting an insert hook
                    mergeVNodeHook(vnode, 'insert', function () {
                        var parent = el.parentNode;
                        var pendingNode = parent && parent._pending && parent._pending[vnode.key];
                        if (pendingNode &&
                            pendingNode.tag === vnode.tag &&
                            pendingNode.elm._leaveCb
                        ) {
                            pendingNode.elm._leaveCb();
                        }
                        enterHook && enterHook(el, cb);
                    });
                }

                // start enter transition
                beforeEnterHook && beforeEnterHook(el);
                if (expectsCSS) {
                    addTransitionClass(el, startClass);
                    addTransitionClass(el, activeClass);
                    nextFrame(function () {
                        removeTransitionClass(el, startClass);
                        if (!cb.cancelled) {
                            addTransitionClass(el, toClass);
                            if (!userWantsControl) {
                                if (isValidDuration(explicitEnterDuration)) {
                                    setTimeout(cb, explicitEnterDuration);
                                } else {
                                    whenTransitionEnds(el, type, cb);
                                }
                            }
                        }
                    });
                }

                if (vnode.data.show) {
                    toggleDisplay && toggleDisplay();
                    enterHook && enterHook(el, cb);
                }

                if (!expectsCSS && !userWantsControl) {
                    cb();
                }
            }

            function leave(vnode, rm) {
                var el = vnode.elm;

                // call enter callback now
                if (isDef(el._enterCb)) {
                    el._enterCb.cancelled = true;
                    el._enterCb();
                }

                var data = resolveTransition(vnode.data.transition);
                if (isUndef(data) || el.nodeType !== 1) {
                    return rm()
                }

                /* istanbul ignore if */
                if (isDef(el._leaveCb)) {
                    return
                }

                var css = data.css;
                var type = data.type;
                var leaveClass = data.leaveClass;
                var leaveToClass = data.leaveToClass;
                var leaveActiveClass = data.leaveActiveClass;
                var beforeLeave = data.beforeLeave;
                var leave = data.leave;
                var afterLeave = data.afterLeave;
                var leaveCancelled = data.leaveCancelled;
                var delayLeave = data.delayLeave;
                var duration = data.duration;

                var expectsCSS = css !== false && !isIE9;
                var userWantsControl = getHookArgumentsLength(leave);

                var explicitLeaveDuration = toNumber(
                    isObject(duration)
                        ? duration.leave
                        : duration
                );

                if (process.env.NODE_ENV !== 'production' && isDef(explicitLeaveDuration)) {
                    checkDuration(explicitLeaveDuration, 'leave', vnode);
                }

                var cb = el._leaveCb = once(function () {
                    if (el.parentNode && el.parentNode._pending) {
                        el.parentNode._pending[vnode.key] = null;
                    }
                    if (expectsCSS) {
                        removeTransitionClass(el, leaveToClass);
                        removeTransitionClass(el, leaveActiveClass);
                    }
                    if (cb.cancelled) {
                        if (expectsCSS) {
                            removeTransitionClass(el, leaveClass);
                        }
                        leaveCancelled && leaveCancelled(el);
                    } else {
                        rm();
                        afterLeave && afterLeave(el);
                    }
                    el._leaveCb = null;
                });

                if (delayLeave) {
                    delayLeave(performLeave);
                } else {
                    performLeave();
                }

                function performLeave() {
                    // the delayed leave may have already been cancelled
                    if (cb.cancelled) {
                        return
                    }
                    // record leaving element
                    if (!vnode.data.show) {
                        (el.parentNode._pending || (el.parentNode._pending = {}))[(vnode.key)] = vnode;
                    }
                    beforeLeave && beforeLeave(el);
                    if (expectsCSS) {
                        addTransitionClass(el, leaveClass);
                        addTransitionClass(el, leaveActiveClass);
                        nextFrame(function () {
                            removeTransitionClass(el, leaveClass);
                            if (!cb.cancelled) {
                                addTransitionClass(el, leaveToClass);
                                if (!userWantsControl) {
                                    if (isValidDuration(explicitLeaveDuration)) {
                                        setTimeout(cb, explicitLeaveDuration);
                                    } else {
                                        whenTransitionEnds(el, type, cb);
                                    }
                                }
                            }
                        });
                    }
                    leave && leave(el, cb);
                    if (!expectsCSS && !userWantsControl) {
                        cb();
                    }
                }
            }

// only used in dev mode
            function checkDuration(val, name, vnode) {
                if (typeof val !== 'number') {
                    warn(
                        "<transition> explicit " + name + " duration is not a valid number - " +
                        "got " + (JSON.stringify(val)) + ".",
                        vnode.context
                    );
                } else if (isNaN(val)) {
                    warn(
                        "<transition> explicit " + name + " duration is NaN - " +
                        'the duration expression might be incorrect.',
                        vnode.context
                    );
                }
            }

            function isValidDuration(val) {
                return typeof val === 'number' && !isNaN(val)
            }

            /**
             * Normalize a transition hook's argument length. The hook may be:
             * - a merged hook (invoker) with the original in .fns
             * - a wrapped component method (check ._length)
             * - a plain function (.length)
             */
            function getHookArgumentsLength(fn) {
                if (isUndef(fn)) {
                    return false
                }
                var invokerFns = fn.fns;
                if (isDef(invokerFns)) {
                    // invoker
                    return getHookArgumentsLength(
                        Array.isArray(invokerFns)
                            ? invokerFns[0]
                            : invokerFns
                    )
                } else {
                    return (fn._length || fn.length) > 1
                }
            }

            function _enter(_, vnode) {
                if (vnode.data.show !== true) {
                    enter(vnode);
                }
            }

            var transition = inBrowser ? {
                create: _enter,
                activate: _enter,
                remove: function remove$$1(vnode, rm) {
                    /* istanbul ignore else */
                    if (vnode.data.show !== true) {
                        leave(vnode, rm);
                    } else {
                        rm();
                    }
                }
            } : {}

            var platformModules = [
                attrs,
                klass,
                events,
                domProps,
                style,
                transition
            ]

            /*  */

// the directive module should be applied last, after all
// built-in modules have been applied.
            var modules = platformModules.concat(baseModules);

            var patch = createPatchFunction({nodeOps: nodeOps, modules: modules});

            /**
             * Not type checking this file because flow doesn't like attaching
             * properties to Elements.
             */

            /* istanbul ignore if */
            if (isIE9) {
                // http://www.matts411.com/post/internet-explorer-9-oninput/
                document.addEventListener('selectionchange', function () {
                    var el = document.activeElement;
                    if (el && el.vmodel) {
                        trigger(el, 'input');
                    }
                });
            }

            var directive = {
                inserted: function inserted(el, binding, vnode, oldVnode) {
                    if (vnode.tag === 'select') {
                        // #6903
                        if (oldVnode.elm && !oldVnode.elm._vOptions) {
                            mergeVNodeHook(vnode, 'postpatch', function () {
                                directive.componentUpdated(el, binding, vnode);
                            });
                        } else {
                            setSelected(el, binding, vnode.context);
                        }
                        el._vOptions = [].map.call(el.options, getValue);
                    } else if (vnode.tag === 'textarea' || isTextInputType(el.type)) {
                        el._vModifiers = binding.modifiers;
                        if (!binding.modifiers.lazy) {
                            el.addEventListener('compositionstart', onCompositionStart);
                            el.addEventListener('compositionend', onCompositionEnd);
                            // Safari < 10.2 & UIWebView doesn't fire compositionend when
                            // switching focus before confirming composition choice
                            // this also fixes the issue where some browsers e.g. iOS Chrome
                            // fires "change" instead of "input" on autocomplete.
                            el.addEventListener('change', onCompositionEnd);
                            /* istanbul ignore if */
                            if (isIE9) {
                                el.vmodel = true;
                            }
                        }
                    }
                },

                componentUpdated: function componentUpdated(el, binding, vnode) {
                    if (vnode.tag === 'select') {
                        setSelected(el, binding, vnode.context);
                        // in case the options rendered by v-for have changed,
                        // it's possible that the value is out-of-sync with the rendered options.
                        // detect such cases and filter out values that no longer has a matching
                        // option in the DOM.
                        var prevOptions = el._vOptions;
                        var curOptions = el._vOptions = [].map.call(el.options, getValue);
                        if (curOptions.some(function (o, i) {
                                return !looseEqual(o, prevOptions[i]);
                            })) {
                            // trigger change event if
                            // no matching option found for at least one value
                            var needReset = el.multiple
                                ? binding.value.some(function (v) {
                                    return hasNoMatchingOption(v, curOptions);
                                })
                                : binding.value !== binding.oldValue && hasNoMatchingOption(binding.value, curOptions);
                            if (needReset) {
                                trigger(el, 'change');
                            }
                        }
                    }
                }
            };

            function setSelected(el, binding, vm) {
                actuallySetSelected(el, binding, vm);
                /* istanbul ignore if */
                if (isIE || isEdge) {
                    setTimeout(function () {
                        actuallySetSelected(el, binding, vm);
                    }, 0);
                }
            }

            function actuallySetSelected(el, binding, vm) {
                var value = binding.value;
                var isMultiple = el.multiple;
                if (isMultiple && !Array.isArray(value)) {
                    process.env.NODE_ENV !== 'production' && warn(
                        "<select multiple v-model=\"" + (binding.expression) + "\"> " +
                        "expects an Array value for its binding, but got " + (Object.prototype.toString.call(value).slice(8, -1)),
                        vm
                    );
                    return
                }
                var selected, option;
                for (var i = 0, l = el.options.length; i < l; i++) {
                    option = el.options[i];
                    if (isMultiple) {
                        selected = looseIndexOf(value, getValue(option)) > -1;
                        if (option.selected !== selected) {
                            option.selected = selected;
                        }
                    } else {
                        if (looseEqual(getValue(option), value)) {
                            if (el.selectedIndex !== i) {
                                el.selectedIndex = i;
                            }
                            return
                        }
                    }
                }
                if (!isMultiple) {
                    el.selectedIndex = -1;
                }
            }

            function hasNoMatchingOption(value, options) {
                return options.every(function (o) {
                    return !looseEqual(o, value);
                })
            }

            function getValue(option) {
                return '_value' in option
                    ? option._value
                    : option.value
            }

            function onCompositionStart(e) {
                e.target.composing = true;
            }

            function onCompositionEnd(e) {
                // prevent triggering an input event for no reason
                if (!e.target.composing) {
                    return
                }
                e.target.composing = false;
                trigger(e.target, 'input');
            }

            function trigger(el, type) {
                var e = document.createEvent('HTMLEvents');
                e.initEvent(type, true, true);
                el.dispatchEvent(e);
            }

            /*  */

// recursively search for possible transition defined inside the component root
            function locateNode(vnode) {
                return vnode.componentInstance && (!vnode.data || !vnode.data.transition)
                    ? locateNode(vnode.componentInstance._vnode)
                    : vnode
            }

            var show = {
                bind: function bind(el, ref, vnode) {
                    var value = ref.value;

                    vnode = locateNode(vnode);
                    var transition$$1 = vnode.data && vnode.data.transition;
                    var originalDisplay = el.__vOriginalDisplay =
                        el.style.display === 'none' ? '' : el.style.display;
                    if (value && transition$$1) {
                        vnode.data.show = true;
                        enter(vnode, function () {
                            el.style.display = originalDisplay;
                        });
                    } else {
                        el.style.display = value ? originalDisplay : 'none';
                    }
                },

                update: function update(el, ref, vnode) {
                    var value = ref.value;
                    var oldValue = ref.oldValue;

                    /* istanbul ignore if */
                    if (!value === !oldValue) {
                        return
                    }
                    vnode = locateNode(vnode);
                    var transition$$1 = vnode.data && vnode.data.transition;
                    if (transition$$1) {
                        vnode.data.show = true;
                        if (value) {
                            enter(vnode, function () {
                                el.style.display = el.__vOriginalDisplay;
                            });
                        } else {
                            leave(vnode, function () {
                                el.style.display = 'none';
                            });
                        }
                    } else {
                        el.style.display = value ? el.__vOriginalDisplay : 'none';
                    }
                },

                unbind: function unbind(
                    el,
                    binding,
                    vnode,
                    oldVnode,
                    isDestroy
                ) {
                    if (!isDestroy) {
                        el.style.display = el.__vOriginalDisplay;
                    }
                }
            }

            var platformDirectives = {
                model: directive,
                show: show
            }

            /*  */

// Provides transition support for a single element/component.
// supports transition mode (out-in / in-out)

            var transitionProps = {
                name: String,
                appear: Boolean,
                css: Boolean,
                mode: String,
                type: String,
                enterClass: String,
                leaveClass: String,
                enterToClass: String,
                leaveToClass: String,
                enterActiveClass: String,
                leaveActiveClass: String,
                appearClass: String,
                appearActiveClass: String,
                appearToClass: String,
                duration: [Number, String, Object]
            };

// in case the child is also an abstract component, e.g. <keep-alive>
// we want to recursively retrieve the real component to be rendered
            function getRealChild(vnode) {
                var compOptions = vnode && vnode.componentOptions;
                if (compOptions && compOptions.Ctor.options.abstract) {
                    return getRealChild(getFirstComponentChild(compOptions.children))
                } else {
                    return vnode
                }
            }

            function extractTransitionData(comp) {
                var data = {};
                var options = comp.$options;
                // props
                for (var key in options.propsData) {
                    data[key] = comp[key];
                }
                // events.
                // extract listeners and pass them directly to the transition methods
                var listeners = options._parentListeners;
                for (var key$1 in listeners) {
                    data[camelize(key$1)] = listeners[key$1];
                }
                return data
            }

            function placeholder(h, rawChild) {
                if (/\d-keep-alive$/.test(rawChild.tag)) {
                    return h('keep-alive', {
                        props: rawChild.componentOptions.propsData
                    })
                }
            }

            function hasParentTransition(vnode) {
                while ((vnode = vnode.parent)) {
                    if (vnode.data.transition) {
                        return true
                    }
                }
            }

            function isSameChild(child, oldChild) {
                return oldChild.key === child.key && oldChild.tag === child.tag
            }

            var Transition = {
                name: 'transition',
                props: transitionProps,
                abstract: true,

                render: function render(h) {
                    var this$1 = this;

                    var children = this.$slots.default;
                    if (!children) {
                        return
                    }

                    // filter out text nodes (possible whitespaces)
                    children = children.filter(function (c) {
                        return c.tag || isAsyncPlaceholder(c);
                    });
                    /* istanbul ignore if */
                    if (!children.length) {
                        return
                    }

                    // warn multiple elements
                    if (process.env.NODE_ENV !== 'production' && children.length > 1) {
                        warn(
                            '<transition> can only be used on a single element. Use ' +
                            '<transition-group> for lists.',
                            this.$parent
                        );
                    }

                    var mode = this.mode;

                    // warn invalid mode
                    if (process.env.NODE_ENV !== 'production' &&
                        mode && mode !== 'in-out' && mode !== 'out-in'
                    ) {
                        warn(
                            'invalid <transition> mode: ' + mode,
                            this.$parent
                        );
                    }

                    var rawChild = children[0];

                    // if this is a component root node and the component's
                    // parent container node also has transition, skip.
                    if (hasParentTransition(this.$vnode)) {
                        return rawChild
                    }

                    // apply transition data to child
                    // use getRealChild() to ignore abstract components e.g. keep-alive
                    var child = getRealChild(rawChild);
                    /* istanbul ignore if */
                    if (!child) {
                        return rawChild
                    }

                    if (this._leaving) {
                        return placeholder(h, rawChild)
                    }

                    // ensure a key that is unique to the vnode type and to this transition
                    // component instance. This key will be used to remove pending leaving nodes
                    // during entering.
                    var id = "__transition-" + (this._uid) + "-";
                    child.key = child.key == null
                        ? child.isComment
                            ? id + 'comment'
                            : id + child.tag
                        : isPrimitive(child.key)
                            ? (String(child.key).indexOf(id) === 0 ? child.key : id + child.key)
                            : child.key;

                    var data = (child.data || (child.data = {})).transition = extractTransitionData(this);
                    var oldRawChild = this._vnode;
                    var oldChild = getRealChild(oldRawChild);

                    // mark v-show
                    // so that the transition module can hand over the control to the directive
                    if (child.data.directives && child.data.directives.some(function (d) {
                            return d.name === 'show';
                        })) {
                        child.data.show = true;
                    }

                    if (
                        oldChild &&
                        oldChild.data &&
                        !isSameChild(child, oldChild) &&
                        !isAsyncPlaceholder(oldChild) &&
                        // #6687 component root is a comment node
                        !(oldChild.componentInstance && oldChild.componentInstance._vnode.isComment)
                    ) {
                        // replace old child transition data with fresh one
                        // important for dynamic transitions!
                        var oldData = oldChild.data.transition = extend({}, data);
                        // handle transition mode
                        if (mode === 'out-in') {
                            // return placeholder node and queue update when leave finishes
                            this._leaving = true;
                            mergeVNodeHook(oldData, 'afterLeave', function () {
                                this$1._leaving = false;
                                this$1.$forceUpdate();
                            });
                            return placeholder(h, rawChild)
                        } else if (mode === 'in-out') {
                            if (isAsyncPlaceholder(child)) {
                                return oldRawChild
                            }
                            var delayedLeave;
                            var performLeave = function () {
                                delayedLeave();
                            };
                            mergeVNodeHook(data, 'afterEnter', performLeave);
                            mergeVNodeHook(data, 'enterCancelled', performLeave);
                            mergeVNodeHook(oldData, 'delayLeave', function (leave) {
                                delayedLeave = leave;
                            });
                        }
                    }

                    return rawChild
                }
            }

            /*  */

// Provides transition support for list items.
// supports move transitions using the FLIP technique.

// Because the vdom's children update algorithm is "unstable" - i.e.
// it doesn't guarantee the relative positioning of removed elements,
// we force transition-group to update its children into two passes:
// in the first pass, we remove all nodes that need to be removed,
// triggering their leaving transition; in the second pass, we insert/move
// into the final desired state. This way in the second pass removed
// nodes will remain where they should be.

            var props = extend({
                tag: String,
                moveClass: String
            }, transitionProps);

            delete props.mode;

            var TransitionGroup = {
                props: props,

                render: function render(h) {
                    var tag = this.tag || this.$vnode.data.tag || 'span';
                    var map = Object.create(null);
                    var prevChildren = this.prevChildren = this.children;
                    var rawChildren = this.$slots.default || [];
                    var children = this.children = [];
                    var transitionData = extractTransitionData(this);

                    for (var i = 0; i < rawChildren.length; i++) {
                        var c = rawChildren[i];
                        if (c.tag) {
                            if (c.key != null && String(c.key).indexOf('__vlist') !== 0) {
                                children.push(c);
                                map[c.key] = c
                                ;(c.data || (c.data = {})).transition = transitionData;
                            } else if (process.env.NODE_ENV !== 'production') {
                                var opts = c.componentOptions;
                                var name = opts ? (opts.Ctor.options.name || opts.tag || '') : c.tag;
                                warn(("<transition-group> children must be keyed: <" + name + ">"));
                            }
                        }
                    }

                    if (prevChildren) {
                        var kept = [];
                        var removed = [];
                        for (var i$1 = 0; i$1 < prevChildren.length; i$1++) {
                            var c$1 = prevChildren[i$1];
                            c$1.data.transition = transitionData;
                            c$1.data.pos = c$1.elm.getBoundingClientRect();
                            if (map[c$1.key]) {
                                kept.push(c$1);
                            } else {
                                removed.push(c$1);
                            }
                        }
                        this.kept = h(tag, null, kept);
                        this.removed = removed;
                    }

                    return h(tag, null, children)
                },

                beforeUpdate: function beforeUpdate() {
                    // force removing pass
                    this.__patch__(
                        this._vnode,
                        this.kept,
                        false, // hydrating
                        true // removeOnly (!important, avoids unnecessary moves)
                    );
                    this._vnode = this.kept;
                },

                updated: function updated() {
                    var children = this.prevChildren;
                    var moveClass = this.moveClass || ((this.name || 'v') + '-move');
                    if (!children.length || !this.hasMove(children[0].elm, moveClass)) {
                        return
                    }

                    // we divide the work into three loops to avoid mixing DOM reads and writes
                    // in each iteration - which helps prevent layout thrashing.
                    children.forEach(callPendingCbs);
                    children.forEach(recordPosition);
                    children.forEach(applyTranslation);

                    // force reflow to put everything in position
                    // assign to this to avoid being removed in tree-shaking
                    // $flow-disable-line
                    this._reflow = document.body.offsetHeight;

                    children.forEach(function (c) {
                        if (c.data.moved) {
                            var el = c.elm;
                            var s = el.style;
                            addTransitionClass(el, moveClass);
                            s.transform = s.WebkitTransform = s.transitionDuration = '';
                            el.addEventListener(transitionEndEvent, el._moveCb = function cb(e) {
                                if (!e || /transform$/.test(e.propertyName)) {
                                    el.removeEventListener(transitionEndEvent, cb);
                                    el._moveCb = null;
                                    removeTransitionClass(el, moveClass);
                                }
                            });
                        }
                    });
                },

                methods: {
                    hasMove: function hasMove(el, moveClass) {
                        /* istanbul ignore if */
                        if (!hasTransition) {
                            return false
                        }
                        /* istanbul ignore if */
                        if (this._hasMove) {
                            return this._hasMove
                        }
                        // Detect whether an element with the move class applied has
                        // CSS transitions. Since the element may be inside an entering
                        // transition at this very moment, we make a clone of it and remove
                        // all other transition classes applied to ensure only the move class
                        // is applied.
                        var clone = el.cloneNode();
                        if (el._transitionClasses) {
                            el._transitionClasses.forEach(function (cls) {
                                removeClass(clone, cls);
                            });
                        }
                        addClass(clone, moveClass);
                        clone.style.display = 'none';
                        this.$el.appendChild(clone);
                        var info = getTransitionInfo(clone);
                        this.$el.removeChild(clone);
                        return (this._hasMove = info.hasTransform)
                    }
                }
            }

            function callPendingCbs(c) {
                /* istanbul ignore if */
                if (c.elm._moveCb) {
                    c.elm._moveCb();
                }
                /* istanbul ignore if */
                if (c.elm._enterCb) {
                    c.elm._enterCb();
                }
            }

            function recordPosition(c) {
                c.data.newPos = c.elm.getBoundingClientRect();
            }

            function applyTranslation(c) {
                var oldPos = c.data.pos;
                var newPos = c.data.newPos;
                var dx = oldPos.left - newPos.left;
                var dy = oldPos.top - newPos.top;
                if (dx || dy) {
                    c.data.moved = true;
                    var s = c.elm.style;
                    s.transform = s.WebkitTransform = "translate(" + dx + "px," + dy + "px)";
                    s.transitionDuration = '0s';
                }
            }

            var platformComponents = {
                Transition: Transition,
                TransitionGroup: TransitionGroup
            }

            /*  */

// install platform specific utils
            Vue.config.mustUseProp = mustUseProp;
            Vue.config.isReservedTag = isReservedTag;
            Vue.config.isReservedAttr = isReservedAttr;
            Vue.config.getTagNamespace = getTagNamespace;
            Vue.config.isUnknownElement = isUnknownElement;

// install platform runtime directives & components
            extend(Vue.options.directives, platformDirectives);
            extend(Vue.options.components, platformComponents);

// install platform patch function
            Vue.prototype.__patch__ = inBrowser ? patch : noop;

// public mount method
            Vue.prototype.$mount = function (
                el,
                hydrating
            ) {
                el = el && inBrowser ? query(el) : undefined;
                return mountComponent(this, el, hydrating)
            };

// devtools global hook
            /* istanbul ignore next */
            if (inBrowser) {
                setTimeout(function () {
                    if (config.devtools) {
                        if (devtools) {
                            devtools.emit('init', Vue);
                        } else if (
                            process.env.NODE_ENV !== 'production' &&
                            process.env.NODE_ENV !== 'test' &&
                            isChrome
                        ) {
                            console[console.info ? 'info' : 'log'](
                                'Download the Vue Devtools extension for a better development experience:\n' +
                                'https://github.com/vuejs/vue-devtools'
                            );
                        }
                    }
                }, 0);
            }

            /*  */

            var defaultTagRE = /\{\{((?:.|\n)+?)\}\}/g;
            var regexEscapeRE = /[-.*+?^${}()|[\]\/\\]/g;

            var buildRegex = cached(function (delimiters) {
                var open = delimiters[0].replace(regexEscapeRE, '\\$&');
                var close = delimiters[1].replace(regexEscapeRE, '\\$&');
                return new RegExp(open + '((?:.|\\n)+?)' + close, 'g')
            });


            function parseText(
                text,
                delimiters
            ) {
                var tagRE = delimiters ? buildRegex(delimiters) : defaultTagRE;
                if (!tagRE.test(text)) {
                    return
                }
                var tokens = [];
                var rawTokens = [];
                var lastIndex = tagRE.lastIndex = 0;
                var match, index, tokenValue;
                while ((match = tagRE.exec(text))) {
                    index = match.index;
                    // push text token
                    if (index > lastIndex) {
                        rawTokens.push(tokenValue = text.slice(lastIndex, index));
                        tokens.push(JSON.stringify(tokenValue));
                    }
                    // tag token
                    var exp = parseFilters(match[1].trim());
                    tokens.push(("_s(" + exp + ")"));
                    rawTokens.push({'@binding': exp});
                    lastIndex = index + match[0].length;
                }
                if (lastIndex < text.length) {
                    rawTokens.push(tokenValue = text.slice(lastIndex));
                    tokens.push(JSON.stringify(tokenValue));
                }
                return {
                    expression: tokens.join('+'),
                    tokens: rawTokens
                }
            }

            /*  */

            function transformNode(el, options) {
                var warn = options.warn || baseWarn;
                var staticClass = getAndRemoveAttr(el, 'class');
                if (process.env.NODE_ENV !== 'production' && staticClass) {
                    var res = parseText(staticClass, options.delimiters);
                    if (res) {
                        warn(
                            "class=\"" + staticClass + "\": " +
                            'Interpolation inside attributes has been removed. ' +
                            'Use v-bind or the colon shorthand instead. For example, ' +
                            'instead of <div class="{{ val }}">, use <div :class="val">.'
                        );
                    }
                }
                if (staticClass) {
                    el.staticClass = JSON.stringify(staticClass);
                }
                var classBinding = getBindingAttr(el, 'class', false /* getStatic */);
                if (classBinding) {
                    el.classBinding = classBinding;
                }
            }

            function genData(el) {
                var data = '';
                if (el.staticClass) {
                    data += "staticClass:" + (el.staticClass) + ",";
                }
                if (el.classBinding) {
                    data += "class:" + (el.classBinding) + ",";
                }
                return data
            }

            var klass$1 = {
                staticKeys: ['staticClass'],
                transformNode: transformNode,
                genData: genData
            }

            /*  */

            function transformNode$1(el, options) {
                var warn = options.warn || baseWarn;
                var staticStyle = getAndRemoveAttr(el, 'style');
                if (staticStyle) {
                    /* istanbul ignore if */
                    if (process.env.NODE_ENV !== 'production') {
                        var res = parseText(staticStyle, options.delimiters);
                        if (res) {
                            warn(
                                "style=\"" + staticStyle + "\": " +
                                'Interpolation inside attributes has been removed. ' +
                                'Use v-bind or the colon shorthand instead. For example, ' +
                                'instead of <div style="{{ val }}">, use <div :style="val">.'
                            );
                        }
                    }
                    el.staticStyle = JSON.stringify(parseStyleText(staticStyle));
                }

                var styleBinding = getBindingAttr(el, 'style', false /* getStatic */);
                if (styleBinding) {
                    el.styleBinding = styleBinding;
                }
            }

            function genData$1(el) {
                var data = '';
                if (el.staticStyle) {
                    data += "staticStyle:" + (el.staticStyle) + ",";
                }
                if (el.styleBinding) {
                    data += "style:(" + (el.styleBinding) + "),";
                }
                return data
            }

            var style$1 = {
                staticKeys: ['staticStyle'],
                transformNode: transformNode$1,
                genData: genData$1
            }

            /*  */

            var decoder;

            var he = {
                decode: function decode(html) {
                    decoder = decoder || document.createElement('div');
                    decoder.innerHTML = html;
                    return decoder.textContent
                }
            }

            /*  */

            var isUnaryTag = makeMap(
                'area,base,br,col,embed,frame,hr,img,input,isindex,keygen,' +
                'link,meta,param,source,track,wbr'
            );

// Elements that you can, intentionally, leave open
// (and which close themselves)
            var canBeLeftOpenTag = makeMap(
                'colgroup,dd,dt,li,options,p,td,tfoot,th,thead,tr,source'
            );

// HTML5 tags https://html.spec.whatwg.org/multipage/indices.html#elements-3
// Phrasing Content https://html.spec.whatwg.org/multipage/dom.html#phrasing-content
            var isNonPhrasingTag = makeMap(
                'address,article,aside,base,blockquote,body,caption,col,colgroup,dd,' +
                'details,dialog,div,dl,dt,fieldset,figcaption,figure,footer,form,' +
                'h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,legend,li,menuitem,meta,' +
                'optgroup,option,param,rp,rt,source,style,summary,tbody,td,tfoot,th,thead,' +
                'title,tr,track'
            );

            /**
             * Not type-checking this file because it's mostly vendor code.
             */

            /*!
 * HTML Parser By John Resig (ejohn.org)
 * Modified by Juriy "kangax" Zaytsev
 * Original code by Erik Arvidsson, Mozilla Public License
 * http://erik.eae.net/simplehtmlparser/simplehtmlparser.js
 */

// Regular Expressions for parsing tags and attributes
            var attribute = /^\s*([^\s"'<>\/=]+)(?:\s*(=)\s*(?:"([^"]*)"+|'([^']*)'+|([^\s"'=<>`]+)))?/;
// could use https://www.w3.org/TR/1999/REC-xml-names-19990114/#NT-QName
// but for Vue templates we can enforce a simple charset
            var ncname = '[a-zA-Z_][\\w\\-\\.]*';
            var qnameCapture = "((?:" + ncname + "\\:)?" + ncname + ")";
            var startTagOpen = new RegExp(("^<" + qnameCapture));
            var startTagClose = /^\s*(\/?)>/;
            var endTag = new RegExp(("^<\\/" + qnameCapture + "[^>]*>"));
            var doctype = /^<!DOCTYPE [^>]+>/i;
// #7298: escape - to avoid being pased as HTML comment when inlined in page
            var comment = /^<!\--/;
            var conditionalComment = /^<!\[/;

            var IS_REGEX_CAPTURING_BROKEN = false;
            'x'.replace(/x(.)?/g, function (m, g) {
                IS_REGEX_CAPTURING_BROKEN = g === '';
            });

// Special Elements (can contain anything)
            var isPlainTextElement = makeMap('script,style,textarea', true);
            var reCache = {};

            var decodingMap = {
                '&lt;': '<',
                '&gt;': '>',
                '&quot;': '"',
                '&amp;': '&',
                '&#10;': '\n',
                '&#9;': '\t'
            };
            var encodedAttr = /&(?:lt|gt|quot|amp);/g;
            var encodedAttrWithNewLines = /&(?:lt|gt|quot|amp|#10|#9);/g;

// #5992
            var isIgnoreNewlineTag = makeMap('pre,textarea', true);
            var shouldIgnoreFirstNewline = function (tag, html) {
                return tag && isIgnoreNewlineTag(tag) && html[0] === '\n';
            };

            function decodeAttr(value, shouldDecodeNewlines) {
                var re = shouldDecodeNewlines ? encodedAttrWithNewLines : encodedAttr;
                return value.replace(re, function (match) {
                    return decodingMap[match];
                })
            }

            function parseHTML(html, options) {
                var stack = [];
                var expectHTML = options.expectHTML;
                var isUnaryTag$$1 = options.isUnaryTag || no;
                var canBeLeftOpenTag$$1 = options.canBeLeftOpenTag || no;
                var index = 0;
                var last, lastTag;
                while (html) {
                    last = html;
                    // Make sure we're not in a plaintext content element like script/style
                    if (!lastTag || !isPlainTextElement(lastTag)) {
                        var textEnd = html.indexOf('<');
                        if (textEnd === 0) {
                            // Comment:
                            if (comment.test(html)) {
                                var commentEnd = html.indexOf('-->');

                                if (commentEnd >= 0) {
                                    if (options.shouldKeepComment) {
                                        options.comment(html.substring(4, commentEnd));
                                    }
                                    advance(commentEnd + 3);
                                    continue
                                }
                            }

                            // http://en.wikipedia.org/wiki/Conditional_comment#Downlevel-revealed_conditional_comment
                            if (conditionalComment.test(html)) {
                                var conditionalEnd = html.indexOf(']>');

                                if (conditionalEnd >= 0) {
                                    advance(conditionalEnd + 2);
                                    continue
                                }
                            }

                            // Doctype:
                            var doctypeMatch = html.match(doctype);
                            if (doctypeMatch) {
                                advance(doctypeMatch[0].length);
                                continue
                            }

                            // End tag:
                            var endTagMatch = html.match(endTag);
                            if (endTagMatch) {
                                var curIndex = index;
                                advance(endTagMatch[0].length);
                                parseEndTag(endTagMatch[1], curIndex, index);
                                continue
                            }

                            // Start tag:
                            var startTagMatch = parseStartTag();
                            if (startTagMatch) {
                                handleStartTag(startTagMatch);
                                if (shouldIgnoreFirstNewline(lastTag, html)) {
                                    advance(1);
                                }
                                continue
                            }
                        }

                        var text = (void 0), rest = (void 0), next = (void 0);
                        if (textEnd >= 0) {
                            rest = html.slice(textEnd);
                            while (
                                !endTag.test(rest) &&
                                !startTagOpen.test(rest) &&
                                !comment.test(rest) &&
                                !conditionalComment.test(rest)
                                ) {
                                // < in plain text, be forgiving and treat it as text
                                next = rest.indexOf('<', 1);
                                if (next < 0) {
                                    break
                                }
                                textEnd += next;
                                rest = html.slice(textEnd);
                            }
                            text = html.substring(0, textEnd);
                            advance(textEnd);
                        }

                        if (textEnd < 0) {
                            text = html;
                            html = '';
                        }

                        if (options.chars && text) {
                            options.chars(text);
                        }
                    } else {
                        var endTagLength = 0;
                        var stackedTag = lastTag.toLowerCase();
                        var reStackedTag = reCache[stackedTag] || (reCache[stackedTag] = new RegExp('([\\s\\S]*?)(</' + stackedTag + '[^>]*>)', 'i'));
                        var rest$1 = html.replace(reStackedTag, function (all, text, endTag) {
                            endTagLength = endTag.length;
                            if (!isPlainTextElement(stackedTag) && stackedTag !== 'noscript') {
                                text = text
                                    .replace(/<!\--([\s\S]*?)-->/g, '$1') // #7298
                                    .replace(/<!\[CDATA\[([\s\S]*?)]]>/g, '$1');
                            }
                            if (shouldIgnoreFirstNewline(stackedTag, text)) {
                                text = text.slice(1);
                            }
                            if (options.chars) {
                                options.chars(text);
                            }
                            return ''
                        });
                        index += html.length - rest$1.length;
                        html = rest$1;
                        parseEndTag(stackedTag, index - endTagLength, index);
                    }

                    if (html === last) {
                        options.chars && options.chars(html);
                        if (process.env.NODE_ENV !== 'production' && !stack.length && options.warn) {
                            options.warn(("Mal-formatted tag at end of template: \"" + html + "\""));
                        }
                        break
                    }
                }

                // Clean up any remaining tags
                parseEndTag();

                function advance(n) {
                    index += n;
                    html = html.substring(n);
                }

                function parseStartTag() {
                    var start = html.match(startTagOpen);
                    if (start) {
                        var match = {
                            tagName: start[1],
                            attrs: [],
                            start: index
                        };
                        advance(start[0].length);
                        var end, attr;
                        while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {
                            advance(attr[0].length);
                            match.attrs.push(attr);
                        }
                        if (end) {
                            match.unarySlash = end[1];
                            advance(end[0].length);
                            match.end = index;
                            return match
                        }
                    }
                }

                function handleStartTag(match) {
                    var tagName = match.tagName;
                    var unarySlash = match.unarySlash;

                    if (expectHTML) {
                        if (lastTag === 'p' && isNonPhrasingTag(tagName)) {
                            parseEndTag(lastTag);
                        }
                        if (canBeLeftOpenTag$$1(tagName) && lastTag === tagName) {
                            parseEndTag(tagName);
                        }
                    }

                    var unary = isUnaryTag$$1(tagName) || !!unarySlash;

                    var l = match.attrs.length;
                    var attrs = new Array(l);
                    for (var i = 0; i < l; i++) {
                        var args = match.attrs[i];
                        // hackish work around FF bug https://bugzilla.mozilla.org/show_bug.cgi?id=369778
                        if (IS_REGEX_CAPTURING_BROKEN && args[0].indexOf('""') === -1) {
                            if (args[3] === '') {
                                delete args[3];
                            }
                            if (args[4] === '') {
                                delete args[4];
                            }
                            if (args[5] === '') {
                                delete args[5];
                            }
                        }
                        var value = args[3] || args[4] || args[5] || '';
                        var shouldDecodeNewlines = tagName === 'a' && args[1] === 'href'
                            ? options.shouldDecodeNewlinesForHref
                            : options.shouldDecodeNewlines;
                        attrs[i] = {
                            name: args[1],
                            value: decodeAttr(value, shouldDecodeNewlines)
                        };
                    }

                    if (!unary) {
                        stack.push({tag: tagName, lowerCasedTag: tagName.toLowerCase(), attrs: attrs});
                        lastTag = tagName;
                    }

                    if (options.start) {
                        options.start(tagName, attrs, unary, match.start, match.end);
                    }
                }

                function parseEndTag(tagName, start, end) {
                    var pos, lowerCasedTagName;
                    if (start == null) {
                        start = index;
                    }
                    if (end == null) {
                        end = index;
                    }

                    if (tagName) {
                        lowerCasedTagName = tagName.toLowerCase();
                    }

                    // Find the closest opened tag of the same type
                    if (tagName) {
                        for (pos = stack.length - 1; pos >= 0; pos--) {
                            if (stack[pos].lowerCasedTag === lowerCasedTagName) {
                                break
                            }
                        }
                    } else {
                        // If no tag name is provided, clean shop
                        pos = 0;
                    }

                    if (pos >= 0) {
                        // Close all the open elements, up the stack
                        for (var i = stack.length - 1; i >= pos; i--) {
                            if (process.env.NODE_ENV !== 'production' &&
                                (i > pos || !tagName) &&
                                options.warn
                            ) {
                                options.warn(
                                    ("tag <" + (stack[i].tag) + "> has no matching end tag.")
                                );
                            }
                            if (options.end) {
                                options.end(stack[i].tag, start, end);
                            }
                        }

                        // Remove the open elements from the stack
                        stack.length = pos;
                        lastTag = pos && stack[pos - 1].tag;
                    } else if (lowerCasedTagName === 'br') {
                        if (options.start) {
                            options.start(tagName, [], true, start, end);
                        }
                    } else if (lowerCasedTagName === 'p') {
                        if (options.start) {
                            options.start(tagName, [], false, start, end);
                        }
                        if (options.end) {
                            options.end(tagName, start, end);
                        }
                    }
                }
            }

            /*  */

            var onRE = /^@|^v-on:/;
            var dirRE = /^v-|^@|^:/;
            var forAliasRE = /([^]*?)\s+(?:in|of)\s+([^]*)/;
            var forIteratorRE = /,([^,\}\]]*)(?:,([^,\}\]]*))?$/;
            var stripParensRE = /^\(|\)$/g;

            var argRE = /:(.*)$/;
            var bindRE = /^:|^v-bind:/;
            var modifierRE = /\.[^.]+/g;

            var decodeHTMLCached = cached(he.decode);

// configurable state
            var warn$2;
            var delimiters;
            var transforms;
            var preTransforms;
            var postTransforms;
            var platformIsPreTag;
            var platformMustUseProp;
            var platformGetTagNamespace;


            function createASTElement(
                tag,
                attrs,
                parent
            ) {
                return {
                    type: 1,
                    tag: tag,
                    attrsList: attrs,
                    attrsMap: makeAttrsMap(attrs),
                    parent: parent,
                    children: []
                }
            }

            /**
             * Convert HTML string to AST.
             */
            function parse(
                template,
                options
            ) {
                warn$2 = options.warn || baseWarn;

                platformIsPreTag = options.isPreTag || no;
                platformMustUseProp = options.mustUseProp || no;
                platformGetTagNamespace = options.getTagNamespace || no;

                transforms = pluckModuleFunction(options.modules, 'transformNode');
                preTransforms = pluckModuleFunction(options.modules, 'preTransformNode');
                postTransforms = pluckModuleFunction(options.modules, 'postTransformNode');

                delimiters = options.delimiters;

                var stack = [];
                var preserveWhitespace = options.preserveWhitespace !== false;
                var root;
                var currentParent;
                var inVPre = false;
                var inPre = false;
                var warned = false;

                function warnOnce(msg) {
                    if (!warned) {
                        warned = true;
                        warn$2(msg);
                    }
                }

                function closeElement(element) {
                    // check pre state
                    if (element.pre) {
                        inVPre = false;
                    }
                    if (platformIsPreTag(element.tag)) {
                        inPre = false;
                    }
                    // apply post-transforms
                    for (var i = 0; i < postTransforms.length; i++) {
                        postTransforms[i](element, options);
                    }
                }

                parseHTML(template, {
                    warn: warn$2,
                    expectHTML: options.expectHTML,
                    isUnaryTag: options.isUnaryTag,
                    canBeLeftOpenTag: options.canBeLeftOpenTag,
                    shouldDecodeNewlines: options.shouldDecodeNewlines,
                    shouldDecodeNewlinesForHref: options.shouldDecodeNewlinesForHref,
                    shouldKeepComment: options.comments,
                    start: function start(tag, attrs, unary) {
                        // check namespace.
                        // inherit parent ns if there is one
                        var ns = (currentParent && currentParent.ns) || platformGetTagNamespace(tag);

                        // handle IE svg bug
                        /* istanbul ignore if */
                        if (isIE && ns === 'svg') {
                            attrs = guardIESVGBug(attrs);
                        }

                        var element = createASTElement(tag, attrs, currentParent);
                        if (ns) {
                            element.ns = ns;
                        }

                        if (isForbiddenTag(element) && !isServerRendering()) {
                            element.forbidden = true;
                            process.env.NODE_ENV !== 'production' && warn$2(
                                'Templates should only be responsible for mapping the state to the ' +
                                'UI. Avoid placing tags with side-effects in your templates, such as ' +
                                "<" + tag + ">" + ', as they will not be parsed.'
                            );
                        }

                        // apply pre-transforms
                        for (var i = 0; i < preTransforms.length; i++) {
                            element = preTransforms[i](element, options) || element;
                        }

                        if (!inVPre) {
                            processPre(element);
                            if (element.pre) {
                                inVPre = true;
                            }
                        }
                        if (platformIsPreTag(element.tag)) {
                            inPre = true;
                        }
                        if (inVPre) {
                            processRawAttrs(element);
                        } else if (!element.processed) {
                            // structural directives
                            processFor(element);
                            processIf(element);
                            processOnce(element);
                            // element-scope stuff
                            processElement(element, options);
                        }

                        function checkRootConstraints(el) {
                            if (process.env.NODE_ENV !== 'production') {
                                if (el.tag === 'slot' || el.tag === 'template') {
                                    warnOnce(
                                        "Cannot use <" + (el.tag) + "> as component root element because it may " +
                                        'contain multiple nodes.'
                                    );
                                }
                                if (el.attrsMap.hasOwnProperty('v-for')) {
                                    warnOnce(
                                        'Cannot use v-for on stateful component root element because ' +
                                        'it renders multiple elements.'
                                    );
                                }
                            }
                        }

                        // tree management
                        if (!root) {
                            root = element;
                            checkRootConstraints(root);
                        } else if (!stack.length) {
                            // allow root elements with v-if, v-else-if and v-else
                            if (root.if && (element.elseif || element.else)) {
                                checkRootConstraints(element);
                                addIfCondition(root, {
                                    exp: element.elseif,
                                    block: element
                                });
                            } else if (process.env.NODE_ENV !== 'production') {
                                warnOnce(
                                    "Component template should contain exactly one root element. " +
                                    "If you are using v-if on multiple elements, " +
                                    "use v-else-if to chain them instead."
                                );
                            }
                        }
                        if (currentParent && !element.forbidden) {
                            if (element.elseif || element.else) {
                                processIfConditions(element, currentParent);
                            } else if (element.slotScope) { // scoped slot
                                currentParent.plain = false;
                                var name = element.slotTarget || '"default"';
                                (currentParent.scopedSlots || (currentParent.scopedSlots = {}))[name] = element;
                            } else {
                                currentParent.children.push(element);
                                element.parent = currentParent;
                            }
                        }
                        if (!unary) {
                            currentParent = element;
                            stack.push(element);
                        } else {
                            closeElement(element);
                        }
                    },

                    end: function end() {
                        // remove trailing whitespace
                        var element = stack[stack.length - 1];
                        var lastNode = element.children[element.children.length - 1];
                        if (lastNode && lastNode.type === 3 && lastNode.text === ' ' && !inPre) {
                            element.children.pop();
                        }
                        // pop stack
                        stack.length -= 1;
                        currentParent = stack[stack.length - 1];
                        closeElement(element);
                    },

                    chars: function chars(text) {
                        if (!currentParent) {
                            if (process.env.NODE_ENV !== 'production') {
                                if (text === template) {
                                    warnOnce(
                                        'Component template requires a root element, rather than just text.'
                                    );
                                } else if ((text = text.trim())) {
                                    warnOnce(
                                        ("text \"" + text + "\" outside root element will be ignored.")
                                    );
                                }
                            }
                            return
                        }
                        // IE textarea placeholder bug
                        /* istanbul ignore if */
                        if (isIE &&
                            currentParent.tag === 'textarea' &&
                            currentParent.attrsMap.placeholder === text
                        ) {
                            return
                        }
                        var children = currentParent.children;
                        text = inPre || text.trim()
                            ? isTextTag(currentParent) ? text : decodeHTMLCached(text)
                            // only preserve whitespace if its not right after a starting tag
                            : preserveWhitespace && children.length ? ' ' : '';
                        if (text) {
                            var res;
                            if (!inVPre && text !== ' ' && (res = parseText(text, delimiters))) {
                                children.push({
                                    type: 2,
                                    expression: res.expression,
                                    tokens: res.tokens,
                                    text: text
                                });
                            } else if (text !== ' ' || !children.length || children[children.length - 1].text !== ' ') {
                                children.push({
                                    type: 3,
                                    text: text
                                });
                            }
                        }
                    },
                    comment: function comment(text) {
                        currentParent.children.push({
                            type: 3,
                            text: text,
                            isComment: true
                        });
                    }
                });
                return root
            }

            function processPre(el) {
                if (getAndRemoveAttr(el, 'v-pre') != null) {
                    el.pre = true;
                }
            }

            function processRawAttrs(el) {
                var l = el.attrsList.length;
                if (l) {
                    var attrs = el.attrs = new Array(l);
                    for (var i = 0; i < l; i++) {
                        attrs[i] = {
                            name: el.attrsList[i].name,
                            value: JSON.stringify(el.attrsList[i].value)
                        };
                    }
                } else if (!el.pre) {
                    // non root node in pre blocks with no attributes
                    el.plain = true;
                }
            }

            function processElement(element, options) {
                processKey(element);

                // determine whether this is a plain element after
                // removing structural attributes
                element.plain = !element.key && !element.attrsList.length;

                processRef(element);
                processSlot(element);
                processComponent(element);
                for (var i = 0; i < transforms.length; i++) {
                    element = transforms[i](element, options) || element;
                }
                processAttrs(element);
            }

            function processKey(el) {
                var exp = getBindingAttr(el, 'key');
                if (exp) {
                    if (process.env.NODE_ENV !== 'production' && el.tag === 'template') {
                        warn$2("<template> cannot be keyed. Place the key on real elements instead.");
                    }
                    el.key = exp;
                }
            }

            function processRef(el) {
                var ref = getBindingAttr(el, 'ref');
                if (ref) {
                    el.ref = ref;
                    el.refInFor = checkInFor(el);
                }
            }

            function processFor(el) {
                var exp;
                if ((exp = getAndRemoveAttr(el, 'v-for'))) {
                    var res = parseFor(exp);
                    if (res) {
                        extend(el, res);
                    } else if (process.env.NODE_ENV !== 'production') {
                        warn$2(
                            ("Invalid v-for expression: " + exp)
                        );
                    }
                }
            }


            function parseFor(exp) {
                var inMatch = exp.match(forAliasRE);
                if (!inMatch) {
                    return
                }
                var res = {};
                res.for = inMatch[2].trim();
                var alias = inMatch[1].trim().replace(stripParensRE, '');
                var iteratorMatch = alias.match(forIteratorRE);
                if (iteratorMatch) {
                    res.alias = alias.replace(forIteratorRE, '');
                    res.iterator1 = iteratorMatch[1].trim();
                    if (iteratorMatch[2]) {
                        res.iterator2 = iteratorMatch[2].trim();
                    }
                } else {
                    res.alias = alias;
                }
                return res
            }

            function processIf(el) {
                var exp = getAndRemoveAttr(el, 'v-if');
                if (exp) {
                    el.if = exp;
                    addIfCondition(el, {
                        exp: exp,
                        block: el
                    });
                } else {
                    if (getAndRemoveAttr(el, 'v-else') != null) {
                        el.else = true;
                    }
                    var elseif = getAndRemoveAttr(el, 'v-else-if');
                    if (elseif) {
                        el.elseif = elseif;
                    }
                }
            }

            function processIfConditions(el, parent) {
                var prev = findPrevElement(parent.children);
                if (prev && prev.if) {
                    addIfCondition(prev, {
                        exp: el.elseif,
                        block: el
                    });
                } else if (process.env.NODE_ENV !== 'production') {
                    warn$2(
                        "v-" + (el.elseif ? ('else-if="' + el.elseif + '"') : 'else') + " " +
                        "used on element <" + (el.tag) + "> without corresponding v-if."
                    );
                }
            }

            function findPrevElement(children) {
                var i = children.length;
                while (i--) {
                    if (children[i].type === 1) {
                        return children[i]
                    } else {
                        if (process.env.NODE_ENV !== 'production' && children[i].text !== ' ') {
                            warn$2(
                                "text \"" + (children[i].text.trim()) + "\" between v-if and v-else(-if) " +
                                "will be ignored."
                            );
                        }
                        children.pop();
                    }
                }
            }

            function addIfCondition(el, condition) {
                if (!el.ifConditions) {
                    el.ifConditions = [];
                }
                el.ifConditions.push(condition);
            }

            function processOnce(el) {
                var once$$1 = getAndRemoveAttr(el, 'v-once');
                if (once$$1 != null) {
                    el.once = true;
                }
            }

            function processSlot(el) {
                if (el.tag === 'slot') {
                    el.slotName = getBindingAttr(el, 'name');
                    if (process.env.NODE_ENV !== 'production' && el.key) {
                        warn$2(
                            "`key` does not work on <slot> because slots are abstract outlets " +
                            "and can possibly expand into multiple elements. " +
                            "Use the key on a wrapping element instead."
                        );
                    }
                } else {
                    var slotScope;
                    if (el.tag === 'template') {
                        slotScope = getAndRemoveAttr(el, 'scope');
                        /* istanbul ignore if */
                        if (process.env.NODE_ENV !== 'production' && slotScope) {
                            warn$2(
                                "the \"scope\" attribute for scoped slots have been deprecated and " +
                                "replaced by \"slot-scope\" since 2.5. The new \"slot-scope\" attribute " +
                                "can also be used on plain elements in addition to <template> to " +
                                "denote scoped slots.",
                                true
                            );
                        }
                        el.slotScope = slotScope || getAndRemoveAttr(el, 'slot-scope');
                    } else if ((slotScope = getAndRemoveAttr(el, 'slot-scope'))) {
                        /* istanbul ignore if */
                        if (process.env.NODE_ENV !== 'production' && el.attrsMap['v-for']) {
                            warn$2(
                                "Ambiguous combined usage of slot-scope and v-for on <" + (el.tag) + "> " +
                                "(v-for takes higher priority). Use a wrapper <template> for the " +
                                "scoped slot to make it clearer.",
                                true
                            );
                        }
                        el.slotScope = slotScope;
                    }
                    var slotTarget = getBindingAttr(el, 'slot');
                    if (slotTarget) {
                        el.slotTarget = slotTarget === '""' ? '"default"' : slotTarget;
                        // preserve slot as an attribute for native shadow DOM compat
                        // only for non-scoped slots.
                        if (el.tag !== 'template' && !el.slotScope) {
                            addAttr(el, 'slot', slotTarget);
                        }
                    }
                }
            }

            function processComponent(el) {
                var binding;
                if ((binding = getBindingAttr(el, 'is'))) {
                    el.component = binding;
                }
                if (getAndRemoveAttr(el, 'inline-template') != null) {
                    el.inlineTemplate = true;
                }
            }

            function processAttrs(el) {
                var list = el.attrsList;
                var i, l, name, rawName, value, modifiers, isProp;
                for (i = 0, l = list.length; i < l; i++) {
                    name = rawName = list[i].name;
                    value = list[i].value;
                    if (dirRE.test(name)) {
                        // mark element as dynamic
                        el.hasBindings = true;
                        // modifiers
                        modifiers = parseModifiers(name);
                        if (modifiers) {
                            name = name.replace(modifierRE, '');
                        }
                        if (bindRE.test(name)) { // v-bind
                            name = name.replace(bindRE, '');
                            value = parseFilters(value);
                            isProp = false;
                            if (modifiers) {
                                if (modifiers.prop) {
                                    isProp = true;
                                    name = camelize(name);
                                    if (name === 'innerHtml') {
                                        name = 'innerHTML';
                                    }
                                }
                                if (modifiers.camel) {
                                    name = camelize(name);
                                }
                                if (modifiers.sync) {
                                    addHandler(
                                        el,
                                        ("update:" + (camelize(name))),
                                        genAssignmentCode(value, "$event")
                                    );
                                }
                            }
                            if (isProp || (
                                    !el.component && platformMustUseProp(el.tag, el.attrsMap.type, name)
                                )) {
                                addProp(el, name, value);
                            } else {
                                addAttr(el, name, value);
                            }
                        } else if (onRE.test(name)) { // v-on
                            name = name.replace(onRE, '');
                            addHandler(el, name, value, modifiers, false, warn$2);
                        } else { // normal directives
                            name = name.replace(dirRE, '');
                            // parse arg
                            var argMatch = name.match(argRE);
                            var arg = argMatch && argMatch[1];
                            if (arg) {
                                name = name.slice(0, -(arg.length + 1));
                            }
                            addDirective(el, name, rawName, value, arg, modifiers);
                            if (process.env.NODE_ENV !== 'production' && name === 'model') {
                                checkForAliasModel(el, value);
                            }
                        }
                    } else {
                        // literal attribute
                        if (process.env.NODE_ENV !== 'production') {
                            var res = parseText(value, delimiters);
                            if (res) {
                                warn$2(
                                    name + "=\"" + value + "\": " +
                                    'Interpolation inside attributes has been removed. ' +
                                    'Use v-bind or the colon shorthand instead. For example, ' +
                                    'instead of <div id="{{ val }}">, use <div :id="val">.'
                                );
                            }
                        }
                        addAttr(el, name, JSON.stringify(value));
                        // #6887 firefox doesn't update muted state if set via attribute
                        // even immediately after element creation
                        if (!el.component &&
                            name === 'muted' &&
                            platformMustUseProp(el.tag, el.attrsMap.type, name)) {
                            addProp(el, name, 'true');
                        }
                    }
                }
            }

            function checkInFor(el) {
                var parent = el;
                while (parent) {
                    if (parent.for !== undefined) {
                        return true
                    }
                    parent = parent.parent;
                }
                return false
            }

            function parseModifiers(name) {
                var match = name.match(modifierRE);
                if (match) {
                    var ret = {};
                    match.forEach(function (m) {
                        ret[m.slice(1)] = true;
                    });
                    return ret
                }
            }

            function makeAttrsMap(attrs) {
                var map = {};
                for (var i = 0, l = attrs.length; i < l; i++) {
                    if (
                        process.env.NODE_ENV !== 'production' &&
                        map[attrs[i].name] && !isIE && !isEdge
                    ) {
                        warn$2('duplicate attribute: ' + attrs[i].name);
                    }
                    map[attrs[i].name] = attrs[i].value;
                }
                return map
            }

// for script (e.g. type="x/template") or style, do not decode content
            function isTextTag(el) {
                return el.tag === 'script' || el.tag === 'style'
            }

            function isForbiddenTag(el) {
                return (
                    el.tag === 'style' ||
                    (el.tag === 'script' && (
                        !el.attrsMap.type ||
                        el.attrsMap.type === 'text/javascript'
                    ))
                )
            }

            var ieNSBug = /^xmlns:NS\d+/;
            var ieNSPrefix = /^NS\d+:/;

            /* istanbul ignore next */
            function guardIESVGBug(attrs) {
                var res = [];
                for (var i = 0; i < attrs.length; i++) {
                    var attr = attrs[i];
                    if (!ieNSBug.test(attr.name)) {
                        attr.name = attr.name.replace(ieNSPrefix, '');
                        res.push(attr);
                    }
                }
                return res
            }

            function checkForAliasModel(el, value) {
                var _el = el;
                while (_el) {
                    if (_el.for && _el.alias === value) {
                        warn$2(
                            "<" + (el.tag) + " v-model=\"" + value + "\">: " +
                            "You are binding v-model directly to a v-for iteration alias. " +
                            "This will not be able to modify the v-for source array because " +
                            "writing to the alias is like modifying a function local variable. " +
                            "Consider using an array of objects and use v-model on an object property instead."
                        );
                    }
                    _el = _el.parent;
                }
            }

            /*  */

            /**
             * Expand input[v-model] with dyanmic type bindings into v-if-else chains
             * Turn this:
             *   <input v-model="data[type]" :type="type">
             * into this:
             *   <input v-if="type === 'checkbox'" type="checkbox" v-model="data[type]">
             *   <input v-else-if="type === 'radio'" type="radio" v-model="data[type]">
             *   <input v-else :type="type" v-model="data[type]">
             */

            function preTransformNode(el, options) {
                if (el.tag === 'input') {
                    var map = el.attrsMap;
                    if (!map['v-model']) {
                        return
                    }

                    var typeBinding;
                    if (map[':type'] || map['v-bind:type']) {
                        typeBinding = getBindingAttr(el, 'type');
                    }
                    if (!map.type && !typeBinding && map['v-bind']) {
                        typeBinding = "(" + (map['v-bind']) + ").type";
                    }

                    if (typeBinding) {
                        var ifCondition = getAndRemoveAttr(el, 'v-if', true);
                        var ifConditionExtra = ifCondition ? ("&&(" + ifCondition + ")") : "";
                        var hasElse = getAndRemoveAttr(el, 'v-else', true) != null;
                        var elseIfCondition = getAndRemoveAttr(el, 'v-else-if', true);
                        // 1. checkbox
                        var branch0 = cloneASTElement(el);
                        // process for on the main node
                        processFor(branch0);
                        addRawAttr(branch0, 'type', 'checkbox');
                        processElement(branch0, options);
                        branch0.processed = true; // prevent it from double-processed
                        branch0.if = "(" + typeBinding + ")==='checkbox'" + ifConditionExtra;
                        addIfCondition(branch0, {
                            exp: branch0.if,
                            block: branch0
                        });
                        // 2. add radio else-if condition
                        var branch1 = cloneASTElement(el);
                        getAndRemoveAttr(branch1, 'v-for', true);
                        addRawAttr(branch1, 'type', 'radio');
                        processElement(branch1, options);
                        addIfCondition(branch0, {
                            exp: "(" + typeBinding + ")==='radio'" + ifConditionExtra,
                            block: branch1
                        });
                        // 3. other
                        var branch2 = cloneASTElement(el);
                        getAndRemoveAttr(branch2, 'v-for', true);
                        addRawAttr(branch2, ':type', typeBinding);
                        processElement(branch2, options);
                        addIfCondition(branch0, {
                            exp: ifCondition,
                            block: branch2
                        });

                        if (hasElse) {
                            branch0.else = true;
                        } else if (elseIfCondition) {
                            branch0.elseif = elseIfCondition;
                        }

                        return branch0
                    }
                }
            }

            function cloneASTElement(el) {
                return createASTElement(el.tag, el.attrsList.slice(), el.parent)
            }

            var model$2 = {
                preTransformNode: preTransformNode
            }

            var modules$1 = [
                klass$1,
                style$1,
                model$2
            ]

            /*  */

            function text(el, dir) {
                if (dir.value) {
                    addProp(el, 'textContent', ("_s(" + (dir.value) + ")"));
                }
            }

            /*  */

            function html(el, dir) {
                if (dir.value) {
                    addProp(el, 'innerHTML', ("_s(" + (dir.value) + ")"));
                }
            }

            var directives$1 = {
                model: model,
                text: text,
                html: html
            }

            /*  */

            var baseOptions = {
                expectHTML: true,
                modules: modules$1,
                directives: directives$1,
                isPreTag: isPreTag,
                isUnaryTag: isUnaryTag,
                mustUseProp: mustUseProp,
                canBeLeftOpenTag: canBeLeftOpenTag,
                isReservedTag: isReservedTag,
                getTagNamespace: getTagNamespace,
                staticKeys: genStaticKeys(modules$1)
            };

            /*  */

            var isStaticKey;
            var isPlatformReservedTag;

            var genStaticKeysCached = cached(genStaticKeys$1);

            /**
             * Goal of the optimizer: walk the generated template AST tree
             * and detect sub-trees that are purely static, i.e. parts of
             * the DOM that never needs to change.
             *
             * Once we detect these sub-trees, we can:
             *
             * 1. Hoist them into constants, so that we no longer need to
             *    create fresh nodes for them on each re-render;
             * 2. Completely skip them in the patching process.
             */
            function optimize(root, options) {
                if (!root) {
                    return
                }
                isStaticKey = genStaticKeysCached(options.staticKeys || '');
                isPlatformReservedTag = options.isReservedTag || no;
                // first pass: mark all non-static nodes.
                markStatic$1(root);
                // second pass: mark static roots.
                markStaticRoots(root, false);
            }

            function genStaticKeys$1(keys) {
                return makeMap(
                    'type,tag,attrsList,attrsMap,plain,parent,children,attrs' +
                    (keys ? ',' + keys : '')
                )
            }

            function markStatic$1(node) {
                node.static = isStatic(node);
                if (node.type === 1) {
                    // do not make component slot content static. this avoids
                    // 1. components not able to mutate slot nodes
                    // 2. static slot content fails for hot-reloading
                    if (
                        !isPlatformReservedTag(node.tag) &&
                        node.tag !== 'slot' &&
                        node.attrsMap['inline-template'] == null
                    ) {
                        return
                    }
                    for (var i = 0, l = node.children.length; i < l; i++) {
                        var child = node.children[i];
                        markStatic$1(child);
                        if (!child.static) {
                            node.static = false;
                        }
                    }
                    if (node.ifConditions) {
                        for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
                            var block = node.ifConditions[i$1].block;
                            markStatic$1(block);
                            if (!block.static) {
                                node.static = false;
                            }
                        }
                    }
                }
            }

            function markStaticRoots(node, isInFor) {
                if (node.type === 1) {
                    if (node.static || node.once) {
                        node.staticInFor = isInFor;
                    }
                    // For a node to qualify as a static root, it should have children that
                    // are not just static text. Otherwise the cost of hoisting out will
                    // outweigh the benefits and it's better off to just always render it fresh.
                    if (node.static && node.children.length && !(
                            node.children.length === 1 &&
                            node.children[0].type === 3
                        )) {
                        node.staticRoot = true;
                        return
                    } else {
                        node.staticRoot = false;
                    }
                    if (node.children) {
                        for (var i = 0, l = node.children.length; i < l; i++) {
                            markStaticRoots(node.children[i], isInFor || !!node.for);
                        }
                    }
                    if (node.ifConditions) {
                        for (var i$1 = 1, l$1 = node.ifConditions.length; i$1 < l$1; i$1++) {
                            markStaticRoots(node.ifConditions[i$1].block, isInFor);
                        }
                    }
                }
            }

            function isStatic(node) {
                if (node.type === 2) { // expression
                    return false
                }
                if (node.type === 3) { // text
                    return true
                }
                return !!(node.pre || (
                    !node.hasBindings && // no dynamic bindings
                    !node.if && !node.for && // not v-if or v-for or v-else
                    !isBuiltInTag(node.tag) && // not a built-in
                    isPlatformReservedTag(node.tag) && // not a component
                    !isDirectChildOfTemplateFor(node) &&
                    Object.keys(node).every(isStaticKey)
                ))
            }

            function isDirectChildOfTemplateFor(node) {
                while (node.parent) {
                    node = node.parent;
                    if (node.tag !== 'template') {
                        return false
                    }
                    if (node.for) {
                        return true
                    }
                }
                return false
            }

            /*  */

            var fnExpRE = /^([\w$_]+|\([^)]*?\))\s*=>|^function\s*\(/;
            var simplePathRE = /^[A-Za-z_$][\w$]*(?:\.[A-Za-z_$][\w$]*|\['[^']*?']|\["[^"]*?"]|\[\d+]|\[[A-Za-z_$][\w$]*])*$/;

// KeyboardEvent.keyCode aliases
            var keyCodes = {
                esc: 27,
                tab: 9,
                enter: 13,
                space: 32,
                up: 38,
                left: 37,
                right: 39,
                down: 40,
                'delete': [8, 46]
            };

// KeyboardEvent.key aliases
            var keyNames = {
                esc: 'Escape',
                tab: 'Tab',
                enter: 'Enter',
                space: ' ',
                // #7806: IE11 uses key names without `Arrow` prefix for arrow keys.
                up: ['Up', 'ArrowUp'],
                left: ['Left', 'ArrowLeft'],
                right: ['Right', 'ArrowRight'],
                down: ['Down', 'ArrowDown'],
                'delete': ['Backspace', 'Delete']
            };

// #4868: modifiers that prevent the execution of the listener
// need to explicitly return null so that we can determine whether to remove
// the listener for .once
            var genGuard = function (condition) {
                return ("if(" + condition + ")return null;");
            };

            var modifierCode = {
                stop: '$event.stopPropagation();',
                prevent: '$event.preventDefault();',
                self: genGuard("$event.target !== $event.currentTarget"),
                ctrl: genGuard("!$event.ctrlKey"),
                shift: genGuard("!$event.shiftKey"),
                alt: genGuard("!$event.altKey"),
                meta: genGuard("!$event.metaKey"),
                left: genGuard("'button' in $event && $event.button !== 0"),
                middle: genGuard("'button' in $event && $event.button !== 1"),
                right: genGuard("'button' in $event && $event.button !== 2")
            };

            function genHandlers(
                events,
                isNative,
                warn
            ) {
                var res = isNative ? 'nativeOn:{' : 'on:{';
                for (var name in events) {
                    res += "\"" + name + "\":" + (genHandler(name, events[name])) + ",";
                }
                return res.slice(0, -1) + '}'
            }

            function genHandler(
                name,
                handler
            ) {
                if (!handler) {
                    return 'function(){}'
                }

                if (Array.isArray(handler)) {
                    return ("[" + (handler.map(function (handler) {
                        return genHandler(name, handler);
                    }).join(',')) + "]")
                }

                var isMethodPath = simplePathRE.test(handler.value);
                var isFunctionExpression = fnExpRE.test(handler.value);

                if (!handler.modifiers) {
                    if (isMethodPath || isFunctionExpression) {
                        return handler.value
                    }
                    /* istanbul ignore if */
                    return ("function($event){" + (handler.value) + "}") // inline statement
                } else {
                    var code = '';
                    var genModifierCode = '';
                    var keys = [];
                    for (var key in handler.modifiers) {
                        if (modifierCode[key]) {
                            genModifierCode += modifierCode[key];
                            // left/right
                            if (keyCodes[key]) {
                                keys.push(key);
                            }
                        } else if (key === 'exact') {
                            var modifiers = (handler.modifiers);
                            genModifierCode += genGuard(
                                ['ctrl', 'shift', 'alt', 'meta']
                                    .filter(function (keyModifier) {
                                        return !modifiers[keyModifier];
                                    })
                                    .map(function (keyModifier) {
                                        return ("$event." + keyModifier + "Key");
                                    })
                                    .join('||')
                            );
                        } else {
                            keys.push(key);
                        }
                    }
                    if (keys.length) {
                        code += genKeyFilter(keys);
                    }
                    // Make sure modifiers like prevent and stop get executed after key filtering
                    if (genModifierCode) {
                        code += genModifierCode;
                    }
                    var handlerCode = isMethodPath
                        ? ("return " + (handler.value) + "($event)")
                        : isFunctionExpression
                            ? ("return (" + (handler.value) + ")($event)")
                            : handler.value;
                    /* istanbul ignore if */
                    return ("function($event){" + code + handlerCode + "}")
                }
            }

            function genKeyFilter(keys) {
                return ("if(!('button' in $event)&&" + (keys.map(genFilterCode).join('&&')) + ")return null;")
            }

            function genFilterCode(key) {
                var keyVal = parseInt(key, 10);
                if (keyVal) {
                    return ("$event.keyCode!==" + keyVal)
                }
                var keyCode = keyCodes[key];
                var keyName = keyNames[key];
                return (
                    "_k($event.keyCode," +
                    (JSON.stringify(key)) + "," +
                    (JSON.stringify(keyCode)) + "," +
                    "$event.key," +
                    "" + (JSON.stringify(keyName)) +
                    ")"
                )
            }

            /*  */

            function on(el, dir) {
                if (process.env.NODE_ENV !== 'production' && dir.modifiers) {
                    warn("v-on without argument does not support modifiers.");
                }
                el.wrapListeners = function (code) {
                    return ("_g(" + code + "," + (dir.value) + ")");
                };
            }

            /*  */

            function bind$1(el, dir) {
                el.wrapData = function (code) {
                    return ("_b(" + code + ",'" + (el.tag) + "'," + (dir.value) + "," + (dir.modifiers && dir.modifiers.prop ? 'true' : 'false') + (dir.modifiers && dir.modifiers.sync ? ',true' : '') + ")")
                };
            }

            /*  */

            var baseDirectives = {
                on: on,
                bind: bind$1,
                cloak: noop
            }

            /*  */

            var CodegenState = function CodegenState(options) {
                this.options = options;
                this.warn = options.warn || baseWarn;
                this.transforms = pluckModuleFunction(options.modules, 'transformCode');
                this.dataGenFns = pluckModuleFunction(options.modules, 'genData');
                this.directives = extend(extend({}, baseDirectives), options.directives);
                var isReservedTag = options.isReservedTag || no;
                this.maybeComponent = function (el) {
                    return !isReservedTag(el.tag);
                };
                this.onceId = 0;
                this.staticRenderFns = [];
            };


            function generate(
                ast,
                options
            ) {
                var state = new CodegenState(options);
                var code = ast ? genElement(ast, state) : '_c("div")';
                return {
                    render: ("with(this){return " + code + "}"),
                    staticRenderFns: state.staticRenderFns
                }
            }

            function genElement(el, state) {
                if (el.staticRoot && !el.staticProcessed) {
                    return genStatic(el, state)
                } else if (el.once && !el.onceProcessed) {
                    return genOnce(el, state)
                } else if (el.for && !el.forProcessed) {
                    return genFor(el, state)
                } else if (el.if && !el.ifProcessed) {
                    return genIf(el, state)
                } else if (el.tag === 'template' && !el.slotTarget) {
                    return genChildren(el, state) || 'void 0'
                } else if (el.tag === 'slot') {
                    return genSlot(el, state)
                } else {
                    // component or element
                    var code;
                    if (el.component) {
                        code = genComponent(el.component, el, state);
                    } else {
                        var data = el.plain ? undefined : genData$2(el, state);

                        var children = el.inlineTemplate ? null : genChildren(el, state, true);
                        code = "_c('" + (el.tag) + "'" + (data ? ("," + data) : '') + (children ? ("," + children) : '') + ")";
                    }
                    // module transforms
                    for (var i = 0; i < state.transforms.length; i++) {
                        code = state.transforms[i](el, code);
                    }
                    return code
                }
            }

// hoist static sub-trees out
            function genStatic(el, state) {
                el.staticProcessed = true;
                state.staticRenderFns.push(("with(this){return " + (genElement(el, state)) + "}"));
                return ("_m(" + (state.staticRenderFns.length - 1) + (el.staticInFor ? ',true' : '') + ")")
            }

// v-once
            function genOnce(el, state) {
                el.onceProcessed = true;
                if (el.if && !el.ifProcessed) {
                    return genIf(el, state)
                } else if (el.staticInFor) {
                    var key = '';
                    var parent = el.parent;
                    while (parent) {
                        if (parent.for) {
                            key = parent.key;
                            break
                        }
                        parent = parent.parent;
                    }
                    if (!key) {
                        process.env.NODE_ENV !== 'production' && state.warn(
                            "v-once can only be used inside v-for that is keyed. "
                        );
                        return genElement(el, state)
                    }
                    return ("_o(" + (genElement(el, state)) + "," + (state.onceId++) + "," + key + ")")
                } else {
                    return genStatic(el, state)
                }
            }

            function genIf(
                el,
                state,
                altGen,
                altEmpty
            ) {
                el.ifProcessed = true; // avoid recursion
                return genIfConditions(el.ifConditions.slice(), state, altGen, altEmpty)
            }

            function genIfConditions(
                conditions,
                state,
                altGen,
                altEmpty
            ) {
                if (!conditions.length) {
                    return altEmpty || '_e()'
                }

                var condition = conditions.shift();
                if (condition.exp) {
                    return ("(" + (condition.exp) + ")?" + (genTernaryExp(condition.block)) + ":" + (genIfConditions(conditions, state, altGen, altEmpty)))
                } else {
                    return ("" + (genTernaryExp(condition.block)))
                }

                // v-if with v-once should generate code like (a)?_m(0):_m(1)
                function genTernaryExp(el) {
                    return altGen
                        ? altGen(el, state)
                        : el.once
                            ? genOnce(el, state)
                            : genElement(el, state)
                }
            }

            function genFor(
                el,
                state,
                altGen,
                altHelper
            ) {
                var exp = el.for;
                var alias = el.alias;
                var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
                var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';

                if (process.env.NODE_ENV !== 'production' &&
                    state.maybeComponent(el) &&
                    el.tag !== 'slot' &&
                    el.tag !== 'template' &&
                    !el.key
                ) {
                    state.warn(
                        "<" + (el.tag) + " v-for=\"" + alias + " in " + exp + "\">: component lists rendered with " +
                        "v-for should have explicit keys. " +
                        "See https://vuejs.org/guide/list.html#key for more info.",
                        true /* tip */
                    );
                }

                el.forProcessed = true; // avoid recursion
                return (altHelper || '_l') + "((" + exp + ")," +
                    "function(" + alias + iterator1 + iterator2 + "){" +
                    "return " + ((altGen || genElement)(el, state)) +
                    '})'
            }

            function genData$2(el, state) {
                var data = '{';

                // directives first.
                // directives may mutate the el's other properties before they are generated.
                var dirs = genDirectives(el, state);
                if (dirs) {
                    data += dirs + ',';
                }

                // key
                if (el.key) {
                    data += "key:" + (el.key) + ",";
                }
                // ref
                if (el.ref) {
                    data += "ref:" + (el.ref) + ",";
                }
                if (el.refInFor) {
                    data += "refInFor:true,";
                }
                // pre
                if (el.pre) {
                    data += "pre:true,";
                }
                // record original tag name for components using "is" attribute
                if (el.component) {
                    data += "tag:\"" + (el.tag) + "\",";
                }
                // module data generation functions
                for (var i = 0; i < state.dataGenFns.length; i++) {
                    data += state.dataGenFns[i](el);
                }
                // attributes
                if (el.attrs) {
                    data += "attrs:{" + (genProps(el.attrs)) + "},";
                }
                // DOM props
                if (el.props) {
                    data += "domProps:{" + (genProps(el.props)) + "},";
                }
                // event handlers
                if (el.events) {
                    data += (genHandlers(el.events, false, state.warn)) + ",";
                }
                if (el.nativeEvents) {
                    data += (genHandlers(el.nativeEvents, true, state.warn)) + ",";
                }
                // slot target
                // only for non-scoped slots
                if (el.slotTarget && !el.slotScope) {
                    data += "slot:" + (el.slotTarget) + ",";
                }
                // scoped slots
                if (el.scopedSlots) {
                    data += (genScopedSlots(el.scopedSlots, state)) + ",";
                }
                // component v-model
                if (el.model) {
                    data += "model:{value:" + (el.model.value) + ",callback:" + (el.model.callback) + ",expression:" + (el.model.expression) + "},";
                }
                // inline-template
                if (el.inlineTemplate) {
                    var inlineTemplate = genInlineTemplate(el, state);
                    if (inlineTemplate) {
                        data += inlineTemplate + ",";
                    }
                }
                data = data.replace(/,$/, '') + '}';
                // v-bind data wrap
                if (el.wrapData) {
                    data = el.wrapData(data);
                }
                // v-on data wrap
                if (el.wrapListeners) {
                    data = el.wrapListeners(data);
                }
                return data
            }

            function genDirectives(el, state) {
                var dirs = el.directives;
                if (!dirs) {
                    return
                }
                var res = 'directives:[';
                var hasRuntime = false;
                var i, l, dir, needRuntime;
                for (i = 0, l = dirs.length; i < l; i++) {
                    dir = dirs[i];
                    needRuntime = true;
                    var gen = state.directives[dir.name];
                    if (gen) {
                        // compile-time directive that manipulates AST.
                        // returns true if it also needs a runtime counterpart.
                        needRuntime = !!gen(el, dir, state.warn);
                    }
                    if (needRuntime) {
                        hasRuntime = true;
                        res += "{name:\"" + (dir.name) + "\",rawName:\"" + (dir.rawName) + "\"" + (dir.value ? (",value:(" + (dir.value) + "),expression:" + (JSON.stringify(dir.value))) : '') + (dir.arg ? (",arg:\"" + (dir.arg) + "\"") : '') + (dir.modifiers ? (",modifiers:" + (JSON.stringify(dir.modifiers))) : '') + "},";
                    }
                }
                if (hasRuntime) {
                    return res.slice(0, -1) + ']'
                }
            }

            function genInlineTemplate(el, state) {
                var ast = el.children[0];
                if (process.env.NODE_ENV !== 'production' && (
                        el.children.length !== 1 || ast.type !== 1
                    )) {
                    state.warn('Inline-template components must have exactly one child element.');
                }
                if (ast.type === 1) {
                    var inlineRenderFns = generate(ast, state.options);
                    return ("inlineTemplate:{render:function(){" + (inlineRenderFns.render) + "},staticRenderFns:[" + (inlineRenderFns.staticRenderFns.map(function (code) {
                        return ("function(){" + code + "}");
                    }).join(',')) + "]}")
                }
            }

            function genScopedSlots(
                slots,
                state
            ) {
                return ("scopedSlots:_u([" + (Object.keys(slots).map(function (key) {
                    return genScopedSlot(key, slots[key], state)
                }).join(',')) + "])")
            }

            function genScopedSlot(
                key,
                el,
                state
            ) {
                if (el.for && !el.forProcessed) {
                    return genForScopedSlot(key, el, state)
                }
                var fn = "function(" + (String(el.slotScope)) + "){" +
                    "return " + (el.tag === 'template'
                        ? el.if
                            ? ((el.if) + "?" + (genChildren(el, state) || 'undefined') + ":undefined")
                            : genChildren(el, state) || 'undefined'
                        : genElement(el, state)) + "}";
                return ("{key:" + key + ",fn:" + fn + "}")
            }

            function genForScopedSlot(
                key,
                el,
                state
            ) {
                var exp = el.for;
                var alias = el.alias;
                var iterator1 = el.iterator1 ? ("," + (el.iterator1)) : '';
                var iterator2 = el.iterator2 ? ("," + (el.iterator2)) : '';
                el.forProcessed = true; // avoid recursion
                return "_l((" + exp + ")," +
                    "function(" + alias + iterator1 + iterator2 + "){" +
                    "return " + (genScopedSlot(key, el, state)) +
                    '})'
            }

            function genChildren(
                el,
                state,
                checkSkip,
                altGenElement,
                altGenNode
            ) {
                var children = el.children;
                if (children.length) {
                    var el$1 = children[0];
                    // optimize single v-for
                    if (children.length === 1 &&
                        el$1.for &&
                        el$1.tag !== 'template' &&
                        el$1.tag !== 'slot'
                    ) {
                        return (altGenElement || genElement)(el$1, state)
                    }
                    var normalizationType = checkSkip
                        ? getNormalizationType(children, state.maybeComponent)
                        : 0;
                    var gen = altGenNode || genNode;
                    return ("[" + (children.map(function (c) {
                        return gen(c, state);
                    }).join(',')) + "]" + (normalizationType ? ("," + normalizationType) : ''))
                }
            }

// determine the normalization needed for the children array.
// 0: no normalization needed
// 1: simple normalization needed (possible 1-level deep nested array)
// 2: full normalization needed
            function getNormalizationType(
                children,
                maybeComponent
            ) {
                var res = 0;
                for (var i = 0; i < children.length; i++) {
                    var el = children[i];
                    if (el.type !== 1) {
                        continue
                    }
                    if (needsNormalization(el) ||
                        (el.ifConditions && el.ifConditions.some(function (c) {
                            return needsNormalization(c.block);
                        }))) {
                        res = 2;
                        break
                    }
                    if (maybeComponent(el) ||
                        (el.ifConditions && el.ifConditions.some(function (c) {
                            return maybeComponent(c.block);
                        }))) {
                        res = 1;
                    }
                }
                return res
            }

            function needsNormalization(el) {
                return el.for !== undefined || el.tag === 'template' || el.tag === 'slot'
            }

            function genNode(node, state) {
                if (node.type === 1) {
                    return genElement(node, state)
                }
                if (node.type === 3 && node.isComment) {
                    return genComment(node)
                } else {
                    return genText(node)
                }
            }

            function genText(text) {
                return ("_v(" + (text.type === 2
                    ? text.expression // no need for () because already wrapped in _s()
                    : transformSpecialNewlines(JSON.stringify(text.text))) + ")")
            }

            function genComment(comment) {
                return ("_e(" + (JSON.stringify(comment.text)) + ")")
            }

            function genSlot(el, state) {
                var slotName = el.slotName || '"default"';
                var children = genChildren(el, state);
                var res = "_t(" + slotName + (children ? ("," + children) : '');
                var attrs = el.attrs && ("{" + (el.attrs.map(function (a) {
                    return ((camelize(a.name)) + ":" + (a.value));
                }).join(',')) + "}");
                var bind$$1 = el.attrsMap['v-bind'];
                if ((attrs || bind$$1) && !children) {
                    res += ",null";
                }
                if (attrs) {
                    res += "," + attrs;
                }
                if (bind$$1) {
                    res += (attrs ? '' : ',null') + "," + bind$$1;
                }
                return res + ')'
            }

// componentName is el.component, take it as argument to shun flow's pessimistic refinement
            function genComponent(
                componentName,
                el,
                state
            ) {
                var children = el.inlineTemplate ? null : genChildren(el, state, true);
                return ("_c(" + componentName + "," + (genData$2(el, state)) + (children ? ("," + children) : '') + ")")
            }

            function genProps(props) {
                var res = '';
                for (var i = 0; i < props.length; i++) {
                    var prop = props[i];
                    /* istanbul ignore if */
                    {
                        res += "\"" + (prop.name) + "\":" + (transformSpecialNewlines(prop.value)) + ",";
                    }
                }
                return res.slice(0, -1)
            }

// #3895, #4268
            function transformSpecialNewlines(text) {
                return text
                    .replace(/\u2028/g, '\\u2028')
                    .replace(/\u2029/g, '\\u2029')
            }

            /*  */

// these keywords should not appear inside expressions, but operators like
// typeof, instanceof and in are allowed
            var prohibitedKeywordRE = new RegExp('\\b' + (
                'do,if,for,let,new,try,var,case,else,with,await,break,catch,class,const,' +
                'super,throw,while,yield,delete,export,import,return,switch,default,' +
                'extends,finally,continue,debugger,function,arguments'
            ).split(',').join('\\b|\\b') + '\\b');

// these unary operators should not be used as property/method names
            var unaryOperatorsRE = new RegExp('\\b' + (
                'delete,typeof,void'
            ).split(',').join('\\s*\\([^\\)]*\\)|\\b') + '\\s*\\([^\\)]*\\)');

// strip strings in expressions
            var stripStringRE = /'(?:[^'\\]|\\.)*'|"(?:[^"\\]|\\.)*"|`(?:[^`\\]|\\.)*\$\{|\}(?:[^`\\]|\\.)*`|`(?:[^`\\]|\\.)*`/g;

// detect problematic expressions in a template
            function detectErrors(ast) {
                var errors = [];
                if (ast) {
                    checkNode(ast, errors);
                }
                return errors
            }

            function checkNode(node, errors) {
                if (node.type === 1) {
                    for (var name in node.attrsMap) {
                        if (dirRE.test(name)) {
                            var value = node.attrsMap[name];
                            if (value) {
                                if (name === 'v-for') {
                                    checkFor(node, ("v-for=\"" + value + "\""), errors);
                                } else if (onRE.test(name)) {
                                    checkEvent(value, (name + "=\"" + value + "\""), errors);
                                } else {
                                    checkExpression(value, (name + "=\"" + value + "\""), errors);
                                }
                            }
                        }
                    }
                    if (node.children) {
                        for (var i = 0; i < node.children.length; i++) {
                            checkNode(node.children[i], errors);
                        }
                    }
                } else if (node.type === 2) {
                    checkExpression(node.expression, node.text, errors);
                }
            }

            function checkEvent(exp, text, errors) {
                var stipped = exp.replace(stripStringRE, '');
                var keywordMatch = stipped.match(unaryOperatorsRE);
                if (keywordMatch && stipped.charAt(keywordMatch.index - 1) !== '$') {
                    errors.push(
                        "avoid using JavaScript unary operator as property name: " +
                        "\"" + (keywordMatch[0]) + "\" in expression " + (text.trim())
                    );
                }
                checkExpression(exp, text, errors);
            }

            function checkFor(node, text, errors) {
                checkExpression(node.for || '', text, errors);
                checkIdentifier(node.alias, 'v-for alias', text, errors);
                checkIdentifier(node.iterator1, 'v-for iterator', text, errors);
                checkIdentifier(node.iterator2, 'v-for iterator', text, errors);
            }

            function checkIdentifier(
                ident,
                type,
                text,
                errors
            ) {
                if (typeof ident === 'string') {
                    try {
                        new Function(("var " + ident + "=_"));
                    } catch (e) {
                        errors.push(("invalid " + type + " \"" + ident + "\" in expression: " + (text.trim())));
                    }
                }
            }

            function checkExpression(exp, text, errors) {
                try {
                    new Function(("return " + exp));
                } catch (e) {
                    var keywordMatch = exp.replace(stripStringRE, '').match(prohibitedKeywordRE);
                    if (keywordMatch) {
                        errors.push(
                            "avoid using JavaScript keyword as property name: " +
                            "\"" + (keywordMatch[0]) + "\"\n  Raw expression: " + (text.trim())
                        );
                    } else {
                        errors.push(
                            "invalid expression: " + (e.message) + " in\n\n" +
                            "    " + exp + "\n\n" +
                            "  Raw expression: " + (text.trim()) + "\n"
                        );
                    }
                }
            }

            /*  */

            function createFunction(code, errors) {
                try {
                    return new Function(code)
                } catch (err) {
                    errors.push({err: err, code: code});
                    return noop
                }
            }

            function createCompileToFunctionFn(compile) {
                var cache = Object.create(null);

                return function compileToFunctions(
                    template,
                    options,
                    vm
                ) {
                    options = extend({}, options);
                    var warn$$1 = options.warn || warn;
                    delete options.warn;

                    /* istanbul ignore if */
                    if (process.env.NODE_ENV !== 'production') {
                        // detect possible CSP restriction
                        try {
                            new Function('return 1');
                        } catch (e) {
                            if (e.toString().match(/unsafe-eval|CSP/)) {
                                warn$$1(
                                    'It seems you are using the standalone build of Vue.js in an ' +
                                    'environment with Content Security Policy that prohibits unsafe-eval. ' +
                                    'The template compiler cannot work in this environment. Consider ' +
                                    'relaxing the policy to allow unsafe-eval or pre-compiling your ' +
                                    'templates into render functions.'
                                );
                            }
                        }
                    }

                    // check cache
                    var key = options.delimiters
                        ? String(options.delimiters) + template
                        : template;
                    if (cache[key]) {
                        return cache[key]
                    }

                    // compile
                    var compiled = compile(template, options);

                    // check compilation errors/tips
                    if (process.env.NODE_ENV !== 'production') {
                        if (compiled.errors && compiled.errors.length) {
                            warn$$1(
                                "Error compiling template:\n\n" + template + "\n\n" +
                                compiled.errors.map(function (e) {
                                    return ("- " + e);
                                }).join('\n') + '\n',
                                vm
                            );
                        }
                        if (compiled.tips && compiled.tips.length) {
                            compiled.tips.forEach(function (msg) {
                                return tip(msg, vm);
                            });
                        }
                    }

                    // turn code into functions
                    var res = {};
                    var fnGenErrors = [];
                    res.render = createFunction(compiled.render, fnGenErrors);
                    res.staticRenderFns = compiled.staticRenderFns.map(function (code) {
                        return createFunction(code, fnGenErrors)
                    });

                    // check function generation errors.
                    // this should only happen if there is a bug in the compiler itself.
                    // mostly for codegen development use
                    /* istanbul ignore if */
                    if (process.env.NODE_ENV !== 'production') {
                        if ((!compiled.errors || !compiled.errors.length) && fnGenErrors.length) {
                            warn$$1(
                                "Failed to generate render function:\n\n" +
                                fnGenErrors.map(function (ref) {
                                    var err = ref.err;
                                    var code = ref.code;

                                    return ((err.toString()) + " in\n\n" + code + "\n");
                                }).join('\n'),
                                vm
                            );
                        }
                    }

                    return (cache[key] = res)
                }
            }

            /*  */

            function createCompilerCreator(baseCompile) {
                return function createCompiler(baseOptions) {
                    function compile(
                        template,
                        options
                    ) {
                        var finalOptions = Object.create(baseOptions);
                        var errors = [];
                        var tips = [];
                        finalOptions.warn = function (msg, tip) {
                            (tip ? tips : errors).push(msg);
                        };

                        if (options) {
                            // merge custom modules
                            if (options.modules) {
                                finalOptions.modules =
                                    (baseOptions.modules || []).concat(options.modules);
                            }
                            // merge custom directives
                            if (options.directives) {
                                finalOptions.directives = extend(
                                    Object.create(baseOptions.directives || null),
                                    options.directives
                                );
                            }
                            // copy other options
                            for (var key in options) {
                                if (key !== 'modules' && key !== 'directives') {
                                    finalOptions[key] = options[key];
                                }
                            }
                        }

                        var compiled = baseCompile(template, finalOptions);
                        if (process.env.NODE_ENV !== 'production') {
                            errors.push.apply(errors, detectErrors(compiled.ast));
                        }
                        compiled.errors = errors;
                        compiled.tips = tips;
                        return compiled
                    }

                    return {
                        compile: compile,
                        compileToFunctions: createCompileToFunctionFn(compile)
                    }
                }
            }

            /*  */

// `createCompilerCreator` allows creating compilers that use alternative
// parser/optimizer/codegen, e.g the SSR optimizing compiler.
// Here we just export a default compiler using the default parts.
            var createCompiler = createCompilerCreator(function baseCompile(
                template,
                options
            ) {
                var ast = parse(template.trim(), options);
                if (options.optimize !== false) {
                    optimize(ast, options);
                }
                var code = generate(ast, options);
                return {
                    ast: ast,
                    render: code.render,
                    staticRenderFns: code.staticRenderFns
                }
            });

            /*  */

            var ref$1 = createCompiler(baseOptions);
            var compileToFunctions = ref$1.compileToFunctions;

            /*  */

// check whether current browser encodes a char inside attribute values
            var div;

            function getShouldDecode(href) {
                div = div || document.createElement('div');
                div.innerHTML = href ? "<a href=\"\n\"/>" : "<div a=\"\n\"/>";
                return div.innerHTML.indexOf('&#10;') > 0
            }

// #3663: IE encodes newlines inside attribute values while other browsers don't
            var shouldDecodeNewlines = inBrowser ? getShouldDecode(false) : false;
// #6828: chrome encodes content in a[href]
            var shouldDecodeNewlinesForHref = inBrowser ? getShouldDecode(true) : false;

            /*  */

            var idToTemplate = cached(function (id) {
                var el = query(id);
                return el && el.innerHTML
            });

            var mount = Vue.prototype.$mount;
            Vue.prototype.$mount = function (
                el,
                hydrating
            ) {
                el = el && query(el);

                /* istanbul ignore if */
                if (el === document.body || el === document.documentElement) {
                    process.env.NODE_ENV !== 'production' && warn(
                        "Do not mount Vue to <html> or <body> - mount to normal elements instead."
                    );
                    return this
                }

                var options = this.$options;
                // resolve template/el and convert to render function
                if (!options.render) {
                    var template = options.template;
                    if (template) {
                        if (typeof template === 'string') {
                            if (template.charAt(0) === '#') {
                                template = idToTemplate(template);
                                /* istanbul ignore if */
                                if (process.env.NODE_ENV !== 'production' && !template) {
                                    warn(
                                        ("Template element not found or is empty: " + (options.template)),
                                        this
                                    );
                                }
                            }
                        } else if (template.nodeType) {
                            template = template.innerHTML;
                        } else {
                            if (process.env.NODE_ENV !== 'production') {
                                warn('invalid template option:' + template, this);
                            }
                            return this
                        }
                    } else if (el) {
                        template = getOuterHTML(el);
                    }
                    if (template) {
                        /* istanbul ignore if */
                        if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
                            mark('compile');
                        }

                        var ref = compileToFunctions(template, {
                            shouldDecodeNewlines: shouldDecodeNewlines,
                            shouldDecodeNewlinesForHref: shouldDecodeNewlinesForHref,
                            delimiters: options.delimiters,
                            comments: options.comments
                        }, this);
                        var render = ref.render;
                        var staticRenderFns = ref.staticRenderFns;
                        options.render = render;
                        options.staticRenderFns = staticRenderFns;

                        /* istanbul ignore if */
                        if (process.env.NODE_ENV !== 'production' && config.performance && mark) {
                            mark('compile end');
                            measure(("vue " + (this._name) + " compile"), 'compile', 'compile end');
                        }
                    }
                }
                return mount.call(this, el, hydrating)
            };

            /**
             * Get outerHTML of elements, taking care
             * of SVG elements in IE as well.
             */
            function getOuterHTML(el) {
                if (el.outerHTML) {
                    return el.outerHTML
                } else {
                    var container = document.createElement('div');
                    container.appendChild(el.cloneNode(true));
                    return container.innerHTML
                }
            }

            Vue.compile = compileToFunctions;

            /* harmony default export */
            __webpack_exports__["default"] = (Vue);

            /* WEBPACK VAR INJECTION */
        }.call(__webpack_exports__, __webpack_require__(47), __webpack_require__(46), __webpack_require__(327).setImmediate))

        /***/
    }),
    /* 327 */
    /***/ (function (module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function (global) {
            var apply = Function.prototype.apply;

// DOM APIs, for completeness

            exports.setTimeout = function () {
                return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);
            };
            exports.setInterval = function () {
                return new Timeout(apply.call(setInterval, window, arguments), clearInterval);
            };
            exports.clearTimeout =
                exports.clearInterval = function (timeout) {
                    if (timeout) {
                        timeout.close();
                    }
                };

            function Timeout(id, clearFn) {
                this._id = id;
                this._clearFn = clearFn;
            }

            Timeout.prototype.unref = Timeout.prototype.ref = function () {
            };
            Timeout.prototype.close = function () {
                this._clearFn.call(window, this._id);
            };

// Does not start the time, just sets up the members needed.
            exports.enroll = function (item, msecs) {
                clearTimeout(item._idleTimeoutId);
                item._idleTimeout = msecs;
            };

            exports.unenroll = function (item) {
                clearTimeout(item._idleTimeoutId);
                item._idleTimeout = -1;
            };

            exports._unrefActive = exports.active = function (item) {
                clearTimeout(item._idleTimeoutId);

                var msecs = item._idleTimeout;
                if (msecs >= 0) {
                    item._idleTimeoutId = setTimeout(function onTimeout() {
                        if (item._onTimeout)
                            item._onTimeout();
                    }, msecs);
                }
            };

// setimmediate attaches itself to the global object
            __webpack_require__(328);
// On some exotic environments, it's not clear which object `setimmeidate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
            exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                (typeof global !== "undefined" && global.setImmediate) ||
                (this && this.setImmediate);
            exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                (typeof global !== "undefined" && global.clearImmediate) ||
                (this && this.clearImmediate);

            /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(46)))

        /***/
    }),
    /* 328 */
    /***/ (function (module, exports, __webpack_require__) {

        /* WEBPACK VAR INJECTION */
        (function (global, process) {
            (function (global, undefined) {
                "use strict";

                if (global.setImmediate) {
                    return;
                }

                var nextHandle = 1; // Spec says greater than zero
                var tasksByHandle = {};
                var currentlyRunningATask = false;
                var doc = global.document;
                var registerImmediate;

                function setImmediate(callback) {
                    // Callback can either be a function or a string
                    if (typeof callback !== "function") {
                        callback = new Function("" + callback);
                    }
                    // Copy function arguments
                    var args = new Array(arguments.length - 1);
                    for (var i = 0; i < args.length; i++) {
                        args[i] = arguments[i + 1];
                    }
                    // Store and register the task
                    var task = {callback: callback, args: args};
                    tasksByHandle[nextHandle] = task;
                    registerImmediate(nextHandle);
                    return nextHandle++;
                }

                function clearImmediate(handle) {
                    delete tasksByHandle[handle];
                }

                function run(task) {
                    var callback = task.callback;
                    var args = task.args;
                    switch (args.length) {
                        case 0:
                            callback();
                            break;
                        case 1:
                            callback(args[0]);
                            break;
                        case 2:
                            callback(args[0], args[1]);
                            break;
                        case 3:
                            callback(args[0], args[1], args[2]);
                            break;
                        default:
                            callback.apply(undefined, args);
                            break;
                    }
                }

                function runIfPresent(handle) {
                    // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
                    // So if we're currently running a task, we'll need to delay this invocation.
                    if (currentlyRunningATask) {
                        // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
                        // "too much recursion" error.
                        setTimeout(runIfPresent, 0, handle);
                    } else {
                        var task = tasksByHandle[handle];
                        if (task) {
                            currentlyRunningATask = true;
                            try {
                                run(task);
                            } finally {
                                clearImmediate(handle);
                                currentlyRunningATask = false;
                            }
                        }
                    }
                }

                function installNextTickImplementation() {
                    registerImmediate = function (handle) {
                        process.nextTick(function () {
                            runIfPresent(handle);
                        });
                    };
                }

                function canUsePostMessage() {
                    // The test against `importScripts` prevents this implementation from being installed inside a web worker,
                    // where `global.postMessage` means something completely different and can't be used for this purpose.
                    if (global.postMessage && !global.importScripts) {
                        var postMessageIsAsynchronous = true;
                        var oldOnMessage = global.onmessage;
                        global.onmessage = function () {
                            postMessageIsAsynchronous = false;
                        };
                        global.postMessage("", "*");
                        global.onmessage = oldOnMessage;
                        return postMessageIsAsynchronous;
                    }
                }

                function installPostMessageImplementation() {
                    // Installs an event handler on `global` for the `message` event: see
                    // * https://developer.mozilla.org/en/DOM/window.postMessage
                    // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

                    var messagePrefix = "setImmediate$" + Math.random() + "$";
                    var onGlobalMessage = function (event) {
                        if (event.source === global &&
                            typeof event.data === "string" &&
                            event.data.indexOf(messagePrefix) === 0) {
                            runIfPresent(+event.data.slice(messagePrefix.length));
                        }
                    };

                    if (global.addEventListener) {
                        global.addEventListener("message", onGlobalMessage, false);
                    } else {
                        global.attachEvent("onmessage", onGlobalMessage);
                    }

                    registerImmediate = function (handle) {
                        global.postMessage(messagePrefix + handle, "*");
                    };
                }

                function installMessageChannelImplementation() {
                    var channel = new MessageChannel();
                    channel.port1.onmessage = function (event) {
                        var handle = event.data;
                        runIfPresent(handle);
                    };

                    registerImmediate = function (handle) {
                        channel.port2.postMessage(handle);
                    };
                }

                function installReadyStateChangeImplementation() {
                    var html = doc.documentElement;
                    registerImmediate = function (handle) {
                        // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
                        // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
                        var script = doc.createElement("script");
                        script.onreadystatechange = function () {
                            runIfPresent(handle);
                            script.onreadystatechange = null;
                            html.removeChild(script);
                            script = null;
                        };
                        html.appendChild(script);
                    };
                }

                function installSetTimeoutImplementation() {
                    registerImmediate = function (handle) {
                        setTimeout(runIfPresent, 0, handle);
                    };
                }

                // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
                var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
                attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

                // Don't get fooled by e.g. browserify environments.
                if ({}.toString.call(global.process) === "[object process]") {
                    // For Node.js before 0.9
                    installNextTickImplementation();

                } else if (canUsePostMessage()) {
                    // For non-IE10 modern browsers
                    installPostMessageImplementation();

                } else if (global.MessageChannel) {
                    // For web workers, where supported
                    installMessageChannelImplementation();

                } else if (doc && "onreadystatechange" in doc.createElement("script")) {
                    // For IE 6–8
                    installReadyStateChangeImplementation();

                } else {
                    // For older browsers
                    installSetTimeoutImplementation();
                }

                attachTo.setImmediate = setImmediate;
                attachTo.clearImmediate = clearImmediate;
            }(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

            /* WEBPACK VAR INJECTION */
        }.call(exports, __webpack_require__(46), __webpack_require__(47)))

        /***/
    }),
    /* 329 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__TheConstructor_vue_vue_type_template_id_b93400f6___ = __webpack_require__(330);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_1__TheConstructor_vue_vue_type_script_lang_js___ = __webpack_require__(113);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_1__TheConstructor_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_1__TheConstructor_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(36);


        /* normalize component */

        var component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
            __WEBPACK_IMPORTED_MODULE_1__TheConstructor_vue_vue_type_script_lang_js___["default"],
            __WEBPACK_IMPORTED_MODULE_0__TheConstructor_vue_vue_type_template_id_b93400f6___["a" /* render */],
            __WEBPACK_IMPORTED_MODULE_0__TheConstructor_vue_vue_type_template_id_b93400f6___["b" /* staticRenderFns */],
            false,
            null,
            null,
            null
        )

        /* hot reload */
        if (false) {
            var api = require("/Users/vintage/Desktop/myProject/talan_vintage/node_modules/vue-hot-reload-api/dist/index.js")
            api.install(require('vue'))
            if (api.compatible) {
                module.hot.accept()
                if (!module.hot.data) {
                    api.createRecord('b93400f6', component.options)
                } else {
                    api.reload('b93400f6', component.options)
                }
                module.hot.accept("./TheConstructor.vue?vue&type=template&id=b93400f6&", function () {
                    api.rerender('b93400f6', {
                        render: render,
                        staticRenderFns: staticRenderFns
                    })
                })
            }
        }
        component.options.__file = "src/js/componentsVue/TheConstructor.vue"
        /* harmony default export */
        __webpack_exports__["default"] = (component.exports);

        /***/
    }),
    /* 330 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheConstructor_vue_vue_type_template_id_b93400f6___ = __webpack_require__(331);
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheConstructor_vue_vue_type_template_id_b93400f6___["a"];
        });
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheConstructor_vue_vue_type_template_id_b93400f6___["b"];
        });


        /***/
    }),
    /* 331 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return render;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return staticRenderFns;
        });
        var render = function () {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _vm.response !== null
                ? _c("div", {staticClass: "vue-app-flat"}, [
                    _vm.preloader
                        ? _c("div", {staticClass: "vue-app-flat-preloader"}, [
                            _c("img", {
                                staticClass: "vue-app-flat-preloader__img",
                                attrs: {src: _vm.response.global.loadingSrc, alt: "loading"}
                            })
                        ])
                        : _vm._e(),
                    _vm._v(" "),
                    _c("div", {staticClass: "vue-app-flat__content"}, [
                        _c(
                            "div",
                            {staticClass: "wrap wrap_mobile_full"},
                            [_c("TheTabs", {attrs: {items: _vm.response.items}})],
                            1
                        ),
                        _vm._v(" "),
                        _c("div", {staticClass: "wrap wrap_mobile_full"}, [
                            _c("div", {staticClass: "vue-app-body"}, [
                                _c(
                                    "div",
                                    {staticClass: "vue-app-body__imgBuilder"},
                                    [
                                        _c("TheImageBuilder", {
                                            attrs: {items: _vm.response.items}
                                        })
                                    ],
                                    1
                                ),
                                _vm._v(" "),
                                _c(
                                    "aside",
                                    {staticClass: "vue-app-body__aside"},
                                    [
                                        _c("TheFilters", {
                                            staticClass: "vue-app-body__filters",
                                            attrs: {items: _vm.response.items}
                                        }),
                                        _vm._v(" "),
                                        _c("TheFiltersForms", {
                                            staticClass: "vue-app-body__forms",
                                            attrs: {
                                                global: _vm.response.global,
                                                items: _vm.response.items
                                            }
                                        })
                                    ],
                                    1
                                )
                            ])
                        ]),
                        _vm._v(" "),
                        _c(
                            "div",
                            {staticClass: "vue-app-footer"},
                            [
                                _c("TheCard", {
                                    attrs: {
                                        global: _vm.response.global,
                                        items: _vm.response.items
                                    }
                                })
                            ],
                            1
                        )
                    ])
                ])
                : _vm._e()
        }
        var staticRenderFns = []
        render._withStripped = true


        /***/
    }),
    /* 332 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var utils = __webpack_require__(13);
        var bind = __webpack_require__(116);
        var Axios = __webpack_require__(334);
        var defaults = __webpack_require__(80);

        /**
         * Create an instance of Axios
         *
         * @param {Object} defaultConfig The default config for the instance
         * @return {Axios} A new instance of Axios
         */
        function createInstance(defaultConfig) {
            var context = new Axios(defaultConfig);
            var instance = bind(Axios.prototype.request, context);

            // Copy axios.prototype to instance
            utils.extend(instance, Axios.prototype, context);

            // Copy context to instance
            utils.extend(instance, context);

            return instance;
        }

// Create the default instance to be exported
        var axios = createInstance(defaults);

// Expose Axios class to allow class inheritance
        axios.Axios = Axios;

// Factory for creating new instances
        axios.create = function create(instanceConfig) {
            return createInstance(utils.merge(defaults, instanceConfig));
        };

// Expose Cancel & CancelToken
        axios.Cancel = __webpack_require__(120);
        axios.CancelToken = __webpack_require__(348);
        axios.isCancel = __webpack_require__(119);

// Expose all/spread
        axios.all = function all(promises) {
            return Promise.all(promises);
        };
        axios.spread = __webpack_require__(349);

        module.exports = axios;

// Allow use of default import syntax in TypeScript
        module.exports.default = axios;


        /***/
    }),
    /* 333 */
    /***/ (function (module, exports) {

        /*!
 * Determine if an object is a Buffer
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */

// The _isBuffer check is for Safari 5-7 support, because it's missing
// Object.prototype.constructor. Remove this eventually
        module.exports = function (obj) {
            return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)
        }

        function isBuffer(obj) {
            return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
        }

// For Node v0.10 support. Remove this eventually.
        function isSlowBuffer(obj) {
            return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))
        }


        /***/
    }),
    /* 334 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var defaults = __webpack_require__(80);
        var utils = __webpack_require__(13);
        var InterceptorManager = __webpack_require__(343);
        var dispatchRequest = __webpack_require__(344);

        /**
         * Create a new instance of Axios
         *
         * @param {Object} instanceConfig The default config for the instance
         */
        function Axios(instanceConfig) {
            this.defaults = instanceConfig;
            this.interceptors = {
                request: new InterceptorManager(),
                response: new InterceptorManager()
            };
        }

        /**
         * Dispatch a request
         *
         * @param {Object} config The config specific for this request (merged with this.defaults)
         */
        Axios.prototype.request = function request(config) {
            /*eslint no-param-reassign:0*/
            // Allow for axios('example/url'[, config]) a la fetch API
            if (typeof config === 'string') {
                config = utils.merge({
                    url: arguments[0]
                }, arguments[1]);
            }

            config = utils.merge(defaults, {method: 'get'}, this.defaults, config);
            config.method = config.method.toLowerCase();

            // Hook up interceptors middleware
            var chain = [dispatchRequest, undefined];
            var promise = Promise.resolve(config);

            this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {
                chain.unshift(interceptor.fulfilled, interceptor.rejected);
            });

            this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {
                chain.push(interceptor.fulfilled, interceptor.rejected);
            });

            while (chain.length) {
                promise = promise.then(chain.shift(), chain.shift());
            }

            return promise;
        };

// Provide aliases for supported request methods
        utils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {
            /*eslint func-names:0*/
            Axios.prototype[method] = function (url, config) {
                return this.request(utils.merge(config || {}, {
                    method: method,
                    url: url
                }));
            };
        });

        utils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {
            /*eslint func-names:0*/
            Axios.prototype[method] = function (url, data, config) {
                return this.request(utils.merge(config || {}, {
                    method: method,
                    url: url,
                    data: data
                }));
            };
        });

        module.exports = Axios;


        /***/
    }),
    /* 335 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var utils = __webpack_require__(13);

        module.exports = function normalizeHeaderName(headers, normalizedName) {
            utils.forEach(headers, function processHeader(value, name) {
                if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {
                    headers[normalizedName] = value;
                    delete headers[name];
                }
            });
        };


        /***/
    }),
    /* 336 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var createError = __webpack_require__(118);

        /**
         * Resolve or reject a Promise based on response status.
         *
         * @param {Function} resolve A function that resolves the promise.
         * @param {Function} reject A function that rejects the promise.
         * @param {object} response The response.
         */
        module.exports = function settle(resolve, reject, response) {
            var validateStatus = response.config.validateStatus;
            // Note: status is not exposed by XDomainRequest
            if (!response.status || !validateStatus || validateStatus(response.status)) {
                resolve(response);
            } else {
                reject(createError(
                    'Request failed with status code ' + response.status,
                    response.config,
                    null,
                    response.request,
                    response
                ));
            }
        };


        /***/
    }),
    /* 337 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        /**
         * Update an Error with the specified config, error code, and response.
         *
         * @param {Error} error The error to update.
         * @param {Object} config The config.
         * @param {string} [code] The error code (for example, 'ECONNABORTED').
         * @param {Object} [request] The request.
         * @param {Object} [response] The response.
         * @returns {Error} The error.
         */
        module.exports = function enhanceError(error, config, code, request, response) {
            error.config = config;
            if (code) {
                error.code = code;
            }
            error.request = request;
            error.response = response;
            return error;
        };


        /***/
    }),
    /* 338 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var utils = __webpack_require__(13);

        function encode(val) {
            return encodeURIComponent(val).replace(/%40/gi, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',').replace(/%20/g, '+').replace(/%5B/gi, '[').replace(/%5D/gi, ']');
        }

        /**
         * Build a URL by appending params to the end
         *
         * @param {string} url The base of the url (e.g., http://www.google.com)
         * @param {object} [params] The params to be appended
         * @returns {string} The formatted url
         */
        module.exports = function buildURL(url, params, paramsSerializer) {
            /*eslint no-param-reassign:0*/
            if (!params) {
                return url;
            }

            var serializedParams;
            if (paramsSerializer) {
                serializedParams = paramsSerializer(params);
            } else if (utils.isURLSearchParams(params)) {
                serializedParams = params.toString();
            } else {
                var parts = [];

                utils.forEach(params, function serialize(val, key) {
                    if (val === null || typeof val === 'undefined') {
                        return;
                    }

                    if (utils.isArray(val)) {
                        key = key + '[]';
                    } else {
                        val = [val];
                    }

                    utils.forEach(val, function parseValue(v) {
                        if (utils.isDate(v)) {
                            v = v.toISOString();
                        } else if (utils.isObject(v)) {
                            v = JSON.stringify(v);
                        }
                        parts.push(encode(key) + '=' + encode(v));
                    });
                });

                serializedParams = parts.join('&');
            }

            if (serializedParams) {
                url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;
            }

            return url;
        };


        /***/
    }),
    /* 339 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var utils = __webpack_require__(13);

// Headers whose duplicates are ignored by node
// c.f. https://nodejs.org/api/http.html#http_message_headers
        var ignoreDuplicateOf = [
            'age', 'authorization', 'content-length', 'content-type', 'etag',
            'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',
            'last-modified', 'location', 'max-forwards', 'proxy-authorization',
            'referer', 'retry-after', 'user-agent'
        ];

        /**
         * Parse headers into an object
         *
         * ```
         * Date: Wed, 27 Aug 2014 08:58:49 GMT
         * Content-Type: application/json
         * Connection: keep-alive
         * Transfer-Encoding: chunked
         * ```
         *
         * @param {String} headers Headers needing to be parsed
         * @returns {Object} Headers parsed into an object
         */
        module.exports = function parseHeaders(headers) {
            var parsed = {};
            var key;
            var val;
            var i;

            if (!headers) {
                return parsed;
            }

            utils.forEach(headers.split('\n'), function parser(line) {
                i = line.indexOf(':');
                key = utils.trim(line.substr(0, i)).toLowerCase();
                val = utils.trim(line.substr(i + 1));

                if (key) {
                    if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {
                        return;
                    }
                    if (key === 'set-cookie') {
                        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);
                    } else {
                        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;
                    }
                }
            });

            return parsed;
        };


        /***/
    }),
    /* 340 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var utils = __webpack_require__(13);

        module.exports = (
            utils.isStandardBrowserEnv() ?

                // Standard browser envs have full support of the APIs needed to test
                // whether the request URL is of the same origin as current location.
                (function standardBrowserEnv() {
                    var msie = /(msie|trident)/i.test(navigator.userAgent);
                    var urlParsingNode = document.createElement('a');
                    var originURL;

                    /**
                     * Parse a URL to discover it's components
                     *
                     * @param {String} url The URL to be parsed
                     * @returns {Object}
                     */
                    function resolveURL(url) {
                        var href = url;

                        if (msie) {
                            // IE needs attribute set twice to normalize properties
                            urlParsingNode.setAttribute('href', href);
                            href = urlParsingNode.href;
                        }

                        urlParsingNode.setAttribute('href', href);

                        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils
                        return {
                            href: urlParsingNode.href,
                            protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',
                            host: urlParsingNode.host,
                            search: urlParsingNode.search ? urlParsingNode.search.replace(/^\?/, '') : '',
                            hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',
                            hostname: urlParsingNode.hostname,
                            port: urlParsingNode.port,
                            pathname: (urlParsingNode.pathname.charAt(0) === '/') ?
                                urlParsingNode.pathname :
                                '/' + urlParsingNode.pathname
                        };
                    }

                    originURL = resolveURL(window.location.href);

                    /**
                     * Determine if a URL shares the same origin as the current location
                     *
                     * @param {String} requestURL The URL to test
                     * @returns {boolean} True if URL shares the same origin, otherwise false
                     */
                    return function isURLSameOrigin(requestURL) {
                        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;
                        return (parsed.protocol === originURL.protocol &&
                            parsed.host === originURL.host);
                    };
                })() :

                // Non standard browser envs (web workers, react-native) lack needed support.
                (function nonStandardBrowserEnv() {
                    return function isURLSameOrigin() {
                        return true;
                    };
                })()
        );


        /***/
    }),
    /* 341 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


// btoa polyfill for IE<10 courtesy https://github.com/davidchambers/Base64.js

        var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';

        function E() {
            this.message = 'String contains an invalid character';
        }

        E.prototype = new Error;
        E.prototype.code = 5;
        E.prototype.name = 'InvalidCharacterError';

        function btoa(input) {
            var str = String(input);
            var output = '';
            for (
                // initialize result and counter
                var block, charCode, idx = 0, map = chars;
                // if the next str index does not exist:
                //   change the mapping table to "="
                //   check if d has no fractional digits
                str.charAt(idx | 0) || (map = '=', idx % 1);
                // "8 - idx % 1 * 8" generates the sequence 2, 4, 6, 8
                output += map.charAt(63 & block >> 8 - idx % 1 * 8)
            ) {
                charCode = str.charCodeAt(idx += 3 / 4);
                if (charCode > 0xFF) {
                    throw new E();
                }
                block = block << 8 | charCode;
            }
            return output;
        }

        module.exports = btoa;


        /***/
    }),
    /* 342 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var utils = __webpack_require__(13);

        module.exports = (
            utils.isStandardBrowserEnv() ?

                // Standard browser envs support document.cookie
                (function standardBrowserEnv() {
                    return {
                        write: function write(name, value, expires, path, domain, secure) {
                            var cookie = [];
                            cookie.push(name + '=' + encodeURIComponent(value));

                            if (utils.isNumber(expires)) {
                                cookie.push('expires=' + new Date(expires).toGMTString());
                            }

                            if (utils.isString(path)) {
                                cookie.push('path=' + path);
                            }

                            if (utils.isString(domain)) {
                                cookie.push('domain=' + domain);
                            }

                            if (secure === true) {
                                cookie.push('secure');
                            }

                            document.cookie = cookie.join('; ');
                        },

                        read: function read(name) {
                            var match = document.cookie.match(new RegExp('(^|;\\s*)(' + name + ')=([^;]*)'));
                            return (match ? decodeURIComponent(match[3]) : null);
                        },

                        remove: function remove(name) {
                            this.write(name, '', Date.now() - 86400000);
                        }
                    };
                })() :

                // Non standard browser env (web workers, react-native) lack needed support.
                (function nonStandardBrowserEnv() {
                    return {
                        write: function write() {
                        },
                        read: function read() {
                            return null;
                        },
                        remove: function remove() {
                        }
                    };
                })()
        );


        /***/
    }),
    /* 343 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var utils = __webpack_require__(13);

        function InterceptorManager() {
            this.handlers = [];
        }

        /**
         * Add a new interceptor to the stack
         *
         * @param {Function} fulfilled The function to handle `then` for a `Promise`
         * @param {Function} rejected The function to handle `reject` for a `Promise`
         *
         * @return {Number} An ID used to remove interceptor later
         */
        InterceptorManager.prototype.use = function use(fulfilled, rejected) {
            this.handlers.push({
                fulfilled: fulfilled,
                rejected: rejected
            });
            return this.handlers.length - 1;
        };

        /**
         * Remove an interceptor from the stack
         *
         * @param {Number} id The ID that was returned by `use`
         */
        InterceptorManager.prototype.eject = function eject(id) {
            if (this.handlers[id]) {
                this.handlers[id] = null;
            }
        };

        /**
         * Iterate over all the registered interceptors
         *
         * This method is particularly useful for skipping over any
         * interceptors that may have become `null` calling `eject`.
         *
         * @param {Function} fn The function to call for each interceptor
         */
        InterceptorManager.prototype.forEach = function forEach(fn) {
            utils.forEach(this.handlers, function forEachHandler(h) {
                if (h !== null) {
                    fn(h);
                }
            });
        };

        module.exports = InterceptorManager;


        /***/
    }),
    /* 344 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var utils = __webpack_require__(13);
        var transformData = __webpack_require__(345);
        var isCancel = __webpack_require__(119);
        var defaults = __webpack_require__(80);
        var isAbsoluteURL = __webpack_require__(346);
        var combineURLs = __webpack_require__(347);

        /**
         * Throws a `Cancel` if cancellation has been requested.
         */
        function throwIfCancellationRequested(config) {
            if (config.cancelToken) {
                config.cancelToken.throwIfRequested();
            }
        }

        /**
         * Dispatch a request to the server using the configured adapter.
         *
         * @param {object} config The config that is to be used for the request
         * @returns {Promise} The Promise to be fulfilled
         */
        module.exports = function dispatchRequest(config) {
            throwIfCancellationRequested(config);

            // Support baseURL config
            if (config.baseURL && !isAbsoluteURL(config.url)) {
                config.url = combineURLs(config.baseURL, config.url);
            }

            // Ensure headers exist
            config.headers = config.headers || {};

            // Transform request data
            config.data = transformData(
                config.data,
                config.headers,
                config.transformRequest
            );

            // Flatten headers
            config.headers = utils.merge(
                config.headers.common || {},
                config.headers[config.method] || {},
                config.headers || {}
            );

            utils.forEach(
                ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],
                function cleanHeaderConfig(method) {
                    delete config.headers[method];
                }
            );

            var adapter = config.adapter || defaults.adapter;

            return adapter(config).then(function onAdapterResolution(response) {
                throwIfCancellationRequested(config);

                // Transform response data
                response.data = transformData(
                    response.data,
                    response.headers,
                    config.transformResponse
                );

                return response;
            }, function onAdapterRejection(reason) {
                if (!isCancel(reason)) {
                    throwIfCancellationRequested(config);

                    // Transform response data
                    if (reason && reason.response) {
                        reason.response.data = transformData(
                            reason.response.data,
                            reason.response.headers,
                            config.transformResponse
                        );
                    }
                }

                return Promise.reject(reason);
            });
        };


        /***/
    }),
    /* 345 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var utils = __webpack_require__(13);

        /**
         * Transform the data for a request or a response
         *
         * @param {Object|String} data The data to be transformed
         * @param {Array} headers The headers for the request or response
         * @param {Array|Function} fns A single function or Array of functions
         * @returns {*} The resulting transformed data
         */
        module.exports = function transformData(data, headers, fns) {
            /*eslint no-param-reassign:0*/
            utils.forEach(fns, function transform(fn) {
                data = fn(data, headers);
            });

            return data;
        };


        /***/
    }),
    /* 346 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        /**
         * Determines whether the specified URL is absolute
         *
         * @param {string} url The URL to test
         * @returns {boolean} True if the specified URL is absolute, otherwise false
         */
        module.exports = function isAbsoluteURL(url) {
            // A URL is considered absolute if it begins with "<scheme>://" or "//" (protocol-relative URL).
            // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed
            // by any combination of letters, digits, plus, period, or hyphen.
            return /^([a-z][a-z\d\+\-\.]*:)?\/\//i.test(url);
        };


        /***/
    }),
    /* 347 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        /**
         * Creates a new URL by combining the specified URLs
         *
         * @param {string} baseURL The base URL
         * @param {string} relativeURL The relative URL
         * @returns {string} The combined URL
         */
        module.exports = function combineURLs(baseURL, relativeURL) {
            return relativeURL
                ? baseURL.replace(/\/+$/, '') + '/' + relativeURL.replace(/^\/+/, '')
                : baseURL;
        };


        /***/
    }),
    /* 348 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        var Cancel = __webpack_require__(120);

        /**
         * A `CancelToken` is an object that can be used to request cancellation of an operation.
         *
         * @class
         * @param {Function} executor The executor function.
         */
        function CancelToken(executor) {
            if (typeof executor !== 'function') {
                throw new TypeError('executor must be a function.');
            }

            var resolvePromise;
            this.promise = new Promise(function promiseExecutor(resolve) {
                resolvePromise = resolve;
            });

            var token = this;
            executor(function cancel(message) {
                if (token.reason) {
                    // Cancellation has already been requested
                    return;
                }

                token.reason = new Cancel(message);
                resolvePromise(token.reason);
            });
        }

        /**
         * Throws a `Cancel` if cancellation has been requested.
         */
        CancelToken.prototype.throwIfRequested = function throwIfRequested() {
            if (this.reason) {
                throw this.reason;
            }
        };

        /**
         * Returns an object that contains a new `CancelToken` and a function that, when called,
         * cancels the `CancelToken`.
         */
        CancelToken.source = function source() {
            var cancel;
            var token = new CancelToken(function executor(c) {
                cancel = c;
            });
            return {
                token: token,
                cancel: cancel
            };
        };

        module.exports = CancelToken;


        /***/
    }),
    /* 349 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        /**
         * Syntactic sugar for invoking a function and expanding an array for arguments.
         *
         * Common use case would be to use `Function.prototype.apply`.
         *
         *  ```js
         *  function f(x, y, z) {}
         *  var args = [1, 2, 3];
         *  f.apply(null, args);
         *  ```
         *
         * With `spread` this example can be re-written.
         *
         *  ```js
         *  spread(function(x, y, z) {})([1, 2, 3]);
         *  ```
         *
         * @param {Function} callback
         * @returns {Function}
         */
        module.exports = function spread(callback) {
            return function wrap(arr) {
                return callback.apply(null, arr);
            };
        };


        /***/
    }),
    /* 350 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__TheTabs_vue_vue_type_template_id_79f3f083___ = __webpack_require__(351);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_1__TheTabs_vue_vue_type_script_lang_js___ = __webpack_require__(121);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_1__TheTabs_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_1__TheTabs_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(36);


        /* normalize component */

        var component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
            __WEBPACK_IMPORTED_MODULE_1__TheTabs_vue_vue_type_script_lang_js___["default"],
            __WEBPACK_IMPORTED_MODULE_0__TheTabs_vue_vue_type_template_id_79f3f083___["a" /* render */],
            __WEBPACK_IMPORTED_MODULE_0__TheTabs_vue_vue_type_template_id_79f3f083___["b" /* staticRenderFns */],
            false,
            null,
            null,
            null
        )

        /* hot reload */
        if (false) {
            var api = require("/Users/vintage/Desktop/myProject/talan_vintage/node_modules/vue-hot-reload-api/dist/index.js")
            api.install(require('vue'))
            if (api.compatible) {
                module.hot.accept()
                if (!module.hot.data) {
                    api.createRecord('79f3f083', component.options)
                } else {
                    api.reload('79f3f083', component.options)
                }
                module.hot.accept("./TheTabs.vue?vue&type=template&id=79f3f083&", function () {
                    api.rerender('79f3f083', {
                        render: render,
                        staticRenderFns: staticRenderFns
                    })
                })
            }
        }
        component.options.__file = "src/js/componentsVue/TheTabs.vue"
        /* harmony default export */
        __webpack_exports__["default"] = (component.exports);

        /***/
    }),
    /* 351 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheTabs_vue_vue_type_template_id_79f3f083___ = __webpack_require__(352);
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheTabs_vue_vue_type_template_id_79f3f083___["a"];
        });
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheTabs_vue_vue_type_template_id_79f3f083___["b"];
        });


        /***/
    }),
    /* 352 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return render;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return staticRenderFns;
        });
        var render = function () {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c("div", {staticClass: "vue-app-flat-tabs"}, [
                _c(
                    "ul",
                    {staticClass: "vue-app-flat-tabs__list"},
                    _vm._l(_vm.items, function (item, i) {
                        return _c(
                            "li",
                            {
                                key: i,
                                staticClass: "vue-app-flat-tabs__items",
                                class: {
                                    "vue-app-flat-tabs__items_active":
                                    _vm.$store.state.current_item === i
                                },
                                on: {
                                    click: function ($event) {
                                        _vm.setCurrentItem(i)
                                    }
                                }
                            },
                            [_vm._v("\n      " + _vm._s(item.name) + "\n    ")]
                        )
                    })
                )
            ])
        }
        var staticRenderFns = []
        render._withStripped = true


        /***/
    }),
    /* 353 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__TheImageBuilder_vue_vue_type_template_id_3c77c0c5___ = __webpack_require__(354);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_1__TheImageBuilder_vue_vue_type_script_lang_js___ = __webpack_require__(123);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_1__TheImageBuilder_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_1__TheImageBuilder_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(36);


        /* normalize component */

        var component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
            __WEBPACK_IMPORTED_MODULE_1__TheImageBuilder_vue_vue_type_script_lang_js___["default"],
            __WEBPACK_IMPORTED_MODULE_0__TheImageBuilder_vue_vue_type_template_id_3c77c0c5___["a" /* render */],
            __WEBPACK_IMPORTED_MODULE_0__TheImageBuilder_vue_vue_type_template_id_3c77c0c5___["b" /* staticRenderFns */],
            false,
            null,
            null,
            null
        )

        /* hot reload */
        if (false) {
            var api = require("/Users/vintage/Desktop/myProject/talan_vintage/node_modules/vue-hot-reload-api/dist/index.js")
            api.install(require('vue'))
            if (api.compatible) {
                module.hot.accept()
                if (!module.hot.data) {
                    api.createRecord('3c77c0c5', component.options)
                } else {
                    api.reload('3c77c0c5', component.options)
                }
                module.hot.accept("./TheImageBuilder.vue?vue&type=template&id=3c77c0c5&", function () {
                    api.rerender('3c77c0c5', {
                        render: render,
                        staticRenderFns: staticRenderFns
                    })
                })
            }
        }
        component.options.__file = "src/js/componentsVue/TheImageBuilder.vue"
        /* harmony default export */
        __webpack_exports__["default"] = (component.exports);

        /***/
    }),
    /* 354 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheImageBuilder_vue_vue_type_template_id_3c77c0c5___ = __webpack_require__(355);
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheImageBuilder_vue_vue_type_template_id_3c77c0c5___["a"];
        });
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheImageBuilder_vue_vue_type_template_id_3c77c0c5___["b"];
        });


        /***/
    }),
    /* 355 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return render;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return staticRenderFns;
        });
        var render = function () {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c("div", {staticClass: "vue-image-wraper"}, [
                _c("img", {
                    staticClass: "vue-image vue-image-walls",
                    attrs: {
                        src:
                        _vm.items[_vm.currentItem].filters[0].items[
                            _vm.selectedItems["Стены"]
                            ].src
                    }
                }),
                _vm._v(" "),
                _vm.items[_vm.currentItem].filters[1] !== undefined
                    ? _c("img", {
                        staticClass: "vue-image vue-image-flor",
                        attrs: {
                            src:
                            _vm.items[_vm.currentItem].filters[1].items[
                                _vm.selectedItems["Полы"]
                                ].src
                        }
                    })
                    : _vm._e(),
                _vm._v(" "),
                _vm.items[_vm.currentItem].filters[1] !== undefined
                    ? _c("img", {
                        staticClass: "vue-image vue-image-doors",
                        attrs: {
                            src:
                            _vm.items[_vm.currentItem].filters[2].items[
                                _vm.selectedItems["Двери"]
                                ].src
                        }
                    })
                    : _vm._e(),
                _vm._v(" "),
                _vm.items[_vm.currentItem].filters[1] !== undefined &&
                _vm.selectedItems["Оборудование"][0]
                    ? _c("img", {
                        staticClass: "vue-image vue-image-additionals",
                        attrs: {src: _vm.items[_vm.currentItem].filters[3].items[0].src}
                    })
                    : _vm._e(),
                _vm._v(" "),
                _vm.items[_vm.currentItem].filters[1] !== undefined &&
                _vm.selectedItems["Оборудование"][1]
                    ? _c("img", {
                        staticClass: "vue-image vue-image-additionals",
                        attrs: {src: _vm.items[_vm.currentItem].filters[3].items[1].src}
                    })
                    : _vm._e(),
                _vm._v(" "),
                _vm.items[_vm.currentItem].filters[1] !== undefined &&
                _vm.selectedItems["Оборудование"][2]
                    ? _c("img", {
                        staticClass: "vue-image vue-image-additionals",
                        attrs: {src: _vm.items[_vm.currentItem].filters[3].items[2].src}
                    })
                    : _vm._e(),
                _vm._v(" "),
                _vm.items[_vm.currentItem].filters[1] !== undefined &&
                _vm.selectedItems["Оборудование"][3]
                    ? _c("img", {
                        staticClass: "vue-image vue-image-additionals",
                        attrs: {src: _vm.items[_vm.currentItem].filters[3].items[3].src}
                    })
                    : _vm._e(),
                _vm._v(" "),
                _vm.items[_vm.currentItem].filters[1] !== undefined &&
                _vm.selectedItems["Оборудование"][4]
                    ? _c("img", {
                        staticClass: "vue-image vue-image-additionals",
                        attrs: {src: _vm.items[_vm.currentItem].filters[3].items[4].src}
                    })
                    : _vm._e(),
                _vm._v(" "),
                _vm.items[_vm.currentItem].filters[1] !== undefined &&
                _vm.selectedItems["Оборудование"][5]
                    ? _c("img", {
                        staticClass: "vue-image vue-image-additionals",
                        attrs: {src: _vm.items[_vm.currentItem].filters[3].items[5].src}
                    })
                    : _vm._e(),
                _vm._v(" "),
                _vm.items[_vm.currentItem].filters[1] !== undefined &&
                _vm.selectedItems["Оборудование"][6]
                    ? _c("img", {
                        staticClass: "vue-image vue-image-additionals",
                        attrs: {src: _vm.items[_vm.currentItem].filters[3].items[6].src}
                    })
                    : _vm._e(),
                _vm._v(" "),
                _vm.items[_vm.currentItem].filters[1] !== undefined &&
                _vm.selectedItems["Оборудование"][7]
                    ? _c("img", {
                        staticClass: "vue-image vue-image-additionals",
                        attrs: {src: _vm.items[_vm.currentItem].filters[3].items[7].src}
                    })
                    : _vm._e(),
                _vm._v(" "),
                _vm.items[_vm.currentItem].filters[1] !== undefined &&
                _vm.selectedItems["Оборудование"][8]
                    ? _c("img", {
                        staticClass: "vue-image vue-image-additionals",
                        attrs: {src: _vm.items[_vm.currentItem].filters[3].items[8].src}
                    })
                    : _vm._e(),
                _vm._v(" "),
                _vm.items[_vm.currentItem].filters[1] !== undefined &&
                _vm.selectedItems["Оборудование"][9]
                    ? _c("img", {
                        staticClass: "vue-image vue-image-additionals",
                        attrs: {src: _vm.items[_vm.currentItem].filters[3].items[9].src}
                    })
                    : _vm._e()
            ])
        }
        var staticRenderFns = []
        render._withStripped = true


        /***/
    }),
    /* 356 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__TheFilters_vue_vue_type_template_id_5d6e56f4___ = __webpack_require__(357);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_1__TheFilters_vue_vue_type_script_lang_js___ = __webpack_require__(125);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_1__TheFilters_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_1__TheFilters_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(36);


        /* normalize component */

        var component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
            __WEBPACK_IMPORTED_MODULE_1__TheFilters_vue_vue_type_script_lang_js___["default"],
            __WEBPACK_IMPORTED_MODULE_0__TheFilters_vue_vue_type_template_id_5d6e56f4___["a" /* render */],
            __WEBPACK_IMPORTED_MODULE_0__TheFilters_vue_vue_type_template_id_5d6e56f4___["b" /* staticRenderFns */],
            false,
            null,
            null,
            null
        )

        /* hot reload */
        if (false) {
            var api = require("/Users/vintage/Desktop/myProject/talan_vintage/node_modules/vue-hot-reload-api/dist/index.js")
            api.install(require('vue'))
            if (api.compatible) {
                module.hot.accept()
                if (!module.hot.data) {
                    api.createRecord('5d6e56f4', component.options)
                } else {
                    api.reload('5d6e56f4', component.options)
                }
                module.hot.accept("./TheFilters.vue?vue&type=template&id=5d6e56f4&", function () {
                    api.rerender('5d6e56f4', {
                        render: render,
                        staticRenderFns: staticRenderFns
                    })
                })
            }
        }
        component.options.__file = "src/js/componentsVue/TheFilters.vue"
        /* harmony default export */
        __webpack_exports__["default"] = (component.exports);

        /***/
    }),
    /* 357 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFilters_vue_vue_type_template_id_5d6e56f4___ = __webpack_require__(358);
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFilters_vue_vue_type_template_id_5d6e56f4___["a"];
        });
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFilters_vue_vue_type_template_id_5d6e56f4___["b"];
        });


        /***/
    }),
    /* 358 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return render;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return staticRenderFns;
        });
        var render = function () {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c("div", {staticClass: "vue-filter"}, [
                _c(
                    "ul",
                    {staticClass: "vue-filter__list"},
                    _vm._l(_vm.items[_vm.currentItem].filters, function (item, i) {
                        return _vm.selectItem
                            ? _c(
                                "li",
                                {
                                    key: i,
                                    class: {
                                        "vue-filter-list_active":
                                        _vm.opened && _vm.currentFilter === i
                                    },
                                    on: {
                                        click: function ($event) {
                                            _vm.showItems(i)
                                        }
                                    }
                                },
                                [
                                    _c(
                                        "div",
                                        {
                                            staticClass: "vue-filter__item",
                                            class: {
                                                "vue-filter-item_active":
                                                _vm.opened && _vm.currentFilter === i
                                            },
                                            on: {
                                                click: function ($event) {
                                                    _vm.openSubMenu(i)
                                                }
                                            }
                                        },
                                        [
                                            _c("span", [_vm._v(_vm._s(item.name))]),
                                            _vm._v(" "),
                                            _c("span", {
                                                staticClass: "vue-filter__pointer",
                                                class: {
                                                    "vue-filter__pointer_active":
                                                    _vm.opened && _vm.currentFilter === i
                                                }
                                            })
                                        ]
                                    ),
                                    _vm._v(" "),
                                    _c(
                                        "div",
                                        {
                                            staticClass: "vue-filter-row",
                                            class: {
                                                "vue-filter-row_active":
                                                _vm.opened && _vm.currentFilter === i
                                            }
                                        },
                                        _vm._l(_vm.itemFilter.items, function (item, i) {
                                            return _c(
                                                "div",
                                                {
                                                    key: i,
                                                    staticClass: "vue-filter-row__col",
                                                    class: {
                                                        "vue-filter-row__col_active":
                                                        _vm.$store.state.selected[_vm.currentItem][
                                                            _vm.itemFilter.name
                                                            ] === i ||
                                                        _vm.$store.state.selected[_vm.currentItem][
                                                            _vm.itemFilter.name
                                                            ][i] === true
                                                    }
                                                },
                                                [
                                                    _c(
                                                        "div",
                                                        {
                                                            staticClass: "vue-filter-items__preview",
                                                            on: {
                                                                click: function ($event) {
                                                                    _vm.selectItem(i, _vm.itemFilter.name)
                                                                }
                                                            }
                                                        },
                                                        [
                                                            _c("img", {
                                                                staticClass: "vue-filter-items__img",
                                                                attrs: {src: item.preview}
                                                            })
                                                        ]
                                                    ),
                                                    _vm._v(" "),
                                                    _c(
                                                        "div",
                                                        {staticClass: "vue-filter-items__content"},
                                                        [
                                                            _c(
                                                                "div",
                                                                {
                                                                    staticClass: "vue-filter-items__title",
                                                                    on: {
                                                                        click: function ($event) {
                                                                            _vm.selectItem(i, _vm.itemFilter.name)
                                                                        }
                                                                    }
                                                                },
                                                                [
                                                                    _vm._v(
                                                                        "\n              " +
                                                                        _vm._s(item.name) +
                                                                        "\n            "
                                                                    )
                                                                ]
                                                            ),
                                                            _vm._v(" "),
                                                            _c(
                                                                "div",
                                                                {
                                                                    staticClass: "vue-filter-items__about",
                                                                    on: {
                                                                        click: function ($event) {
                                                                            _vm.setCurrentPopUpData(i),
                                                                                (_vm.popUp = !_vm.popUp)
                                                                        }
                                                                    }
                                                                },
                                                                [_vm._v("Описание")]
                                                            )
                                                        ]
                                                    )
                                                ]
                                            )
                                        })
                                    )
                                ]
                            )
                            : _vm._e()
                    })
                ),
                _vm._v(" "),
                _c("div", {staticClass: "vue-filter-items"}, [
                    _c("div", {staticClass: "vue-filter-items__header"}, [
                        _vm.checker
                            ? _c("div", {staticClass: "vue-filter-items__currentItem"}, [
                                _vm._v(_vm._s(_vm.itemFilter.name))
                            ])
                            : _vm._e(),
                        _vm._v(" "),
                        _c(
                            "div",
                            {
                                staticClass: "vue-close",
                                on: {
                                    click: function ($event) {
                                        _vm.popUp = false
                                    }
                                }
                            },
                            [_c("span"), _vm._v(" "), _c("span")]
                        )
                    ])
                ]),
                _vm._v(" "),
                _vm.popUp
                    ? _c("div", {staticClass: "vue-filter-popup"}, [
                        _c(
                            "div",
                            {
                                staticClass: "vue-close",
                                on: {
                                    click: function ($event) {
                                        _vm.popUp = !_vm.popUp
                                    }
                                }
                            },
                            [_c("span"), _vm._v(" "), _c("span")]
                        ),
                        _vm._v(" "),
                        _c("h6", [
                            _vm._v(
                                _vm._s(
                                    _vm.items[_vm.currentItem].filters[_vm.currentFilter].items[
                                        _vm.currentPopUop
                                        ].name
                                )
                            )
                        ]),
                        _vm._v(" "),
                        _c("p", [
                            _vm._v(
                                _vm._s(
                                    _vm.items[_vm.currentItem].filters[_vm.currentFilter].items[
                                        _vm.currentPopUop
                                        ].about
                                )
                            )
                        ])
                    ])
                    : _vm._e()
            ])
        }
        var staticRenderFns = []
        render._withStripped = true


        /***/
    }),
    /* 359 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__TheFiltersForms_vue_vue_type_template_id_2f32dc0e___ = __webpack_require__(360);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_1__TheFiltersForms_vue_vue_type_script_lang_js___ = __webpack_require__(128);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_1__TheFiltersForms_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_1__TheFiltersForms_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(36);


        /* normalize component */

        var component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
            __WEBPACK_IMPORTED_MODULE_1__TheFiltersForms_vue_vue_type_script_lang_js___["default"],
            __WEBPACK_IMPORTED_MODULE_0__TheFiltersForms_vue_vue_type_template_id_2f32dc0e___["a" /* render */],
            __WEBPACK_IMPORTED_MODULE_0__TheFiltersForms_vue_vue_type_template_id_2f32dc0e___["b" /* staticRenderFns */],
            false,
            null,
            null,
            null
        )

        /* hot reload */
        if (false) {
            var api = require("/Users/vintage/Desktop/myProject/talan_vintage/node_modules/vue-hot-reload-api/dist/index.js")
            api.install(require('vue'))
            if (api.compatible) {
                module.hot.accept()
                if (!module.hot.data) {
                    api.createRecord('2f32dc0e', component.options)
                } else {
                    api.reload('2f32dc0e', component.options)
                }
                module.hot.accept("./TheFiltersForms.vue?vue&type=template&id=2f32dc0e&", function () {
                    api.rerender('2f32dc0e', {
                        render: render,
                        staticRenderFns: staticRenderFns
                    })
                })
            }
        }
        component.options.__file = "src/js/componentsVue/TheFiltersForms.vue"
        /* harmony default export */
        __webpack_exports__["default"] = (component.exports);

        /***/
    }),
    /* 360 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFiltersForms_vue_vue_type_template_id_2f32dc0e___ = __webpack_require__(361);
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFiltersForms_vue_vue_type_template_id_2f32dc0e___["a"];
        });
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheFiltersForms_vue_vue_type_template_id_2f32dc0e___["b"];
        });


        /***/
    }),
    /* 361 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return render;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return staticRenderFns;
        });
        var render = function () {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c("div", {staticClass: "vue-additionalForms"}, [
                _c("h6", [_vm._v(_vm._s(_vm.global.form.afterFilteForm.title))]),
                _vm._v(" "),
                _c(
                    "div",
                    {staticClass: "vue-additionalForms__row"},
                    _vm._l(_vm.global.form.afterFilteForm.forms, function (item, i) {
                        return _c(
                            "div",
                            {key: i, staticClass: "vue-additionalForms__link"},
                            [
                                _c(
                                    "button",
                                    {
                                        staticClass: "vue-additionalForms__btn",
                                        attrs: {type: "button"},
                                        on: {
                                            click: function ($event) {
                                                _vm.openedPopUp[i] = true
                                            }
                                        }
                                    },
                                    [_vm._v("\n        " + _vm._s(item.name) + " >\n      ")]
                                ),
                                _vm._v(" "),
                                _c(
                                    "PopUpFormSubmit",
                                    {
                                        attrs: {
                                            opened: _vm.openedPopUp[i],
                                            global: _vm.global,
                                            postLink: item.postLinks
                                        },
                                        on: {
                                            close: function ($event) {
                                                _vm.openedPopUp[i] = false
                                            }
                                        }
                                    },
                                    [
                                        _c(
                                            "div",
                                            {
                                                staticClass: "vue-modal__title",
                                                attrs: {slot: "title"},
                                                slot: "title"
                                            },
                                            [
                                                _vm._v(
                                                    "\n          Итого отделка " +
                                                    _vm._s(_vm.spacify(_vm.fullPriceForAdditionalWorks)) +
                                                    " руб\n        "
                                                )
                                            ]
                                        ),
                                        _vm._v(" "),
                                        _c("input", {
                                            tag: "component",
                                            attrs: {type: "hidden", name: "nameOfForm", value: item.id}
                                        }),
                                        _vm._v(" "),
                                        _c("input", {
                                            tag: "component",
                                            attrs: {
                                                name: "fullPrice",
                                                type: "hidden",
                                                value: _vm.$store.state.total_sum
                                            }
                                        }),
                                        _vm._v(" "),
                                        _vm._l(_vm.selectedItems, function (item, i) {
                                            return _c("input", {
                                                key: i,
                                                tag: "component",
                                                attrs: {
                                                    name: "item" + i,
                                                    type: "hidden",
                                                    value: item[0] + ", " + item[1]
                                                }
                                            })
                                        }),
                                        _vm._v(" "),
                                        item.name === "В зачет жилья"
                                            ? _c("input", {
                                                tag: "component",
                                                attrs: {
                                                    type: "hidden",
                                                    name: "forManager",
                                                    value: "В зачет жилья"
                                                }
                                            })
                                            : _vm._e()
                                    ],
                                    2
                                )
                            ],
                            1
                        )
                    })
                )
            ])
        }
        var staticRenderFns = []
        render._withStripped = true


        /***/
    }),
    /* 362 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_template_id_4957ef48___ = __webpack_require__(363);
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_template_id_4957ef48___["a"];
        });
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_template_id_4957ef48___["b"];
        });


        /***/
    }),
    /* 363 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return render;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return staticRenderFns;
        });
        var render = function () {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c("transition", {attrs: {name: "vue-modal"}}, [
                _vm.opened
                    ? _c("div", {staticClass: "vue-modal vue-modal_mask", attrs: {'data-modal': "call-back"}}, [
                        _c(
                            "div",
                            {staticClass: "vue-modal__form"},
                            [
                                _c(
                                    "div",
                                    {staticClass: "vue-close", on: {click: _vm.close}},
                                    [_c("span"), _vm._v(" "), _c("span")]
                                ),
                                _vm._v(" "),
                                _vm._t("title"),
                                _vm._v(" "),
                                _c(
                                    "form",
                                    {
                                        ref: "form",
                                        staticClass: "vue-form",
                                        on: {submit: _vm.submit}
                                    },
                                    [
                                        _c("input", {
                                            staticClass: "input form__input",
                                            attrs: {name: "id_flat", type: "hidden"},
                                            domProps: {value: "" + this.global.flat_id}
                                        }),
                                        _vm._v(" "),
                                        _c("input", {
                                            staticClass: "input form__input",
                                            attrs: {
                                                name: "name",
                                                type: "text",
                                                placeholder: this.global.form.fields[0].name,
                                                required: ""
                                            },
                                            domProps: {value: _vm.name_value},
                                            on: {
                                                input: function (event) {
                                                    return (_vm.name_value = event.target.value)
                                                }
                                            }
                                        }),
                                        _vm._v(" "),
                                        _c("input", {
                                            directives: [
                                                {
                                                    name: "mask",
                                                    rawName: "v-mask",
                                                    value: "+7(###)###-##-##",
                                                    expression: "'+7(###)###-##-##'"
                                                }
                                            ],
                                            staticClass: "input form__input input_phone",
                                            attrs: {
                                                name: "tel",
                                                type: "tel",
                                                required: "",
                                                placeholder: this.global.form.fields[1].name
                                            },
                                            domProps: {value: _vm.email_value},
                                            on: {
                                                input: function (event) {
                                                    return (_vm.email_value = event.target.value)
                                                }
                                            }
                                        }),
                                        _vm._v(" "),
                                        _vm._t("default"),
                                        _vm._v(" "),
                                        _c(
                                            "button",
                                            {
                                                ref: "submit",
                                                staticClass: "button button-green gallery__button wow fadeInRight ajax-link ascAboutStock",
                                                attrs: {
                                                    'data-href': "/form-asc-about-discount",
                                                    'data-wow-delay': "1s",
                                                    'style': "visibility: visible; animation-delay: 0.9s; animation-name: fadeInRight;"
                                                }
                                            },
                                            [
                                                _vm._v(
                                                    "\n          " + _vm._s(_vm.state) + "\n          "
                                                ),
                                                _c("div", {
                                                    staticClass: "button__blip button__blip_hover"
                                                }),
                                                _vm._v(" "),
                                                _c("div", {
                                                    staticClass: "button__blip button__blip_click"
                                                })
                                            ]
                                        )
                                    ],
                                    2
                                )
                            ],
                            2
                        )
                    ])
                    : _vm._e()
            ])
        }
        var staticRenderFns = []
        render._withStripped = true


        /***/
    }),
    /* 364 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_style_index_0_lang_css___ = __webpack_require__(132);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_style_index_0_lang_css____default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_style_index_0_lang_css___);
        /* unused harmony reexport namespace */
        /* unused harmony default export */
        var _unused_webpack_default_export = (__WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_index_js_vue_loader_options_PopUpFormSubmit_vue_vue_type_style_index_0_lang_css____default.a);

        /***/
    }),
    /* 365 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__TheCard_vue_vue_type_template_id_a30bc1d6___ = __webpack_require__(366);
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_1__TheCard_vue_vue_type_script_lang_js___ = __webpack_require__(134);
        /* harmony namespace reexport (unknown) */
        for (var __WEBPACK_IMPORT_KEY__ in __WEBPACK_IMPORTED_MODULE_1__TheCard_vue_vue_type_script_lang_js___) if (__WEBPACK_IMPORT_KEY__ !== 'default') (function (key) {
            __webpack_require__.d(__webpack_exports__, key, function () {
                return __WEBPACK_IMPORTED_MODULE_1__TheCard_vue_vue_type_script_lang_js___[key];
            })
        }(__WEBPACK_IMPORT_KEY__));
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__ = __webpack_require__(36);


        /* normalize component */

        var component = Object(__WEBPACK_IMPORTED_MODULE_2__node_modules_vue_loader_lib_runtime_componentNormalizer_js__["a" /* default */])(
            __WEBPACK_IMPORTED_MODULE_1__TheCard_vue_vue_type_script_lang_js___["default"],
            __WEBPACK_IMPORTED_MODULE_0__TheCard_vue_vue_type_template_id_a30bc1d6___["a" /* render */],
            __WEBPACK_IMPORTED_MODULE_0__TheCard_vue_vue_type_template_id_a30bc1d6___["b" /* staticRenderFns */],
            false,
            null,
            null,
            null
        )

        /* hot reload */
        if (false) {
            var api = require("/Users/vintage/Desktop/myProject/talan_vintage/node_modules/vue-hot-reload-api/dist/index.js")
            api.install(require('vue'))
            if (api.compatible) {
                module.hot.accept()
                if (!module.hot.data) {
                    api.createRecord('a30bc1d6', component.options)
                } else {
                    api.reload('a30bc1d6', component.options)
                }
                module.hot.accept("./TheCard.vue?vue&type=template&id=a30bc1d6&", function () {
                    api.rerender('a30bc1d6', {
                        render: render,
                        staticRenderFns: staticRenderFns
                    })
                })
            }
        }
        component.options.__file = "src/js/componentsVue/TheCard.vue"
        /* harmony default export */
        __webpack_exports__["default"] = (component.exports);

        /***/
    }),
    /* 366 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony import */
        var __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheCard_vue_vue_type_template_id_a30bc1d6___ = __webpack_require__(367);
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheCard_vue_vue_type_template_id_a30bc1d6___["a"];
        });
        /* harmony namespace reexport (by used) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return __WEBPACK_IMPORTED_MODULE_0__node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_TheCard_vue_vue_type_template_id_a30bc1d6___["b"];
        });


        /***/
    }),
    /* 367 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "a", function () {
            return render;
        });
        /* harmony export (binding) */
        __webpack_require__.d(__webpack_exports__, "b", function () {
            return staticRenderFns;
        });
        var render = function () {
            var _vm = this
            var _h = _vm.$createElement
            var _c = _vm._self._c || _h
            return _c("div", {staticClass: "vue-card wrap wrap_mobile_full"}, [
                _c(
                    "div",
                    {staticClass: "card-items"},
                    _vm._l(_vm.arrOfSelectedItems, function (item, i) {
                        return _c("div", {key: i, staticClass: "card-items__col"}, [
                            item.type === "Оборудование"
                                ? _c(
                                "div",
                                {
                                    staticClass: "vue-close",
                                    on: {
                                        click: function ($event) {
                                            _vm.deleteItem(item.id)
                                        }
                                    }
                                },
                                [_c("span"), _vm._v(" "), _c("span")]
                                )
                                : _vm._e(),
                            _vm._v(" "),
                            _c("div", {staticClass: "card-items__title"}, [
                                _vm._v("\n          " + _vm._s(item.type) + "\n        ")
                            ]),
                            _vm._v(" "),
                            _c("div", {staticClass: "card-items__img-wrapper"}, [
                                _c("img", {attrs: {src: item.preview, alt: item.type}})
                            ])
                        ])
                    })
                ),
                _vm._v(" "),
                _c(
                    "div",
                    {staticClass: "card-result"},
                    [
                        _c("div", {staticClass: "card-result__fillprice"}, [
                            _c("div", [
                                /*    _vm._v(
              _vm._s(_vm.global.texts.sum) +
                " " +
                _vm._s(this.spacify(_vm.fullPrice)) +
                " " +
                _vm._s(_vm.global.texts.currency)
            )*/
                            ])
                        ]),
                        _vm._v(" "),
                        _c(
                            "a",
                            {
                                staticClass: "button button_green gallery__button wow fadeInRight ajax-link",
                                attrs: {
                                    'data-href': "/form-excursion-popup?apartmentId=" + window.location.href.substring(window.location.href.lastIndexOf('/') + 1) + "&header=Отправьте заявку, чтобы узнать стоимость квартиры",
                                    'data-wow-delay': "1s",
                                    'style': "visibility: visible; animation-delay: 0.9s; animation-name: fadeInRight;"
                                },

                            },
                            [
                                //_vm._v("\n      " + _vm._s(_vm.global.texts.btns) + "\n      "),
                                _vm._v("Узнать цену с отделкой"),

                                _c("div", {staticClass: "button__blip button__blip_hover"}),
                                _vm._v(" "),
                                _c("div", {staticClass: "button__blip button__blip_click"})
                            ]
                        ),
                        _vm._v(" "),
                        _c(
                            "PopUpFormSubmit",
                            {
                                attrs: {
                                    opened: _vm.openedPopUp,
                                    global: _vm.global,
                                    postLink: _vm.global.form.postLinks.fullPrice
                                },
                                on: {
                                    close: function ($event) {
                                        _vm.openedPopUp = false
                                    }
                                }
                            },
                            [
                                _c("input", {
                                    tag: "component",
                                    attrs: {name: "nameOfForm", type: "hidden", value: 2}
                                }),
                                _vm._v(" "),
                                _c("input", {
                                    tag: "component",
                                    attrs: {
                                        name: "fullPrice",
                                        type: "hidden",
                                        value: this.$store.state.total_sum
                                    }
                                }),
                                _vm._v(" "),
                                _vm._l(_vm.arrOfSelectedItems, function (item, i) {
                                    return _c("input", {
                                        key: i,
                                        tag: "component",
                                        attrs: {
                                            name: "item" + i,
                                            type: "hidden",
                                            value: item.type + ", " + item.name
                                        }
                                    })
                                })
                            ],
                            2
                        )
                    ],
                    1
                )
            ])
        }
        var staticRenderFns = []
        render._withStripped = true


        /***/
    }),
    /* 368 */
    /***/ (function (module, __webpack_exports__, __webpack_require__) {

        "use strict";
        Object.defineProperty(__webpack_exports__, "__esModule", {value: true});
        /* WEBPACK VAR INJECTION */
        (function (process) {/* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "Store", function () {
                return Store;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "install", function () {
                return install;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "mapState", function () {
                return mapState;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "mapMutations", function () {
                return mapMutations;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "mapGetters", function () {
                return mapGetters;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "mapActions", function () {
                return mapActions;
            });
            /* harmony export (binding) */
            __webpack_require__.d(__webpack_exports__, "createNamespacedHelpers", function () {
                return createNamespacedHelpers;
            });
            /**
             * vuex v3.0.1
             * (c) 2017 Evan You
             * @license MIT
             */
            var applyMixin = function (Vue) {
                var version = Number(Vue.version.split('.')[0]);

                if (version >= 2) {
                    Vue.mixin({beforeCreate: vuexInit});
                } else {
                    // override init and inject vuex init procedure
                    // for 1.x backwards compatibility.
                    var _init = Vue.prototype._init;
                    Vue.prototype._init = function (options) {
                        if (options === void 0) options = {};

                        options.init = options.init
                            ? [vuexInit].concat(options.init)
                            : vuexInit;
                        _init.call(this, options);
                    };
                }

                /**
                 * Vuex init hook, injected into each instances init hooks list.
                 */

                function vuexInit() {
                    var options = this.$options;
                    // store injection
                    if (options.store) {
                        this.$store = typeof options.store === 'function'
                            ? options.store()
                            : options.store;
                    } else if (options.parent && options.parent.$store) {
                        this.$store = options.parent.$store;
                    }
                }
            };

            var devtoolHook =
                typeof window !== 'undefined' &&
                window.__VUE_DEVTOOLS_GLOBAL_HOOK__;

            function devtoolPlugin(store) {
                if (!devtoolHook) {
                    return
                }

                store._devtoolHook = devtoolHook;

                devtoolHook.emit('vuex:init', store);

                devtoolHook.on('vuex:travel-to-state', function (targetState) {
                    store.replaceState(targetState);
                });

                store.subscribe(function (mutation, state) {
                    devtoolHook.emit('vuex:mutation', mutation, state);
                });
            }

            /**
             * Get the first item that pass the test
             * by second argument function
             *
             * @param {Array} list
             * @param {Function} f
             * @return {*}
             */

            /**
             * Deep copy the given object considering circular structure.
             * This function caches all nested objects and its copies.
             * If it detects circular structure, use cached copy to avoid infinite loop.
             *
             * @param {*} obj
             * @param {Array<Object>} cache
             * @return {*}
             */


            /**
             * forEach for object
             */
            function forEachValue(obj, fn) {
                Object.keys(obj).forEach(function (key) {
                    return fn(obj[key], key);
                });
            }

            function isObject(obj) {
                return obj !== null && typeof obj === 'object'
            }

            function isPromise(val) {
                return val && typeof val.then === 'function'
            }

            function assert(condition, msg) {
                if (!condition) {
                    throw new Error(("[vuex] " + msg))
                }
            }

            var Module = function Module(rawModule, runtime) {
                this.runtime = runtime;
                this._children = Object.create(null);
                this._rawModule = rawModule;
                var rawState = rawModule.state;
                this.state = (typeof rawState === 'function' ? rawState() : rawState) || {};
            };

            var prototypeAccessors$1 = {namespaced: {configurable: true}};

            prototypeAccessors$1.namespaced.get = function () {
                return !!this._rawModule.namespaced
            };

            Module.prototype.addChild = function addChild(key, module) {
                this._children[key] = module;
            };

            Module.prototype.removeChild = function removeChild(key) {
                delete this._children[key];
            };

            Module.prototype.getChild = function getChild(key) {
                return this._children[key]
            };

            Module.prototype.update = function update(rawModule) {
                this._rawModule.namespaced = rawModule.namespaced;
                if (rawModule.actions) {
                    this._rawModule.actions = rawModule.actions;
                }
                if (rawModule.mutations) {
                    this._rawModule.mutations = rawModule.mutations;
                }
                if (rawModule.getters) {
                    this._rawModule.getters = rawModule.getters;
                }
            };

            Module.prototype.forEachChild = function forEachChild(fn) {
                forEachValue(this._children, fn);
            };

            Module.prototype.forEachGetter = function forEachGetter(fn) {
                if (this._rawModule.getters) {
                    forEachValue(this._rawModule.getters, fn);
                }
            };

            Module.prototype.forEachAction = function forEachAction(fn) {
                if (this._rawModule.actions) {
                    forEachValue(this._rawModule.actions, fn);
                }
            };

            Module.prototype.forEachMutation = function forEachMutation(fn) {
                if (this._rawModule.mutations) {
                    forEachValue(this._rawModule.mutations, fn);
                }
            };

            Object.defineProperties(Module.prototype, prototypeAccessors$1);

            var ModuleCollection = function ModuleCollection(rawRootModule) {
                // register root module (Vuex.Store options)
                this.register([], rawRootModule, false);
            };

            ModuleCollection.prototype.get = function get(path) {
                return path.reduce(function (module, key) {
                    return module.getChild(key)
                }, this.root)
            };

            ModuleCollection.prototype.getNamespace = function getNamespace(path) {
                var module = this.root;
                return path.reduce(function (namespace, key) {
                    module = module.getChild(key);
                    return namespace + (module.namespaced ? key + '/' : '')
                }, '')
            };

            ModuleCollection.prototype.update = function update$1(rawRootModule) {
                update([], this.root, rawRootModule);
            };

            ModuleCollection.prototype.register = function register(path, rawModule, runtime) {
                var this$1 = this;
                if (runtime === void 0) runtime = true;

                if (process.env.NODE_ENV !== 'production') {
                    assertRawModule(path, rawModule);
                }

                var newModule = new Module(rawModule, runtime);
                if (path.length === 0) {
                    this.root = newModule;
                } else {
                    var parent = this.get(path.slice(0, -1));
                    parent.addChild(path[path.length - 1], newModule);
                }

                // register nested modules
                if (rawModule.modules) {
                    forEachValue(rawModule.modules, function (rawChildModule, key) {
                        this$1.register(path.concat(key), rawChildModule, runtime);
                    });
                }
            };

            ModuleCollection.prototype.unregister = function unregister(path) {
                var parent = this.get(path.slice(0, -1));
                var key = path[path.length - 1];
                if (!parent.getChild(key).runtime) {
                    return
                }

                parent.removeChild(key);
            };

            function update(path, targetModule, newModule) {
                if (process.env.NODE_ENV !== 'production') {
                    assertRawModule(path, newModule);
                }

                // update target module
                targetModule.update(newModule);

                // update nested modules
                if (newModule.modules) {
                    for (var key in newModule.modules) {
                        if (!targetModule.getChild(key)) {
                            if (process.env.NODE_ENV !== 'production') {
                                console.warn(
                                    "[vuex] trying to add a new module '" + key + "' on hot reloading, " +
                                    'manual reload is needed'
                                );
                            }
                            return
                        }
                        update(
                            path.concat(key),
                            targetModule.getChild(key),
                            newModule.modules[key]
                        );
                    }
                }
            }

            var functionAssert = {
                assert: function (value) {
                    return typeof value === 'function';
                },
                expected: 'function'
            };

            var objectAssert = {
                assert: function (value) {
                    return typeof value === 'function' ||
                        (typeof value === 'object' && typeof value.handler === 'function');
                },
                expected: 'function or object with "handler" function'
            };

            var assertTypes = {
                getters: functionAssert,
                mutations: functionAssert,
                actions: objectAssert
            };

            function assertRawModule(path, rawModule) {
                Object.keys(assertTypes).forEach(function (key) {
                    if (!rawModule[key]) {
                        return
                    }

                    var assertOptions = assertTypes[key];

                    forEachValue(rawModule[key], function (value, type) {
                        assert(
                            assertOptions.assert(value),
                            makeAssertionMessage(path, key, type, value, assertOptions.expected)
                        );
                    });
                });
            }

            function makeAssertionMessage(path, key, type, value, expected) {
                var buf = key + " should be " + expected + " but \"" + key + "." + type + "\"";
                if (path.length > 0) {
                    buf += " in module \"" + (path.join('.')) + "\"";
                }
                buf += " is " + (JSON.stringify(value)) + ".";
                return buf
            }

            var Vue; // bind on install

            var Store = function Store(options) {
                var this$1 = this;
                if (options === void 0) options = {};

                // Auto install if it is not done yet and `window` has `Vue`.
                // To allow users to avoid auto-installation in some cases,
                // this code should be placed here. See #731
                if (!Vue && typeof window !== 'undefined' && window.Vue) {
                    install(window.Vue);
                }

                if (process.env.NODE_ENV !== 'production') {
                    assert(Vue, "must call Vue.use(Vuex) before creating a store instance.");
                    assert(typeof Promise !== 'undefined', "vuex requires a Promise polyfill in this browser.");
                    assert(this instanceof Store, "Store must be called with the new operator.");
                }

                var plugins = options.plugins;
                if (plugins === void 0) plugins = [];
                var strict = options.strict;
                if (strict === void 0) strict = false;

                var state = options.state;
                if (state === void 0) state = {};
                if (typeof state === 'function') {
                    state = state() || {};
                }

                // store internal state
                this._committing = false;
                this._actions = Object.create(null);
                this._actionSubscribers = [];
                this._mutations = Object.create(null);
                this._wrappedGetters = Object.create(null);
                this._modules = new ModuleCollection(options);
                this._modulesNamespaceMap = Object.create(null);
                this._subscribers = [];
                this._watcherVM = new Vue();

                // bind commit and dispatch to self
                var store = this;
                var ref = this;
                var dispatch = ref.dispatch;
                var commit = ref.commit;
                this.dispatch = function boundDispatch(type, payload) {
                    return dispatch.call(store, type, payload)
                };
                this.commit = function boundCommit(type, payload, options) {
                    return commit.call(store, type, payload, options)
                };

                // strict mode
                this.strict = strict;

                // init root module.
                // this also recursively registers all sub-modules
                // and collects all module getters inside this._wrappedGetters
                installModule(this, state, [], this._modules.root);

                // initialize the store vm, which is responsible for the reactivity
                // (also registers _wrappedGetters as computed properties)
                resetStoreVM(this, state);

                // apply plugins
                plugins.forEach(function (plugin) {
                    return plugin(this$1);
                });

                if (Vue.config.devtools) {
                    devtoolPlugin(this);
                }
            };

            var prototypeAccessors = {state: {configurable: true}};

            prototypeAccessors.state.get = function () {
                return this._vm._data.$$state
            };

            prototypeAccessors.state.set = function (v) {
                if (process.env.NODE_ENV !== 'production') {
                    assert(false, "Use store.replaceState() to explicit replace store state.");
                }
            };

            Store.prototype.commit = function commit(_type, _payload, _options) {
                var this$1 = this;

                // check object-style commit
                var ref = unifyObjectStyle(_type, _payload, _options);
                var type = ref.type;
                var payload = ref.payload;
                var options = ref.options;

                var mutation = {type: type, payload: payload};
                var entry = this._mutations[type];
                if (!entry) {
                    if (process.env.NODE_ENV !== 'production') {
                        console.error(("[vuex] unknown mutation type: " + type));
                    }
                    return
                }
                this._withCommit(function () {
                    entry.forEach(function commitIterator(handler) {
                        handler(payload);
                    });
                });
                this._subscribers.forEach(function (sub) {
                    return sub(mutation, this$1.state);
                });

                if (
                    process.env.NODE_ENV !== 'production' &&
                    options && options.silent
                ) {
                    console.warn(
                        "[vuex] mutation type: " + type + ". Silent option has been removed. " +
                        'Use the filter functionality in the vue-devtools'
                    );
                }
            };

            Store.prototype.dispatch = function dispatch(_type, _payload) {
                var this$1 = this;

                // check object-style dispatch
                var ref = unifyObjectStyle(_type, _payload);
                var type = ref.type;
                var payload = ref.payload;

                var action = {type: type, payload: payload};
                var entry = this._actions[type];
                if (!entry) {
                    if (process.env.NODE_ENV !== 'production') {
                        console.error(("[vuex] unknown action type: " + type));
                    }
                    return
                }

                this._actionSubscribers.forEach(function (sub) {
                    return sub(action, this$1.state);
                });

                return entry.length > 1
                    ? Promise.all(entry.map(function (handler) {
                        return handler(payload);
                    }))
                    : entry[0](payload)
            };

            Store.prototype.subscribe = function subscribe(fn) {
                return genericSubscribe(fn, this._subscribers)
            };

            Store.prototype.subscribeAction = function subscribeAction(fn) {
                return genericSubscribe(fn, this._actionSubscribers)
            };

            Store.prototype.watch = function watch(getter, cb, options) {
                var this$1 = this;

                if (process.env.NODE_ENV !== 'production') {
                    assert(typeof getter === 'function', "store.watch only accepts a function.");
                }
                return this._watcherVM.$watch(function () {
                    return getter(this$1.state, this$1.getters);
                }, cb, options)
            };

            Store.prototype.replaceState = function replaceState(state) {
                var this$1 = this;

                this._withCommit(function () {
                    this$1._vm._data.$$state = state;
                });
            };

            Store.prototype.registerModule = function registerModule(path, rawModule, options) {
                if (options === void 0) options = {};

                if (typeof path === 'string') {
                    path = [path];
                }

                if (process.env.NODE_ENV !== 'production') {
                    assert(Array.isArray(path), "module path must be a string or an Array.");
                    assert(path.length > 0, 'cannot register the root module by using registerModule.');
                }

                this._modules.register(path, rawModule);
                installModule(this, this.state, path, this._modules.get(path), options.preserveState);
                // reset store to update getters...
                resetStoreVM(this, this.state);
            };

            Store.prototype.unregisterModule = function unregisterModule(path) {
                var this$1 = this;

                if (typeof path === 'string') {
                    path = [path];
                }

                if (process.env.NODE_ENV !== 'production') {
                    assert(Array.isArray(path), "module path must be a string or an Array.");
                }

                this._modules.unregister(path);
                this._withCommit(function () {
                    var parentState = getNestedState(this$1.state, path.slice(0, -1));
                    Vue.delete(parentState, path[path.length - 1]);
                });
                resetStore(this);
            };

            Store.prototype.hotUpdate = function hotUpdate(newOptions) {
                this._modules.update(newOptions);
                resetStore(this, true);
            };

            Store.prototype._withCommit = function _withCommit(fn) {
                var committing = this._committing;
                this._committing = true;
                fn();
                this._committing = committing;
            };

            Object.defineProperties(Store.prototype, prototypeAccessors);

            function genericSubscribe(fn, subs) {
                if (subs.indexOf(fn) < 0) {
                    subs.push(fn);
                }
                return function () {
                    var i = subs.indexOf(fn);
                    if (i > -1) {
                        subs.splice(i, 1);
                    }
                }
            }

            function resetStore(store, hot) {
                store._actions = Object.create(null);
                store._mutations = Object.create(null);
                store._wrappedGetters = Object.create(null);
                store._modulesNamespaceMap = Object.create(null);
                var state = store.state;
                // init all modules
                installModule(store, state, [], store._modules.root, true);
                // reset vm
                resetStoreVM(store, state, hot);
            }

            function resetStoreVM(store, state, hot) {
                var oldVm = store._vm;

                // bind store public getters
                store.getters = {};
                var wrappedGetters = store._wrappedGetters;
                var computed = {};
                forEachValue(wrappedGetters, function (fn, key) {
                    // use computed to leverage its lazy-caching mechanism
                    computed[key] = function () {
                        return fn(store);
                    };
                    Object.defineProperty(store.getters, key, {
                        get: function () {
                            return store._vm[key];
                        },
                        enumerable: true // for local getters
                    });
                });

                // use a Vue instance to store the state tree
                // suppress warnings just in case the user has added
                // some funky global mixins
                var silent = Vue.config.silent;
                Vue.config.silent = true;
                store._vm = new Vue({
                    data: {
                        $$state: state
                    },
                    computed: computed
                });
                Vue.config.silent = silent;

                // enable strict mode for new vm
                if (store.strict) {
                    enableStrictMode(store);
                }

                if (oldVm) {
                    if (hot) {
                        // dispatch changes in all subscribed watchers
                        // to force getter re-evaluation for hot reloading.
                        store._withCommit(function () {
                            oldVm._data.$$state = null;
                        });
                    }
                    Vue.nextTick(function () {
                        return oldVm.$destroy();
                    });
                }
            }

            function installModule(store, rootState, path, module, hot) {
                var isRoot = !path.length;
                var namespace = store._modules.getNamespace(path);

                // register in namespace map
                if (module.namespaced) {
                    store._modulesNamespaceMap[namespace] = module;
                }

                // set state
                if (!isRoot && !hot) {
                    var parentState = getNestedState(rootState, path.slice(0, -1));
                    var moduleName = path[path.length - 1];
                    store._withCommit(function () {
                        Vue.set(parentState, moduleName, module.state);
                    });
                }

                var local = module.context = makeLocalContext(store, namespace, path);

                module.forEachMutation(function (mutation, key) {
                    var namespacedType = namespace + key;
                    registerMutation(store, namespacedType, mutation, local);
                });

                module.forEachAction(function (action, key) {
                    var type = action.root ? key : namespace + key;
                    var handler = action.handler || action;
                    registerAction(store, type, handler, local);
                });

                module.forEachGetter(function (getter, key) {
                    var namespacedType = namespace + key;
                    registerGetter(store, namespacedType, getter, local);
                });

                module.forEachChild(function (child, key) {
                    installModule(store, rootState, path.concat(key), child, hot);
                });
            }

            /**
             * make localized dispatch, commit, getters and state
             * if there is no namespace, just use root ones
             */
            function makeLocalContext(store, namespace, path) {
                var noNamespace = namespace === '';

                var local = {
                    dispatch: noNamespace ? store.dispatch : function (_type, _payload, _options) {
                        var args = unifyObjectStyle(_type, _payload, _options);
                        var payload = args.payload;
                        var options = args.options;
                        var type = args.type;

                        if (!options || !options.root) {
                            type = namespace + type;
                            if (process.env.NODE_ENV !== 'production' && !store._actions[type]) {
                                console.error(("[vuex] unknown local action type: " + (args.type) + ", global type: " + type));
                                return
                            }
                        }

                        return store.dispatch(type, payload)
                    },

                    commit: noNamespace ? store.commit : function (_type, _payload, _options) {
                        var args = unifyObjectStyle(_type, _payload, _options);
                        var payload = args.payload;
                        var options = args.options;
                        var type = args.type;

                        if (!options || !options.root) {
                            type = namespace + type;
                            if (process.env.NODE_ENV !== 'production' && !store._mutations[type]) {
                                console.error(("[vuex] unknown local mutation type: " + (args.type) + ", global type: " + type));
                                return
                            }
                        }

                        store.commit(type, payload, options);
                    }
                };

                // getters and state object must be gotten lazily
                // because they will be changed by vm update
                Object.defineProperties(local, {
                    getters: {
                        get: noNamespace
                            ? function () {
                                return store.getters;
                            }
                            : function () {
                                return makeLocalGetters(store, namespace);
                            }
                    },
                    state: {
                        get: function () {
                            return getNestedState(store.state, path);
                        }
                    }
                });

                return local
            }

            function makeLocalGetters(store, namespace) {
                var gettersProxy = {};

                var splitPos = namespace.length;
                Object.keys(store.getters).forEach(function (type) {
                    // skip if the target getter is not match this namespace
                    if (type.slice(0, splitPos) !== namespace) {
                        return
                    }

                    // extract local getter type
                    var localType = type.slice(splitPos);

                    // Add a port to the getters proxy.
                    // Define as getter property because
                    // we do not want to evaluate the getters in this time.
                    Object.defineProperty(gettersProxy, localType, {
                        get: function () {
                            return store.getters[type];
                        },
                        enumerable: true
                    });
                });

                return gettersProxy
            }

            function registerMutation(store, type, handler, local) {
                var entry = store._mutations[type] || (store._mutations[type] = []);
                entry.push(function wrappedMutationHandler(payload) {
                    handler.call(store, local.state, payload);
                });
            }

            function registerAction(store, type, handler, local) {
                var entry = store._actions[type] || (store._actions[type] = []);
                entry.push(function wrappedActionHandler(payload, cb) {
                    var res = handler.call(store, {
                        dispatch: local.dispatch,
                        commit: local.commit,
                        getters: local.getters,
                        state: local.state,
                        rootGetters: store.getters,
                        rootState: store.state
                    }, payload, cb);
                    if (!isPromise(res)) {
                        res = Promise.resolve(res);
                    }
                    if (store._devtoolHook) {
                        return res.catch(function (err) {
                            store._devtoolHook.emit('vuex:error', err);
                            throw err
                        })
                    } else {
                        return res
                    }
                });
            }

            function registerGetter(store, type, rawGetter, local) {
                if (store._wrappedGetters[type]) {
                    if (process.env.NODE_ENV !== 'production') {
                        console.error(("[vuex] duplicate getter key: " + type));
                    }
                    return
                }
                store._wrappedGetters[type] = function wrappedGetter(store) {
                    return rawGetter(
                        local.state, // local state
                        local.getters, // local getters
                        store.state, // root state
                        store.getters // root getters
                    )
                };
            }

            function enableStrictMode(store) {
                store._vm.$watch(function () {
                    return this._data.$$state
                }, function () {
                    if (process.env.NODE_ENV !== 'production') {
                        assert(store._committing, "Do not mutate vuex store state outside mutation handlers.");
                    }
                }, {deep: true, sync: true});
            }

            function getNestedState(state, path) {
                return path.length
                    ? path.reduce(function (state, key) {
                        return state[key];
                    }, state)
                    : state
            }

            function unifyObjectStyle(type, payload, options) {
                if (isObject(type) && type.type) {
                    options = payload;
                    payload = type;
                    type = type.type;
                }

                if (process.env.NODE_ENV !== 'production') {
                    assert(typeof type === 'string', ("Expects string as the type, but found " + (typeof type) + "."));
                }

                return {type: type, payload: payload, options: options}
            }

            function install(_Vue) {
                if (Vue && _Vue === Vue) {
                    if (process.env.NODE_ENV !== 'production') {
                        console.error(
                            '[vuex] already installed. Vue.use(Vuex) should be called only once.'
                        );
                    }
                    return
                }
                Vue = _Vue;
                applyMixin(Vue);
            }

            var mapState = normalizeNamespace(function (namespace, states) {
                var res = {};
                normalizeMap(states).forEach(function (ref) {
                    var key = ref.key;
                    var val = ref.val;

                    res[key] = function mappedState() {
                        var state = this.$store.state;
                        var getters = this.$store.getters;
                        if (namespace) {
                            var module = getModuleByNamespace(this.$store, 'mapState', namespace);
                            if (!module) {
                                return
                            }
                            state = module.context.state;
                            getters = module.context.getters;
                        }
                        return typeof val === 'function'
                            ? val.call(this, state, getters)
                            : state[val]
                    };
                    // mark vuex getter for devtools
                    res[key].vuex = true;
                });
                return res
            });

            var mapMutations = normalizeNamespace(function (namespace, mutations) {
                var res = {};
                normalizeMap(mutations).forEach(function (ref) {
                    var key = ref.key;
                    var val = ref.val;

                    res[key] = function mappedMutation() {
                        var args = [], len = arguments.length;
                        while (len--) args[len] = arguments[len];

                        var commit = this.$store.commit;
                        if (namespace) {
                            var module = getModuleByNamespace(this.$store, 'mapMutations', namespace);
                            if (!module) {
                                return
                            }
                            commit = module.context.commit;
                        }
                        return typeof val === 'function'
                            ? val.apply(this, [commit].concat(args))
                            : commit.apply(this.$store, [val].concat(args))
                    };
                });
                return res
            });

            var mapGetters = normalizeNamespace(function (namespace, getters) {
                var res = {};
                normalizeMap(getters).forEach(function (ref) {
                    var key = ref.key;
                    var val = ref.val;

                    val = namespace + val;
                    res[key] = function mappedGetter() {
                        if (namespace && !getModuleByNamespace(this.$store, 'mapGetters', namespace)) {
                            return
                        }
                        if (process.env.NODE_ENV !== 'production' && !(val in this.$store.getters)) {
                            console.error(("[vuex] unknown getter: " + val));
                            return
                        }
                        return this.$store.getters[val]
                    };
                    // mark vuex getter for devtools
                    res[key].vuex = true;
                });
                return res
            });

            var mapActions = normalizeNamespace(function (namespace, actions) {
                var res = {};
                normalizeMap(actions).forEach(function (ref) {
                    var key = ref.key;
                    var val = ref.val;

                    res[key] = function mappedAction() {
                        var args = [], len = arguments.length;
                        while (len--) args[len] = arguments[len];

                        var dispatch = this.$store.dispatch;
                        if (namespace) {
                            var module = getModuleByNamespace(this.$store, 'mapActions', namespace);
                            if (!module) {
                                return
                            }
                            dispatch = module.context.dispatch;
                        }
                        return typeof val === 'function'
                            ? val.apply(this, [dispatch].concat(args))
                            : dispatch.apply(this.$store, [val].concat(args))
                    };
                });
                return res
            });

            var createNamespacedHelpers = function (namespace) {
                return ({
                    mapState: mapState.bind(null, namespace),
                    mapGetters: mapGetters.bind(null, namespace),
                    mapMutations: mapMutations.bind(null, namespace),
                    mapActions: mapActions.bind(null, namespace)
                });
            };

            function normalizeMap(map) {
                return Array.isArray(map)
                    ? map.map(function (key) {
                        return ({key: key, val: key});
                    })
                    : Object.keys(map).map(function (key) {
                        return ({key: key, val: map[key]});
                    })
            }

            function normalizeNamespace(fn) {
                return function (namespace, map) {
                    if (typeof namespace !== 'string') {
                        map = namespace;
                        namespace = '';
                    } else if (namespace.charAt(namespace.length - 1) !== '/') {
                        namespace += '/';
                    }
                    return fn(namespace, map)
                }
            }

            function getModuleByNamespace(store, helper, namespace) {
                var module = store._modulesNamespaceMap[namespace];
                if (process.env.NODE_ENV !== 'production' && !module) {
                    console.error(("[vuex] module namespace not found in " + helper + "(): " + namespace));
                }
                return module
            }

            var index_esm = {
                Store: Store,
                install: install,
                version: '3.0.1',
                mapState: mapState,
                mapMutations: mapMutations,
                mapGetters: mapGetters,
                mapActions: mapActions,
                createNamespacedHelpers: createNamespacedHelpers
            };


            /* harmony default export */
            __webpack_exports__["default"] = (index_esm);

            /* WEBPACK VAR INJECTION */
        }.call(__webpack_exports__, __webpack_require__(47)))

        /***/
    }),
    /* 369 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });
        exports.default = initCommercialProperty;

        function initCommercialProperty() {
            var slickObj = $('.commercial__nav');
            var slick = slickObj.slick('getSlick');
            var nextHolder = $('.commercial__gallery .navigation__build-btn_next .arrow__desk');
            var prevHolder = $('.commercial__gallery .navigation__build-btn_prev .arrow__desk');

            function setDesc(slideTo) {

                var nextIndex = slideTo + 1 == slick.slideCount ? 0 : slideTo + 1;
                var prevIndex = slideTo - 1 == -1 ? slick.slideCount - 1 : slideTo - 1;

                var nextDesc = slick.$slides.eq(nextIndex).text();
                var prevDesc = slick.$slides.eq(prevIndex).text();

                nextHolder.text(nextDesc);
                prevHolder.text(prevDesc);
            }

            // initial set
            setDesc(0);

            // On before slide change
            slickObj.on('beforeChange', function (event, slick, slideCurrent, slideTo) {
                setDesc(slideTo);
            });
        };

        /***/
    }),
    /* 370 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        ;(function () {
            window.partnersSlider = {
                init: function init() {
                    var _this = partnersSlider;
                    _this.html = {
                        $slider: $("[data-partners-slider]"),
                        $statusCurrent: $("[data-partners-status-current]"),
                        $statusTotal: $("[data-partners-status-total]")
                    };
                    _this.setStatus();
                    _this.events();
                },
                setStatus: function setStatus() {
                    var _this = partnersSlider;
                    //console.log(partnersSlider);
                    var current = _this.html.$slider.slick('slickCurrentSlide') + 1;
                    var total = _this.html.$slider.slick('getSlick').slideCount;
                    current = current < 10 ? '0' + current : current;
                    total = total < 10 ? '0' + total : total;
                    //console.log(current,total);
                    _this.html.$statusCurrent.text(current);
                    _this.html.$statusTotal.text(total);
                },
                events: function events() {
                    var _this = partnersSlider;
                    _this.html.$slider.on('afterChange', function () {
                        _this.setStatus();
                    });
                }
            };
        })();

        /***/
    }),
    /* 371 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }

            return function (Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
                for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                }
                return arr2;
            } else {
                return Array.from(arr);
            }
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        var GetInTouchTab = function () {
            function GetInTouchTab(btnsClass) {
                _classCallCheck(this, GetInTouchTab);

                this.btns = [].concat(_toConsumableArray(document.querySelectorAll('.' + btnsClass)));
                this.tabs = [].concat(_toConsumableArray(document.querySelectorAll('.get_in_touch__tabs-tab')));
                this.holder = this.tabs[0].parentElement;
                this.btnActive = 'get_in_touch__tabs-btn-active';
                this.tabActive = 'get_in_touch__tabs-tab-active';
                this.tabVisible = 'get_in_touch__tabs-tab-visible';
                this.init();
            }

            _createClass(GetInTouchTab, [{
                key: 'init',
                value: function init() {
                    var _this = this;

                    var _loop = function _loop(i) {
                        _this.btns[i].addEventListener('click', function () {
                            for (var j = 0; j < _this.btns.length; j++) {
                                _this.btns[j].classList.remove(_this.btnActive);
                                _this.tabs[j].classList.remove(_this.tabActive, _this.tabVisible);
                            }
                            _this.btns[i].classList.add(_this.btnActive);
                            _this.tabs[i].classList.add(_this.tabActive);
                            _this.setMinHeight(i);
                            setTimeout(function () {
                                _this.tabs[i].classList.add(_this.tabVisible);
                            }, 300);
                        });
                    };

                    for (var i = 0; i < this.btns.length; i++) {
                        _loop(i);
                    }
                    this.setMinHeight(0);
                }
            }, {
                key: 'setMinHeight',
                value: function setMinHeight(index) {
                    var height = 0;
                    var _iteratorNormalCompletion = true;
                    var _didIteratorError = false;
                    var _iteratorError = undefined;

                    try {
                        for (var _iterator = this.tabs[index].children[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                            var child = _step.value;

                            height += child.clientHeight;
                        }
                    } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion && _iterator.return) {
                                _iterator.return();
                            }
                        } finally {
                            if (_didIteratorError) {
                                throw _iteratorError;
                            }
                        }
                    }

                    this.holder.style.minHeight = height + 'px';
                }
            }]);

            return GetInTouchTab;
        }();

        exports.default = GetInTouchTab;

        /***/
    }),
    /* 372 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }

            return function (Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        function _toConsumableArray(arr) {
            if (Array.isArray(arr)) {
                for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
                    arr2[i] = arr[i];
                }
                return arr2;
            } else {
                return Array.from(arr);
            }
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        var Dropdown = function () {
            function Dropdown() {
                _classCallCheck(this, Dropdown);

                this.input = document.getElementById('menu_title');
                this.dropdownText = document.querySelector('.dropdown_item__text');
                this.dropdownItem = document.querySelector('.dropdown_item');
                this.dropdownMenu = document.querySelector('.dropdown_item__menu');
                this.menuList = [].concat(_toConsumableArray(document.querySelectorAll('.dropdown_item__link')));
                this.init();
            }

            _createClass(Dropdown, [{
                key: 'init',
                value: function init() {
                    this.initShowListEvent();
                    this.initTextChangeEvent();
                }
            }, {
                key: 'initShowListEvent',
                value: function initShowListEvent() {
                    var _this = this;

                    document.addEventListener('click', function (e) {
                        if (e.target.classList.contains('dropdown_item__text') || e.target.classList.contains('dropdown_item')) {
                            e.preventDefault();
                            _this.dropdownMenu.classList.toggle('dropdown_item__menu-active');
                            _this.dropdownText.classList.toggle('dropdown_item__text-active');
                        } else {
                            _this.dropdownMenu.classList.remove('dropdown_item__menu-active');
                            _this.dropdownText.classList.remove('dropdown_item__text-active');
                        }
                    });
                }
            }, {
                key: 'initTextChangeEvent',
                value: function initTextChangeEvent() {
                    var self = this;
                    for (var i = 0; i < this.menuList.length; i++) {
                        this.menuList[i].addEventListener('click', function () {
                            var text = this.textContent;
                            self.dropdownText.textContent = text;
                            self.input.value = text;
                        });
                    }
                }
            }]);

            return Dropdown;
        }();

        exports.default = Dropdown;
        ;

        /***/
    }),
    /* 373 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        var _createClass = function () {
            function defineProperties(target, props) {
                for (var i = 0; i < props.length; i++) {
                    var descriptor = props[i];
                    descriptor.enumerable = descriptor.enumerable || false;
                    descriptor.configurable = true;
                    if ("value" in descriptor) descriptor.writable = true;
                    Object.defineProperty(target, descriptor.key, descriptor);
                }
            }

            return function (Constructor, protoProps, staticProps) {
                if (protoProps) defineProperties(Constructor.prototype, protoProps);
                if (staticProps) defineProperties(Constructor, staticProps);
                return Constructor;
            };
        }();

        __webpack_require__(110);

        var _advantage = __webpack_require__(111);

        var _advantage2 = _interopRequireDefault(_advantage);

        var _fancybox = __webpack_require__(112);

        function _interopRequireDefault(obj) {
            return obj && obj.__esModule ? obj : {default: obj};
        }

        function _classCallCheck(instance, Constructor) {
            if (!(instance instanceof Constructor)) {
                throw new TypeError("Cannot call a class as a function");
            }
        }

        var ConstructionCourse = function () {
            function ConstructionCourse($container) {
                var _this = this;

                _classCallCheck(this, ConstructionCourse);

                this.$container = $container;
                this.url = this.$container.data('url');

                if (!this.url) {
                    this.$container.hide();
                    return; // break if not enough data
                }
                this.method = this.$container.data('method') || 'get';

                this.MONTH_PERCENT = 1 / 11;
                // this.MONTH_PERCENT = (1 / 11)*100;

                this.classes = {
                    yearNav: {
                        container: 'construction-nav-years',
                        item: 'construction-nav-years__btn',
                        active: 'construction-nav-years__btn-a'
                    },
                    timeLine: {
                        container: 'construction-timeline',
                        item: 'construction-timeline__item',
                        active: 'construction-timeline__item-a',
                        disabled: 'construction-timeline__item-disable',
                        hidden: 'construction-timeline__item-hidden',
                        actual: 'construction-timeline-actual',
                        planned: 'construction-timeline-planned'
                    },
                    slider: {
                        wrap: 'construction-slider-wrap',
                        container: 'construction-slider',
                        slide: 'construction-slider__slide',
                        arrLeftSelector: '.construction-arrows .construction-arrows__btn_next',
                        arrRightSelector: '.construction-arrows .construction-arrows__btn_prev',
                        zoomBtn: 'construction_zoom'
                    },
                    navSlider: {
                        container: 'construction-slider-nav',
                        slide: 'construction-slider-nav__slide',
                        current: 'navigation__current',
                        total: 'navigation__total'
                    },
                    content: {
                        wrap: 'construction-content__date',
                        title: 'construction-content__date-title',
                        desc: 'construction-content__date-desc'
                    }
                };

                this.fancyId = 'construction-gallery';
                this.fancyBox = null;

                this.$yearNav = this.$container.find('.' + this.classes.yearNav.container);
                this.$timeLine = this.$container.find('.' + this.classes.timeLine.container);
                this.$timelineActual = this.$container.find('.' + this.classes.timeLine.actual);
                this.$timelinePlanned = this.$container.find('.' + this.classes.timeLine.planned);

                this.$wrapper = this.$container.find('.' + this.classes.slider.wrap);
                this.$slider = this.$container.find('.' + this.classes.slider.container);
                this.$slidenav = this.$container.find('.' + this.classes.navSlider.container);
                this.$statusCurrent = this.$container.find('.' + this.classes.navSlider.current);
                this.$statusTotal = this.$container.find('.' + this.classes.navSlider.total);
                this.$zoomBtn = this.$container.find('.' + this.classes.slider.zoomBtn);

                this.$contentWrap = this.$container.find('.' + this.classes.content.wrap);
                this.$contentTitle = this.$container.find('.' + this.classes.content.title);
                this.$contentDesc = this.$container.find('.' + this.classes.content.desc);

                this.years = null;
                this.currentYear = null;
                this.currentMonth = null;
                this.currentDay = -1;
                this.cache = {};

                this.getData().done(function (years) {
                    if (!years.length) {
                        _this.disable();
                        return;
                    }
                    ;
                    _this.years = years;
                    _this.currentYear = _this._findStartYear();
                    if (!_this.currentYear) {
                        _this.disable();
                        return;
                    }
                    _this.currentMonth = _this._findCurrentMonth(_this.currentYear);
                    _this.buildYearNav();
                    _this.buildTimeline(_this.currentYear);
                    _this.buildSliders();
                    _this.setSlides(_this.currentMonth);
                    _this.bindEvents();
                });
            }

            _createClass(ConstructionCourse, [{
                key: 'buildYearNav',
                value: function buildYearNav() {

                    var html = '';

                    var _iteratorNormalCompletion = true;
                    var _didIteratorError = false;
                    var _iteratorError = undefined;

                    try {
                        for (var _iterator = this.years[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
                            var y = _step.value;

                            var className = this.classes.yearNav.item + (this.currentYear.year == y.year ? ' ' + this.classes.yearNav.active : '');
                            html += '<li class="' + className + '">' + y.year + '</li>';
                        }
                    } catch (err) {
                        _didIteratorError = true;
                        _iteratorError = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion && _iterator.return) {
                                _iterator.return();
                            }
                        } finally {
                            if (_didIteratorError) {
                                throw _iteratorError;
                            }
                        }
                    }

                    $(html).appendTo(this.$yearNav);
                }
            }, {
                key: 'getYear',
                value: function getYear(year) {

                    if (!this.years || !this.years.length) return false;
                    var found = false;

                    var _iteratorNormalCompletion2 = true;
                    var _didIteratorError2 = false;
                    var _iteratorError2 = undefined;

                    try {
                        for (var _iterator2 = this.years[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {
                            var y = _step2.value;

                            if (y.year == year) found = y;
                        }
                    } catch (err) {
                        _didIteratorError2 = true;
                        _iteratorError2 = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion2 && _iterator2.return) {
                                _iterator2.return();
                            }
                        } finally {
                            if (_didIteratorError2) {
                                throw _iteratorError2;
                            }
                        }
                    }

                    return found;
                }
            }, {
                key: 'getTimeline',
                value: function getTimeline(yearObj) {

                    var year = yearObj.year;

                    if (!this.cache[year]) {

                        //let yearObj = this.getYear(year);

                        if (yearObj) {

                            this.cache[year] = '';

                            var _iteratorNormalCompletion3 = true;
                            var _didIteratorError3 = false;
                            var _iteratorError3 = undefined;

                            try {
                                for (var _iterator3 = yearObj.month[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {
                                    var m = _step3.value;


                                    var className = this.classes.timeLine.item;

                                    if (m === null) {
                                        className += '  ' + this.classes.timeLine.disabled;
                                        this.cache[year] += '<li class="' + className + '"></li>';
                                        continue;
                                    }
                                    ;
                                    var subtitle = m.subtitle || yearObj.year;
                                    className += m.caption_actual ? ' ' + this.classes.timeLine.hidden : '';
                                    className += m.days ? '' : ' ' + this.classes.timeLine.disabled;
                                    this.cache[year] += '<li class="' + className + '">';
                                    this.cache[year] += m.caption_actual ? '<div class="construction-timeline__percent-actual">' + m.caption_actual + '</div>' : '';
                                    this.cache[year] += m.caption_planned ? '<div class="construction-timeline__percent-planned">' + m.caption_planned + '</div>' : '';
                                    this.cache[year] += '<div class="construction-timeline__content-wrap">\n              <h6 class="construction-timeline__title">' + m.title + '</h6>\n              <p class="construction-timeline__subtitle">' + subtitle + '</p>\n            </div>\n          </li>';
                                }
                            } catch (err) {
                                _didIteratorError3 = true;
                                _iteratorError3 = err;
                            } finally {
                                try {
                                    if (!_iteratorNormalCompletion3 && _iterator3.return) {
                                        _iterator3.return();
                                    }
                                } finally {
                                    if (_didIteratorError3) {
                                        throw _iteratorError3;
                                    }
                                }
                            }
                        } else {
                            return false;
                        }
                    }

                    return this.cache[year];
                }
            }, {
                key: 'buildTimeline',
                value: function buildTimeline(year) {
                    var _this2 = this;

                    var html = this.getTimeline(year);

                    if (html) {
                        $(html).appendTo(this.$timeLine.empty().removeClass('is-ready'));
                        setTimeout(function () {
                            return _this2.$timeLine.addClass('is-ready');
                        }, 150);
                    }
                }
            }, {
                key: '_findStartYear',
                value: function _findStartYear() {

                    var startYear = false;
                    var currentYear = new Date().getFullYear();
                    var currentYearObj = this.getYear(currentYear);

                    if (currentYearObj && ~this._findCurrentMonth(currentYearObj)) {

                        startYear = currentYearObj;
                    } else {

                        var yearIdx = this.years.length;

                        while (yearIdx > 0) {
                            yearIdx--;
                            if (~this._findCurrentMonth(this.years[yearIdx])) {
                                startYear = this.years[yearIdx];
                            }
                        }
                    }

                    return startYear;
                }
            }, {
                key: '_findCurrentMonth',
                value: function _findCurrentMonth(year) {

                    var currentMonth = -1;

                    for (var i in year.month) {
                        if (!year.month[i]) continue;
                        if (year.month[i].caption_actual && year.month[i].days) {
                            currentMonth = i;
                        }
                    }

                    if (!~currentMonth) {
                        var _i = year.month.length;
                        while (_i > 0) {
                            _i--;
                            if (year.month[_i].days) {
                                currentMonth = _i;
                                break;
                            }
                        }
                    }

                    return currentMonth;
                }
            }, {
                key: 'buildSliders',
                value: function buildSliders() {

                    this.$slider.slick({
                        slidesToShow: 1,
                        slidesToScroll: 1,
                        arrows: true,
                        infinite: true,
                        asNavFor: this.$slidenav,
                        nextArrow: this.classes.slider.arrLeftSelector,
                        prevArrow: this.classes.slider.arrRightSelector
                    });
                    this.$slider.on('afterChange', function () {
                        setTimeout(function () {
                            window.dispatchEvent(new Event('resize'));
                        }, 50);
                    });

                    this.$slidenav.slick({
                        slidesToShow: 7,
                        slidesToScroll: 1,
                        asNavFor: this.$slider,
                        focusOnSelect: true,
                        infinite: true,
                        responsive: [{
                            breakpoint: 1024,
                            settings: {
                                slidesToShow: 5,
                                infinite: true
                            }
                        }]
                    });
                }
            }, {
                key: 'setSlides',
                value: function setSlides(month) {

                    var monthObj = this.currentYear.month[month];
                    var days = monthObj.days;
                    if (!days.length) return;

                    // reset global
                    this.currentMonth = month;
                    this.$timeLine.find('.' + this.classes.timeLine.item).removeClass(this.classes.timeLine.active).eq(month).addClass(this.classes.timeLine.active);
                    // green timeline styles
                    var width = monthObj.caption_actual && monthObj.caption_planned ? parseFloat(monthObj.caption_actual) / parseFloat(monthObj.caption_planned) * this.MONTH_PERCENT : this.MONTH_PERCENT;

                    width += (month - 1) * this.MONTH_PERCENT;
                    if (width <= 0) {
                        width = 0;
                    }
                    if (width >= 1) {
                        width = 1;
                    }
                    this.$timelineActual.css({
                        transform: 'scaleX(' + width + ')'
                    });

                    var widthYellow = month * this.MONTH_PERCENT;

                    this.$timelinePlanned.css({
                        transform: 'scaleX(' + widthYellow + ')'
                    });

                    // remove previouse slides
                    if (this.$slider.slick('getSlick').slideCount > 0) {
                        this.$wrapper.css('opacity', 0);
                        this.$slider.slick('slickRemove', null, null, true);
                        this.$slidenav.slick('slickRemove', null, null, true);
                    }

                    var _iteratorNormalCompletion4 = true;
                    var _didIteratorError4 = false;
                    var _iteratorError4 = undefined;

                    try {
                        for (var _iterator4 = days[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {
                            var day = _step4.value;

                            var mainSlide = '<li class="' + this.classes.slider.slide + '" href="' + day.img + '" data-fancybox="' + this.fancyId + '">\n                        <img src="' + day.img + '" alt="">\n                      </li>';
                            var navSlide = '<li class="' + this.classes.navSlider.slide + '">\n                        <img src="' + day.img + '" alt="">\n                      </li>';
                            this.$slider.slick('slickAdd', mainSlide);
                            this.$slidenav.slick('slickAdd', navSlide);
                        }

                        // set last day on init
                    } catch (err) {
                        _didIteratorError4 = true;
                        _iteratorError4 = err;
                    } finally {
                        try {
                            if (!_iteratorNormalCompletion4 && _iterator4.return) {
                                _iterator4.return();
                            }
                        } finally {
                            if (_didIteratorError4) {
                                throw _iteratorError4;
                            }
                        }
                    }

                    if (this.currentDay === -1) {
                        // this.currentDay = days.length - 1;
                        this.currentDay = 0;
                        //this.$slider.slick('slickGoTo', this.currentDay, true);
                        this.$slidenav.slick('slickGoTo', this.currentDay, true);
                    } else {
                        this.currentDay = 0;
                    }

                    this.$wrapper.animate({
                        opacity: 1
                    }, 1000);
                    //this.setContent(this.currentMonth, this.currentDay);
                    this.setStatus();
                    this.initFancyBox();
                }
            }, {
                key: 'setStatus',
                value: function setStatus() {

                    var currSlide = this.$slider.slick('slickCurrentSlide');
                    var current = currSlide + 1;
                    var total = this.$slider.slick('getSlick').slideCount;

                    current = current < 10 ? '0' + current : current;
                    total = total < 10 ? '0' + total : total;

                    this.$statusCurrent.text(current);
                    this.$statusTotal.text(total);

                    this.setContent(this.currentMonth, currSlide);
                }
            }, {
                key: 'bindEvents',
                value: function bindEvents() {
                    var _this3 = this;

                    this.$slider.on('afterChange', function () {
                        _this3.setStatus();
                    });

                    var self = this;

                    // choose month
                    this.$timeLine.on('click', '.' + this.classes.timeLine.item + ':not(.' + this.classes.timeLine.disabled + ')', function (e) {
                        e.preventDefault();
                        var $target = $(this);
                        var month = self.$timeLine.find('.' + self.classes.timeLine.item).index($target);
                        self.setSlides(month);
                        window.dispatchEvent(new Event('resize'));
                    });

                    // choose year
                    this.$yearNav.on('click', '.' + this.classes.yearNav.item + ':not(.' + this.classes.yearNav.active + ')', function (e) {
                        e.preventDefault();
                        var $target = $(this);
                        var newYearIdx = self.$yearNav.find('.' + self.classes.yearNav.item).index($target);
                        var newMonth = self._findCurrentMonth(self.years[newYearIdx]);

                        // if no active days in year
                        if (newMonth === -1) {
                            return;
                        }

                        self.currentYear = self.years[newYearIdx];
                        self.buildTimeline(self.currentYear);
                        self.setSlides(newMonth);
                        $target.addClass(self.classes.yearNav.active).siblings().removeClass(self.classes.yearNav.active);
                    });

                    // init zoom btn click
                    this.$zoomBtn.on('click', function (e) {
                        e.preventDefault();
                        _this3.$zoomBtn.parent().find('.slick-active').trigger('click');
                    });
                }
            }, {
                key: 'initFancyBox',
                value: function initFancyBox() {

                    // set dom elems to var
                    var $header = $('.header'),
                        $window = $(window);

                    // remove header bouncing/ add custom nav elems
                    this.fancyBox = $('[data-fancybox="' + this.fancyId + '"]:not(.slick-cloned)').fancybox({
                        beforeShow: function beforeShow() {
                            $window.width() > 1200 ? $header.css({
                                'padding-right': '17px'
                            }) : '';
                        },
                        afterClose: function afterClose() {
                            $window.width() > 1200 ? $header.css({
                                'padding-right': '0'
                            }) : '';
                        },
                        idleTime: Infinity,
                        buttons: ['close'],
                        tpl: {
                            closeBtn: '<a title="Close" class="fancybox-item fancybox-close myClose" href="javascript:;"></a>'
                        }
                    });
                }
            }, {
                key: 'setContent',
                value: function setContent(monthIdx) {
                    var day = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;


                    var monthObj = this.currentYear.month[monthIdx];

                    if (monthObj.days.length > day) {
                        var cw = this.$contentWrap.filter(':visible');
                        cw.hide();
                        this.$contentTitle.html(monthObj.days[day].title);
                        this.$contentDesc.html(monthObj.days[day].text);
                        cw.fadeIn();
                    }
                }
            }, {
                key: 'getData',
                value: function getData() {

                    var self = this;

                    return $.ajax({
                        url: self.url,
                        method: self.method,
                        dataType: 'json'
                    });
                }
            }, {
                key: 'disable',
                value: function disable() {

                    this.$container.hide();
                    //this = null;
                }
            }]);

            return ConstructionCourse;
        }();

        exports.default = ConstructionCourse;

        /***/
    }),
    /* 374 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        function expandableList() {

            $(document).on('click', '[data-list-show]', function (e) {

                e.preventDefault();

                var $btn = $(this);
                var id = $btn.data('list-show');
                if (!id) {
                    console.error('No list id in ', e.target);
                    return;
                }

                var $list = $('[data-list-items="' + id + '"]');
                if (!$list.length) {
                    console.error('No list for button ', e.target);
                    return;
                }

                var showState = $btn.hasClass('js-state-show');

                if (showState) {
                    $btn.removeClass('js-state-show');
                    $list.slideUp();
                } else {
                    $btn.addClass('js-state-show');
                    $list.slideDown();
                }
            });
        }

        exports.expandableList = expandableList;

        /***/
    }),
    /* 375 */
    /***/ (function (module, exports, __webpack_require__) {

        "use strict";


        Object.defineProperty(exports, "__esModule", {
            value: true
        });

        /**
         *
         * Wrap tables with special classes for visualisation
         *
         * $tables - jQuery collection
         */

        function wrapTables($tables) {

            var wrappers = ['<div class="table__wrap">', '<div class="table">'];

            $tables.each(function (i, table) {
                var $table = $(table);
                if (!$table.parent().hasClass('article__content')) return;
                $.each(wrappers, function (undefined, wrapper) {
                    $table = $table.wrap(wrapper).parent();
                });
            });
        }

        exports.wrapTables = wrapTables;

        /***/
    })
], [136]);
//# sourceMappingURL=index.js.map